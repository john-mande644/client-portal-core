////////////////////////////////////////////////////////////////////////
//
// Message.java
//
// This file was generated by MapForce 2015r3.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

package com.altova.text.edi;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import java.util.HashSet;

public class Message {
private final static Logger log =  LogManager.getLogger();
	private HashSet<String> mSegments;
	private Particle mRootParticle;
	private String msMessageType;
    private boolean mShouldCompleteSingleConditions = false;
    private boolean mShouldCompleteSingleValues = false;
    private boolean mShouldCompleteHLSegments = false;

	public Message(String sMessageType, Particle rootParticle, HashSet<String> segments, int completeHL, int completeSingleValues, int completeSingleConditions) {
		msMessageType = sMessageType;
		mRootParticle = rootParticle;
		mSegments = segments;
        mShouldCompleteHLSegments = completeHL == 1;
        mShouldCompleteSingleConditions = completeSingleConditions == 1;
        mShouldCompleteSingleValues = completeSingleValues == 1;
	}

	public Particle getRootParticle() {
		return mRootParticle;
	}
	
	public boolean hasSegment( String sSegmentName ) {
		return mSegments.contains(sSegmentName);
	}

	public String getMessageType() {
		return msMessageType;
	}

    public boolean shouldCompleteSingleConditions() {
        return mShouldCompleteSingleConditions;
    }

    public boolean shouldCompleteSingleValues() {
        return mShouldCompleteSingleValues;
    }

    public boolean shouldCompleteHLSegments() {
        return mShouldCompleteHLSegments;
    }
}
