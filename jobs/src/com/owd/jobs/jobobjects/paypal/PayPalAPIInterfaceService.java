package com.owd.jobs.jobobjects.paypal;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.1-02/02/2007 03:56 AM(vivekp)-FCS
 * Generated source version: 2.1
 */
@WebServiceClient(name = "PayPalAPIInterfaceService", targetNamespace = "urn:ebay:api:PayPalAPI", wsdlLocation = "https://www.paypal.com/wsdl/PayPalSvc.wsdl")
public class PayPalAPIInterfaceService
        extends Service
{
private final static Logger log =  LogManager.getLogger();

    private final static URL PAYPALAPIINTERFACESERVICE_WSDL_LOCATION;

    static
    {
        URL url = null;
        try
        {
            url = new URL("https://www.paypal.com/wsdl/PayPalSvc.wsdl");
        } catch (MalformedURLException e)
        {
            e.printStackTrace();
        }
        PAYPALAPIINTERFACESERVICE_WSDL_LOCATION = url;
    }

    public PayPalAPIInterfaceService(URL wsdlLocation, QName serviceName)
    {
        super(wsdlLocation, serviceName);
    }

    public PayPalAPIInterfaceService()
    {
        super(PAYPALAPIINTERFACESERVICE_WSDL_LOCATION, new QName("urn:ebay:api:PayPalAPI", "PayPalAPIInterfaceService"));
    }

    /**
     * @return returns PayPalAPIInterface
     */
    @WebEndpoint(name = "PayPalAPI")
    public PayPalAPIInterface getPayPalAPI()
    {
        return (PayPalAPIInterface) super.getPort(new QName("urn:ebay:api:PayPalAPI", "PayPalAPI"), PayPalAPIInterface.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns PayPalAPIInterface
     */
    @WebEndpoint(name = "PayPalAPI")
    public PayPalAPIInterface getPayPalAPI(WebServiceFeature... features)
    {
        return (PayPalAPIInterface) super.getPort(new QName("urn:ebay:api:PayPalAPI", "PayPalAPI"), PayPalAPIInterface.class, features);
    }

    /**
     * @return returns PayPalAPIAAInterface
     */
    @WebEndpoint(name = "PayPalAPIAA")
    public PayPalAPIAAInterface getPayPalAPIAA()
    {
        return (PayPalAPIAAInterface) super.getPort(new QName("urn:ebay:api:PayPalAPI", "PayPalAPIAA"), PayPalAPIAAInterface.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns PayPalAPIAAInterface
     */
    @WebEndpoint(name = "PayPalAPIAA")
    public PayPalAPIAAInterface getPayPalAPIAA(WebServiceFeature... features)
    {
        return (PayPalAPIAAInterface) super.getPort(new QName("urn:ebay:api:PayPalAPI", "PayPalAPIAA"), PayPalAPIAAInterface.class, features);
    }

}
