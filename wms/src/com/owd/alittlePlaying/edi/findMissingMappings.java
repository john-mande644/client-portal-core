package com.owd.alittlePlaying.edi;

import com.owd.hibernate.HibernateSession;
import org.hibernate.Query;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by danny on 12/4/2017.
 */
public class findMissingMappings {



    public static void main(String[] args){

        List<String> l = new ArrayList<String>();
        l.add("883096131496");
        l.add("883096001928");
        l.add("883096138495");
        l.add("883096001898");
        l.add("883096002062");
        l.add("883096010791");
        l.add("883096136576");
        l.add("883096136590");
        l.add("883096120940");
        l.add("883096150213");
        l.add("883096001850");
        l.add("883096001881");
        l.add("883096103998");
        l.add("883096004882");
        l.add("883096035701");
        l.add("883096035732");
        l.add("883096001515");
        l.add("883096032632");
        l.add("883096020479");
        l.add("883096004783");
        l.add("883096091868");
        l.add("883096091127");
        l.add("883096020455");
        l.add("883096017813");
        l.add("883096040316");
        l.add("883096040255");
        l.add("883096051916");
        l.add("883096051930");
        l.add("883096024545");
        l.add("883096024552");
        l.add("883096024569");
        l.add("883096051862");
        l.add("883096051886");
        l.add("883096051893");
        l.add("883096024989");
        l.add("883096024613");
        l.add("883096051954");
        l.add("883096051961");
        l.add("883096051978");
        l.add("883096051985");
        l.add("883096004769");
        l.add("883096001539");
        l.add("883096001546");
        l.add("883096004837");
        l.add("883096026846");
        l.add("883096002185");
        l.add("883096040156");
        l.add("883096040217");
        l.add("883096001676");
        l.add("883096017158");
        l.add("883096001669");
        l.add("883096013228");
        l.add("883096144021");
        l.add("883096013334");
        l.add("883096013686");
        l.add("883096013709");
        l.add("883096013693");
        l.add("883096021520");
        l.add("883096021537");
        l.add("883096019459");
        l.add("883096034322");
        l.add("883096001768");
        l.add("883096001300");
        l.add("883096001720");
        l.add("883096157281");
        l.add("883096090656");
        l.add("883096090465");
        l.add("883096079248");
        l.add("883096138464");
        l.add("883096136583");
        l.add("883096090335");
        l.add("883096021551");
        l.add("883096021568");
        l.add("883096001096");
        l.add("883096079224");
        l.add("883096200765");
        l.add("883096200802");
        l.add("883096146735");
        l.add("883096265450");
        l.add("883096146957");
        l.add("883096265481");
        l.add("883096146858");
        l.add("883096161677");
        l.add("883096146780");
        l.add("883096146810");
        l.add("883096161691");
        l.add("883096136262");
        l.add("883096136286");
        l.add("883096136279");
        l.add("883096136323");
        l.add("883096252764");
        l.add("883096013358");
        l.add("883096013198");
        l.add("883096013211");
        l.add("883096136255");
        l.add("883096136330");
        l.add("883096013631");
        l.add("883096252900");
        l.add("883096252924");
        l.add("883096252696");
        l.add("883096252702");
        l.add("883096252719");
        l.add("883096252849");
        l.add("883096252801");
        l.add("883096252818");
        l.add("883096252832");
        l.add("883096252726");
        l.add("883096252733");
        l.add("883096252788");
        l.add("883096252825");
        l.add("883096178767");
        l.add("883096312529");
        l.add("883096203773");
        l.add("883096013679");
        l.add("883096158721");
        l.add("883096001225");
        l.add("883096091028");
        l.add("883096051909");
        l.add("883096203995");
        l.add("883096026662");
        l.add("883096097181");
        l.add("883096010784");
        l.add("883096034278");
        l.add("883096091448");
        l.add("883096032656");
        l.add("883096090861");
        l.add("883096040248");
        l.add("883096150152");
        l.add("883096133407");
        l.add("883096119265");
        l.add("883096010814");
        l.add("883096203759");
        l.add("883096309109");
        l.add("883096041788");
        l.add("883096013204");
        l.add("883096203629");
        l.add("883096041900");
        l.add("883096019725");
        l.add("883096118954");
        l.add("883096203599");
        l.add("883096097174");
        l.add("883096120988");
        l.add("883096012429");
        l.add("883096026907");
        l.add("883096090274");
        l.add("883096159209");
        l.add("883096119289");
        l.add("883096090120");
        l.add("883096091431");
        l.add("883096145035");
        l.add("883096119418");
        l.add("883096091400");
        l.add("883096001911");
        l.add("883096143055");
        l.add("883096138686");
        l.add("883096144854");
        l.add("883096159193");
        l.add("883096041894");
        l.add("883096019756");
        l.add("883096013716");
        l.add("883096040170");
        l.add("883096203568");
        l.add("883096012757");
        l.add("883096120971");
        l.add("883096204008");
        l.add("883096013365");
        l.add("883096191568");
        l.add("883096019701");
        l.add("883096118916");
        l.add("883096312536");
        l.add("883096203742");
        l.add("883096040224");
        l.add("883096090137");
        l.add("883096091875");
        l.add("883096204046");
        l.add("883096152491");
        l.add("883096191582");
        l.add("883096041801");
        l.add("883096125822");
        l.add("883096024842");
        l.add("883096090892");
        l.add("883096097150");
        l.add("883096128984");
        l.add("883096203803");
        l.add("883096097112");
        l.add("883096019732");
        l.add("883096090564");
        l.add("883096159216");
        l.add("883096118930");
        l.add("883096097105");
        l.add("883096203728");
        l.add("883096203506");
        l.add("883096019640");
        l.add("883096119272");
        l.add("883096026617");
        l.add("883096020363");
        l.add("883096178774");
        l.add("883096017455");
        l.add("883096010883");
        l.add("883096011378");
        l.add("883096150206");
        l.add("883096090885");
        l.add("883096021407");
        l.add("883096091141");
        l.add("883096059233");
        l.add("883096013617");
        l.add("883096178743");
        l.add("883096090090");
        l.add("883096203483");
        l.add("883096138662");
        l.add("883096004622");
        l.add("883096120964");
        l.add("883096034285");
        l.add("883096118817");
        l.add("883096138693");
        l.add("883096203544");
        l.add("883096034247");
        l.add("883096136248");
        l.add("883096010760");
        l.add("883096004578");
        l.add("883096001393");
        l.add("883096088042");
        l.add("883096021353");
        l.add("883096125846");
        l.add("883096125815");
        l.add("883096119067");
        l.add("883096191551");
        l.add("883096034223");
        l.add("883096119722");
        l.add("883096021445");
        l.add("883096032687");
        l.add("883096115823");
        l.add("883096001270");
        l.add("883096144267");
        l.add("883096191575");
        l.add("883096017875");
        l.add("883096119111");
        l.add("883096012740");
        l.add("883096011392");
        l.add("883096040323");
        l.add("883096160397");
        l.add("883096020264");
        l.add("883096090823");
        l.add("883096138679");
        l.add("883096001232");
        l.add("883096118961");
        l.add("883096309116");
        l.add("883096032595");
        l.add("883096125839");
        l.add("883096143505");
        l.add("883096191537");
        l.add("883096001348");
        l.add("883096090267");
        l.add("883096011385");
        l.add("883096023180");
        l.add("883096079316");
        l.add("883096097143");
        l.add("883096019657");
        l.add("883096097167");
        l.add("883096133421");
        l.add("883096203582");
        l.add("883096178736");
        l.add("883096020288");
        l.add("883096097136");
        l.add("883096144250");
        l.add("883096144014");
        l.add("883096023173");
        l.add("883096091455");
        l.add("883096090519");
        l.add("883096309123");
        l.add("883096191544");
        l.add("883096119425");
        l.add("883096416326");
        l.add("883096638766");
        l.add("883096638797");
        l.add("883096638902");
        l.add("883096639022");
        l.add("883096639121");
        l.add("883096639084");
        l.add("883096638933");
        l.add("883096639077");
        l.add("883096639114");
        l.add("883096638803");
        l.add("883096639091");
        l.add("883096638919");
        l.add("883096639107");
        l.add("883096638773");
        l.add("883096638810");
        l.add("883096638780");
        l.add("883096548324");
        l.add("883096548331");
        l.add("883096548270");
        l.add("883096548362");
        l.add("883096416463");
        l.add("883096548294");
        l.add("883096548348");
        l.add("883096548355");
        l.add("883096548249");
        l.add("883096416494");
        l.add("883096548300");
        l.add("883096548287");


        findMissingItems(l,"471","Amazon");

        System.out.println("Badd");
        for(String s: bad){
            System.out.println(s);
        }

    }
    public static List<String> bad = new ArrayList<String>();




    public static void findMissingItems(List<String> items, String clientId, String store){

        for(String s:items) {
            try {
                String sql = "select owd_sku from owd_inventory_sku_maps where upc = :upc and client_fkey = :clientId and type = :store";
                Query q = HibernateSession.currentSession().createSQLQuery(sql);

                q.setParameter("upc",s);
                q.setParameter("clientId",clientId);
                q.setParameter("store",store);
                if(q.list().size()==0){
                    bad.add(s);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }
}
