
package com.owd.connectship.soap;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "AMPServices", targetNamespace = "urn:connectship-com:ampcore", wsdlLocation = "http://172.16.3.201/amp/wsdl")
public class AMPServices
    extends Service
{
private final static Logger log =  LogManager.getLogger();

    private final static URL AMPSERVICES_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = com.owd.connectship.soap.AMPServices.class.getResource(".");
            url = new URL(baseUrl, "http://172.16.3.201/amp/wsdl");
        } catch (MalformedURLException e) {
            log.warn("Failed to create URL for the wsdl Location: 'http://172.16.3.201/amp/wsdl', retrying as a local file");
            log.warn(e.getMessage());
        }
        AMPSERVICES_WSDL_LOCATION = url;
    }

    public AMPServices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AMPServices() {
        super(AMPSERVICES_WSDL_LOCATION, new QName("urn:connectship-com:ampcore", "AMPServices"));
    }

    /**
     * 
     * @return
     *     returns CoreXmlPort
     */
    @WebEndpoint(name = "AMPSoapService")
    public CoreXmlPort getAMPSoapService() {
        return super.getPort(new QName("urn:connectship-com:ampcore", "AMPSoapService"), CoreXmlPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CoreXmlPort
     */
    @WebEndpoint(name = "AMPSoapService")
    public CoreXmlPort getAMPSoapService(WebServiceFeature... features) {
        return super.getPort(new QName("urn:connectship-com:ampcore", "AMPSoapService"), CoreXmlPort.class, features);
    }

}
