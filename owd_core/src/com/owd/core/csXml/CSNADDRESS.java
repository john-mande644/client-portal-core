/*

 * DO NOT EDIT!

 *

 * This file was generated by the Breeze XML Studio Java Export Wizard.

 *

 *        Project: connectship

 *     Class Name: CSNADDRESS

 *           Date: Fri Feb 22 21:58:50 PST 2002

 * Breeze Version: 2.2.1 build 114

 *

 * IMPORTANT: Please see your Breeze license for more information on

 *            where and how this generated code may be used.

 *

 */


package com.owd.core.csXml;


import com.tbf.xml.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Vector;


/**
 * CSNADDRESS class.
 */

public class CSNADDRESS

        implements com.tbf.xml.XmlObject, Validateable, java.io.Serializable {
private final static Logger log =  LogManager.getLogger();


    /**
     * Constant for "CSNCOUNTRYSYMBOL" node name.
     */

    public static final String $CSNCOUNTRYSYMBOL = "CSNCOUNTRYSYMBOL";


    /**
     * Constant for "CSNPHONE" node name.
     */

    public static final String $CSNPHONE = "CSNPHONE";


    /**
     * Constant for "CSNCONSIGNEECODE" node name.
     */

    public static final String $CSNCONSIGNEECODE = "CSNCONSIGNEECODE";


    /**
     * Constant for "CSNRESIDENTIAL" node name.
     */

    public static final String $CSNRESIDENTIAL = "CSNRESIDENTIAL";


    /**
     * Constant for "CSNADDRESS2" node name.
     */

    public static final String $CSNADDRESS2 = "CSNADDRESS2";


    /**
     * Constant for "CSNCITY" node name.
     */

    public static final String $CSNCITY = "CSNCITY";


    /**
     * Constant for "CSNADDRESS1" node name.
     */

    public static final String $CSNADDRESS1 = "CSNADDRESS1";


    /**
     * Constant for "CSNCONSIGNEEACCOUNT" node name.
     */

    public static final String $CSNCONSIGNEEACCOUNT = "CSNCONSIGNEEACCOUNT";


    /**
     * Constant for "CSNSTATEPROVINCE" node name.
     */

    public static final String $CSNSTATEPROVINCE = "CSNSTATEPROVINCE";


    /**
     * Constant for "CSNCONTACT" node name.
     */

    public static final String $CSNCONTACT = "CSNCONTACT";


    /**
     * Constant for "CSNCOMPANY" node name.
     */

    public static final String $CSNCOMPANY = "CSNCOMPANY";


    /**
     * Constant for "CSNPOSTALCODE" node name.
     */

    public static final String $CSNPOSTALCODE = "CSNPOSTALCODE";


    /**
     * Constant for "CSNADDRESS" node name.
     */

    public static final String $CSNADDRESS = "CSNADDRESS";


    protected String _CSNCOMPANY = null;

    protected String _CSNCONTACT = null;

    protected String _CSNADDRESS1 = null;

    protected String _CSNADDRESS2 = null;

    protected String _CSNCITY = null;

    protected String _CSNSTATEPROVINCE = null;

    protected String _CSNPOSTALCODE = null;

    protected String _CSNRESIDENTIAL = null;

    protected String _CSNPHONE = null;

    protected String _CSNCOUNTRYSYMBOL = null;

    protected String _CSNCONSIGNEECODE = null;

    protected String _CSNCONSIGNEEACCOUNT = null;


    /**
     * Storage for UNEXPECTED_XML errors.
     */

    protected Vector _unexpected_xml_errors_ = null;


    /**
     * Default no args constructor.
     */

    public CSNADDRESS() {

    }


    /**
     * Creates and populates an instance from the provided parse tree.
     *
     * @param xml the parse tree
     */

    public CSNADDRESS(XmlElement xml) {

        fromXml(xml);

    }


    /**
     * Get the CSNCOMPANY property.
     */

    public String getCSNCOMPANY() {

        return (_CSNCOMPANY);

    }


    /**
     * Set the CSNCOMPANY property.
     */

    public void setCSNCOMPANY(String newValue) {

        _CSNCOMPANY = newValue;

    }


    /**
     * Checks for whether CSNCOMPANY is set or not.
     *
     * @returns true if CSNCOMPANY is set, false if not
     */

    public boolean hasCSNCOMPANY() {

        return (_CSNCOMPANY != null);

    }


    /**
     * Discards CSNCOMPANY's value.
     */

    public void deleteCSNCOMPANY() {

        _CSNCOMPANY = null;

    }


    /**
     * Get the CSNCONTACT property.
     */

    public String getCSNCONTACT() {

        return (_CSNCONTACT);

    }


    /**
     * Set the CSNCONTACT property.
     */

    public void setCSNCONTACT(String newValue) {

        _CSNCONTACT = newValue;

    }


    /**
     * Checks for whether CSNCONTACT is set or not.
     *
     * @returns true if CSNCONTACT is set, false if not
     */

    public boolean hasCSNCONTACT() {

        return (_CSNCONTACT != null);

    }


    /**
     * Discards CSNCONTACT's value.
     */

    public void deleteCSNCONTACT() {

        _CSNCONTACT = null;

    }


    /**
     * Get the CSNADDRESS1 property.
     */

    public String getCSNADDRESS1() {

        return (_CSNADDRESS1);

    }


    /**
     * Set the CSNADDRESS1 property.
     */

    public void setCSNADDRESS1(String newValue) {

        _CSNADDRESS1 = newValue;

    }


    /**
     * Checks for whether CSNADDRESS1 is set or not.
     *
     * @returns true if CSNADDRESS1 is set, false if not
     */

    public boolean hasCSNADDRESS1() {

        return (_CSNADDRESS1 != null);

    }


    /**
     * Discards CSNADDRESS1's value.
     */

    public void deleteCSNADDRESS1() {

        _CSNADDRESS1 = null;

    }


    /**
     * Get the CSNADDRESS2 property.
     */

    public String getCSNADDRESS2() {

        return (_CSNADDRESS2);

    }


    /**
     * Set the CSNADDRESS2 property.
     */

    public void setCSNADDRESS2(String newValue) {

        _CSNADDRESS2 = newValue;

    }


    /**
     * Checks for whether CSNADDRESS2 is set or not.
     *
     * @returns true if CSNADDRESS2 is set, false if not
     */

    public boolean hasCSNADDRESS2() {

        return (_CSNADDRESS2 != null);

    }


    /**
     * Discards CSNADDRESS2's value.
     */

    public void deleteCSNADDRESS2() {

        _CSNADDRESS2 = null;

    }


    /**
     * Get the CSNCITY property.
     */

    public String getCSNCITY() {

        return (_CSNCITY);

    }


    /**
     * Set the CSNCITY property.
     */

    public void setCSNCITY(String newValue) {

        _CSNCITY = newValue;

    }


    /**
     * Checks for whether CSNCITY is set or not.
     *
     * @returns true if CSNCITY is set, false if not
     */

    public boolean hasCSNCITY() {

        return (_CSNCITY != null);

    }


    /**
     * Discards CSNCITY's value.
     */

    public void deleteCSNCITY() {

        _CSNCITY = null;

    }


    /**
     * Get the CSNSTATEPROVINCE property.
     */

    public String getCSNSTATEPROVINCE() {

        return (_CSNSTATEPROVINCE);

    }


    /**
     * Set the CSNSTATEPROVINCE property.
     */

    public void setCSNSTATEPROVINCE(String newValue) {

        _CSNSTATEPROVINCE = newValue;

    }


    /**
     * Checks for whether CSNSTATEPROVINCE is set or not.
     *
     * @returns true if CSNSTATEPROVINCE is set, false if not
     */

    public boolean hasCSNSTATEPROVINCE() {

        return (_CSNSTATEPROVINCE != null);

    }


    /**
     * Discards CSNSTATEPROVINCE's value.
     */

    public void deleteCSNSTATEPROVINCE() {

        _CSNSTATEPROVINCE = null;

    }


    /**
     * Get the CSNPOSTALCODE property.
     */

    public String getCSNPOSTALCODE() {

        return (_CSNPOSTALCODE);

    }


    /**
     * Set the CSNPOSTALCODE property.
     */

    public void setCSNPOSTALCODE(String newValue) {

        _CSNPOSTALCODE = newValue;

    }


    /**
     * Checks for whether CSNPOSTALCODE is set or not.
     *
     * @returns true if CSNPOSTALCODE is set, false if not
     */

    public boolean hasCSNPOSTALCODE() {

        return (_CSNPOSTALCODE != null);

    }


    /**
     * Discards CSNPOSTALCODE's value.
     */

    public void deleteCSNPOSTALCODE() {

        _CSNPOSTALCODE = null;

    }


    /**
     * Get the CSNRESIDENTIAL property.
     */

    public String getCSNRESIDENTIAL() {

        return (_CSNRESIDENTIAL);

    }


    /**
     * Set the CSNRESIDENTIAL property.
     */

    public void setCSNRESIDENTIAL(String newValue) {

        _CSNRESIDENTIAL = newValue;

    }


    /**
     * Checks for whether CSNRESIDENTIAL is set or not.
     *
     * @returns true if CSNRESIDENTIAL is set, false if not
     */

    public boolean hasCSNRESIDENTIAL() {

        return (_CSNRESIDENTIAL != null);

    }


    /**
     * Discards CSNRESIDENTIAL's value.
     */

    public void deleteCSNRESIDENTIAL() {

        _CSNRESIDENTIAL = null;

    }


    /**
     * Get the CSNPHONE property.
     */

    public String getCSNPHONE() {

        return (_CSNPHONE);

    }


    /**
     * Set the CSNPHONE property.
     */

    public void setCSNPHONE(String newValue) {

        _CSNPHONE = newValue;

    }


    /**
     * Checks for whether CSNPHONE is set or not.
     *
     * @returns true if CSNPHONE is set, false if not
     */

    public boolean hasCSNPHONE() {

        return (_CSNPHONE != null);

    }


    /**
     * Discards CSNPHONE's value.
     */

    public void deleteCSNPHONE() {

        _CSNPHONE = null;

    }


    /**
     * Get the CSNCOUNTRYSYMBOL property.
     */

    public String getCSNCOUNTRYSYMBOL() {

        return (_CSNCOUNTRYSYMBOL);

    }


    /**
     * Set the CSNCOUNTRYSYMBOL property.
     */

    public void setCSNCOUNTRYSYMBOL(String newValue) {

        _CSNCOUNTRYSYMBOL = newValue;

    }


    /**
     * Checks for whether CSNCOUNTRYSYMBOL is set or not.
     *
     * @returns true if CSNCOUNTRYSYMBOL is set, false if not
     */

    public boolean hasCSNCOUNTRYSYMBOL() {

        return (_CSNCOUNTRYSYMBOL != null);

    }


    /**
     * Discards CSNCOUNTRYSYMBOL's value.
     */

    public void deleteCSNCOUNTRYSYMBOL() {

        _CSNCOUNTRYSYMBOL = null;

    }


    /**
     * Get the CSNCONSIGNEECODE property.
     */

    public String getCSNCONSIGNEECODE() {

        return (_CSNCONSIGNEECODE);

    }


    /**
     * Set the CSNCONSIGNEECODE property.
     */

    public void setCSNCONSIGNEECODE(String newValue) {

        _CSNCONSIGNEECODE = newValue;

    }


    /**
     * Checks for whether CSNCONSIGNEECODE is set or not.
     *
     * @returns true if CSNCONSIGNEECODE is set, false if not
     */

    public boolean hasCSNCONSIGNEECODE() {

        return (_CSNCONSIGNEECODE != null);

    }


    /**
     * Discards CSNCONSIGNEECODE's value.
     */

    public void deleteCSNCONSIGNEECODE() {

        _CSNCONSIGNEECODE = null;

    }


    /**
     * Get the CSNCONSIGNEEACCOUNT property.
     */

    public String getCSNCONSIGNEEACCOUNT() {

        return (_CSNCONSIGNEEACCOUNT);

    }


    /**
     * Set the CSNCONSIGNEEACCOUNT property.
     */

    public void setCSNCONSIGNEEACCOUNT(String newValue) {

        _CSNCONSIGNEEACCOUNT = newValue;

    }


    /**
     * Checks for whether CSNCONSIGNEEACCOUNT is set or not.
     *
     * @returns true if CSNCONSIGNEEACCOUNT is set, false if not
     */

    public boolean hasCSNCONSIGNEEACCOUNT() {

        return (_CSNCONSIGNEEACCOUNT != null);

    }


    /**
     * Discards CSNCONSIGNEEACCOUNT's value.
     */

    public void deleteCSNCONSIGNEEACCOUNT() {

        _CSNCONSIGNEEACCOUNT = null;

    }


    /**
     * Gets the XML tag name for this object.
     */

    public String getXmlTagName() {

        return ($CSNADDRESS);

    }


    /**
     * Gets the XML tag name for this class.
     */

    public static String getClassXmlTagName() {

        return ($CSNADDRESS);

    }


    /**
     * This flag is used to used to check whether
     * <p/>
     * the validators have been created.
     */

    transient protected static boolean _validators_created = false;



    /*

     * XML Validators

     */

    transient protected static XmlStringValidator

            _CSNCOMPANY_validator_ = null;

    transient protected static XmlStringValidator

            _CSNCONTACT_validator_ = null;

    transient protected static XmlStringValidator

            _CSNPHONE_validator_ = null;


    /**
     * Create the validators for this class.
     */

    protected static synchronized void createValidators() {


        if (_validators_created) {

            return;

        }


        _CSNCOMPANY_validator_ = new XmlStringValidator("CSNADDRESS.CSNCOMPANY", "Element",

                "CSNADDRESS/CSNCOMPANY", -1, -1, true);


        _CSNCONTACT_validator_ = new XmlStringValidator("CSNADDRESS.CSNCONTACT", "Element",

                "CSNADDRESS/CSNCONTACT", -1, -1, true);


        _CSNPHONE_validator_ = new XmlStringValidator("CSNADDRESS.CSNPHONE", "Element",

                "CSNADDRESS/CSNPHONE", -1, -1, true);


        _validators_created = true;

    }


    /**
     * Checks this object to see if it will produce valid XML.
     */

    public boolean isValid() {


        if (!(this instanceof Validateable)) {

            return (true);

        }


        Vector errors = ((Validateable) this).getValidationErrors(true);

        if (errors == null || errors.size() < 1) {

            return (true);

        }


        return (false);

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     */

    public Vector getValidationErrors() {

        return (getValidationErrors(false));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error) {

        return (getValidationErrors(return_on_error, true));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error, boolean traverse) {


        createValidators();


        Vector errors;

        if (_unexpected_xml_errors_ != null &&

                _unexpected_xml_errors_.size() > 0) {

            errors = (Vector) _unexpected_xml_errors_.clone();

            if (return_on_error) {

                return (errors);

            }

        } else {

            errors = new Vector();

        }


        XmlValidationError e;

        e = _CSNCOMPANY_validator_.validate(_CSNCOMPANY);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        e = _CSNCONTACT_validator_.validate(_CSNCONTACT);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        e = _CSNPHONE_validator_.validate(_CSNPHONE);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        if (errors.size() < 1) {

            return (null);

        }


        return (errors);

    }


    /**
     * Checks the XML to see whether it matches the
     * <p/>
     * XML contents of this class.
     */

    public static boolean matches(XmlElement xml) {


        if (xml == null) {

            return (false);

        }


        return (xml.equals($CSNADDRESS));

    }


    /**
     * This method unmarshals an XML document instance
     * <p/>
     * into an instance of this class.
     */

    public static CSNADDRESS unmarshal(InputStream in) throws Exception {


        CSNADDRESS obj = new CSNADDRESS();

        ObjectFactory.unmarshal(obj, in);

        return (obj);

    }


    /**
     * Populates this object with the values from the
     * <p/>
     * parsed XML.
     */

    public void fromXml(XmlElement xml) {


        if (xml == null) {

            return;

        }


        if (!xml.equals($CSNADDRESS)) {

            return;

        }





        /*

         * Get the contained XmlElement, this is what we process

         */

        xml = xml.getSubElementAt(0);

        if (xml == null) {

            return;

        }


        if (xml.equals($CSNCOMPANY)) {

            setCSNCOMPANY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNCONTACT)) {

            setCSNCONTACT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNADDRESS1)) {

            setCSNADDRESS1(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNADDRESS2)) {

            setCSNADDRESS2(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNCITY)) {

            setCSNCITY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNSTATEPROVINCE)) {

            setCSNSTATEPROVINCE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNPOSTALCODE)) {

            setCSNPOSTALCODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNRESIDENTIAL)) {

            setCSNRESIDENTIAL(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNPHONE)) {

            setCSNPHONE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNCOUNTRYSYMBOL)) {

            setCSNCOUNTRYSYMBOL(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNCONSIGNEECODE)) {

            setCSNCONSIGNEECODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CSNCONSIGNEEACCOUNT)) {

            setCSNCONSIGNEEACCOUNT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml != null) {


            _unexpected_xml_errors_ =

                    XmlValidationError.addUnexpectedXmlError(this, _unexpected_xml_errors_, xml);

            xml = xml.next();

        }

    }


    /**
     * This method marshals this object into an
     * <p/>
     * XML instance document.
     */

    public void marshal(OutputStream out) {

        toXml(out);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream) {

        toXml(stream, true);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream, String indent, boolean embed_files) {


        if (stream instanceof XmlOutputStream) {

            toXml(stream, embed_files);

        } else {

            FormattedOutputStream out =

                    new FormattedOutputStream(stream);

            out.setIndentString(indent);

            toXml(out, embed_files);

        }

    }


    /**
     * Serializes this object to XML.
     */

    public void toXml(OutputStream stream, boolean embed_files) {


        XmlOutputStream out = null;

        if (stream instanceof XmlOutputStream) {

            out = (XmlOutputStream) stream;

        } else {

            out = new RawOutputStream(stream);

        }


        out.writeStartTag(getXmlTagName(), false);

        out.incrementIndent();


        out.write($CSNCOMPANY,

                _CSNCOMPANY);

        out.write($CSNCONTACT,

                _CSNCONTACT);

        out.write($CSNADDRESS1,

                _CSNADDRESS1);

        out.write($CSNADDRESS2,

                _CSNADDRESS2);

        out.write($CSNCITY,

                _CSNCITY);

        out.write($CSNSTATEPROVINCE,

                _CSNSTATEPROVINCE);

        out.write($CSNPOSTALCODE,

                _CSNPOSTALCODE);

        out.write($CSNRESIDENTIAL,

                _CSNRESIDENTIAL);

        out.write($CSNPHONE,

                _CSNPHONE);

        out.write($CSNCOUNTRYSYMBOL,

                _CSNCOUNTRYSYMBOL);

        out.write($CSNCONSIGNEECODE,

                _CSNCONSIGNEECODE);

        out.write($CSNCONSIGNEEACCOUNT,

                _CSNCONSIGNEEACCOUNT);


        out.decrementIndent();

        out.writeEndTag(getXmlTagName());

    }


    /**
     * Get the  birth certificate for this object.
     */

    public String birthCertificate() {

        return ("1hge137:cy11q2i6:83w0ik");

    }

}
