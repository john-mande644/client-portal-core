/*

 * DO NOT EDIT!

 *

 * This file was generated by the Breeze XML Studio Java Export Wizard.

 *

 *        Project: connectship

 *     Class Name: LABELREQUESTINFO

 *           Date: Fri Feb 22 21:58:51 PST 2002

 * Breeze Version: 2.2.1 build 114

 *

 * IMPORTANT: Please see your Breeze license for more information on

 *            where and how this generated code may be used.

 *

 */


package com.owd.core.csXml;


import com.tbf.xml.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Vector;


/**
 * LABELREQUESTINFO class.
 */

public class LABELREQUESTINFO

        implements com.tbf.xml.XmlObject, Validateable, java.io.Serializable {
private final static Logger log =  LogManager.getLogger();


    /**
     * Constant for "LABELREQUESTINFO" node name.
     */

    public static final String $LABELREQUESTINFO = "LABELREQUESTINFO";


    /**
     * Constant for "POSTALCODE" node name.
     */

    public static final String $POSTALCODE = "POSTALCODE";


    /**
     * Constant for "SCS" node name.
     */

    public static final String $SCS = "SCS";


    /**
     * Constant for "SC" node name.
     */

    public static final String $SC = "SC";


    /**
     * Constant for "PACKAGELISTID" node name.
     */

    public static final String $PACKAGELISTID = "PACKAGELISTID";


    /**
     * Constant for "RETURNDELIVERY" node name.
     */

    public static final String $RETURNDELIVERY = "RETURNDELIVERY";


    /**
     * Constant for "MSN" node name.
     */

    public static final String $MSN = "MSN";


    /**
     * Constant for "LABELSTRING" node name.
     */

    public static final String $LABELSTRING = "LABELSTRING";


    /**
     * Constant for "SHIPPER" node name.
     */

    public static final String $SHIPPER = "SHIPPER";


    /**
     * Constant for "DELIVERYCONFIRMATIONNUMBER" node name.
     */

    public static final String $DELIVERYCONFIRMATIONNUMBER = "DELIVERYCONFIRMATIONNUMBER";


    /**
     * Constant for "BUNDLEID" node name.
     */

    public static final String $BUNDLEID = "BUNDLEID";


    protected String _SHIPPER = null;

    protected String _SCS = null;

    protected String _SC = null;

    protected String _MSN = null;

    protected String _BUNDLEID = null;

    protected String _PACKAGELISTID = null;

    protected String _POSTALCODE = null;

    protected XmlObject _DELIVERYCONFIRMATIONNUMBER = null;

    protected RETURNDELIVERY_2 _RETURNDELIVERY = null;

    protected String _LABELSTRING = null;


    /**
     * Storage for UNEXPECTED_XML errors.
     */

    protected Vector _unexpected_xml_errors_ = null;


    /**
     * Default no args constructor.
     */

    public LABELREQUESTINFO() {

    }


    /**
     * Creates and populates an instance from the provided parse tree.
     *
     * @param xml the parse tree
     */

    public LABELREQUESTINFO(XmlElement xml) {

        fromXml(xml);

    }


    /**
     * Get the SHIPPER property.
     */

    public String getSHIPPER() {

        return (_SHIPPER);

    }


    /**
     * Set the SHIPPER property.
     */

    public void setSHIPPER(String newValue) {

        _SHIPPER = newValue;

    }


    /**
     * Checks for whether SHIPPER is set or not.
     *
     * @returns true if SHIPPER is set, false if not
     */

    public boolean hasSHIPPER() {

        return (_SHIPPER != null);

    }


    /**
     * Discards SHIPPER's value.
     */

    public void deleteSHIPPER() {

        _SHIPPER = null;

    }


    /**
     * Get the SCS property.
     */

    public String getSCS() {

        return (_SCS);

    }


    /**
     * Set the SCS property.
     */

    public void setSCS(String newValue) {

        _SCS = newValue;

    }


    /**
     * Checks for whether SCS is set or not.
     *
     * @returns true if SCS is set, false if not
     */

    public boolean hasSCS() {

        return (_SCS != null);

    }


    /**
     * Discards SCS's value.
     */

    public void deleteSCS() {

        _SCS = null;

    }


    /**
     * Get the SC property.
     */

    public String getSC() {

        return (_SC);

    }


    /**
     * Set the SC property.
     */

    public void setSC(String newValue) {

        _SC = newValue;

    }


    /**
     * Checks for whether SC is set or not.
     *
     * @returns true if SC is set, false if not
     */

    public boolean hasSC() {

        return (_SC != null);

    }


    /**
     * Discards SC's value.
     */

    public void deleteSC() {

        _SC = null;

    }


    /**
     * Get the MSN property.
     */

    public String getMSN() {

        return (_MSN);

    }


    /**
     * Set the MSN property.
     */

    public void setMSN(String newValue) {

        _MSN = newValue;

    }


    /**
     * Checks for whether MSN is set or not.
     *
     * @returns true if MSN is set, false if not
     */

    public boolean hasMSN() {

        return (_MSN != null);

    }


    /**
     * Discards MSN's value.
     */

    public void deleteMSN() {

        _MSN = null;

    }


    /**
     * Get the BUNDLEID property.
     */

    public String getBUNDLEID() {

        return (_BUNDLEID);

    }


    /**
     * Set the BUNDLEID property.
     */

    public void setBUNDLEID(String newValue) {

        _BUNDLEID = newValue;

    }


    /**
     * Checks for whether BUNDLEID is set or not.
     *
     * @returns true if BUNDLEID is set, false if not
     */

    public boolean hasBUNDLEID() {

        return (_BUNDLEID != null);

    }


    /**
     * Discards BUNDLEID's value.
     */

    public void deleteBUNDLEID() {

        _BUNDLEID = null;

    }


    /**
     * Get the PACKAGELISTID property.
     */

    public String getPACKAGELISTID() {

        return (_PACKAGELISTID);

    }


    /**
     * Set the PACKAGELISTID property.
     */

    public void setPACKAGELISTID(String newValue) {

        _PACKAGELISTID = newValue;

    }


    /**
     * Checks for whether PACKAGELISTID is set or not.
     *
     * @returns true if PACKAGELISTID is set, false if not
     */

    public boolean hasPACKAGELISTID() {

        return (_PACKAGELISTID != null);

    }


    /**
     * Discards PACKAGELISTID's value.
     */

    public void deletePACKAGELISTID() {

        _PACKAGELISTID = null;

    }


    /**
     * Get the POSTALCODE property.
     */

    public String getPOSTALCODE() {

        return (_POSTALCODE);

    }


    /**
     * Set the POSTALCODE property.
     */

    public void setPOSTALCODE(String newValue) {

        _POSTALCODE = newValue;

    }


    /**
     * Checks for whether POSTALCODE is set or not.
     *
     * @returns true if POSTALCODE is set, false if not
     */

    public boolean hasPOSTALCODE() {

        return (_POSTALCODE != null);

    }


    /**
     * Discards POSTALCODE's value.
     */

    public void deletePOSTALCODE() {

        _POSTALCODE = null;

    }


    /**
     * Get the DELIVERYCONFIRMATIONNUMBER property.
     */

    public XmlObject getDELIVERYCONFIRMATIONNUMBER() {

        return (_DELIVERYCONFIRMATIONNUMBER);

    }


    /**
     * Set the DELIVERYCONFIRMATIONNUMBER property.
     */

    public void setDELIVERYCONFIRMATIONNUMBER(XmlObject obj) {

        _DELIVERYCONFIRMATIONNUMBER = obj;

    }


    protected void setDELIVERYCONFIRMATIONNUMBER(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _DELIVERYCONFIRMATIONNUMBER = new XmlString(s);

            } else {

                _DELIVERYCONFIRMATIONNUMBER = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _DELIVERYCONFIRMATIONNUMBER =

                ObjectFactory.createObject(xml);

        if (_DELIVERYCONFIRMATIONNUMBER == null) {

            _DELIVERYCONFIRMATIONNUMBER = xml.getAnyContent($LABELREQUESTINFO);

        }

    }


    /**
     * Checks for whether DELIVERYCONFIRMATIONNUMBER is set or not.
     *
     * @returns true if DELIVERYCONFIRMATIONNUMBER is set, false if not
     */

    public boolean hasDELIVERYCONFIRMATIONNUMBER() {

        return (_DELIVERYCONFIRMATIONNUMBER != null);

    }


    /**
     * Discards DELIVERYCONFIRMATIONNUMBER's value.
     */

    public void deleteDELIVERYCONFIRMATIONNUMBER() {

        _DELIVERYCONFIRMATIONNUMBER = null;

    }


    /**
     * Get the RETURNDELIVERY property.
     */

    public RETURNDELIVERY_2 getRETURNDELIVERY() {

        return (_RETURNDELIVERY);

    }


    /**
     * Set the RETURNDELIVERY property.
     */

    public void setRETURNDELIVERY(RETURNDELIVERY_2 obj) {

        _RETURNDELIVERY = obj;

    }


    protected void setRETURNDELIVERY(XmlElement xml) {


        _RETURNDELIVERY =

                new RETURNDELIVERY_2(xml);

    }


    /**
     * Checks for whether RETURNDELIVERY is set or not.
     *
     * @returns true if RETURNDELIVERY is set, false if not
     */

    public boolean hasRETURNDELIVERY() {

        return (_RETURNDELIVERY != null);

    }


    /**
     * Discards RETURNDELIVERY's value.
     */

    public void deleteRETURNDELIVERY() {

        _RETURNDELIVERY = null;

    }


    /**
     * Get the LABELSTRING property.
     */

    public String getLABELSTRING() {

        return (_LABELSTRING);

    }


    /**
     * Set the LABELSTRING property.
     */

    public void setLABELSTRING(String newValue) {

        _LABELSTRING = newValue;

    }


    /**
     * Checks for whether LABELSTRING is set or not.
     *
     * @returns true if LABELSTRING is set, false if not
     */

    public boolean hasLABELSTRING() {

        return (_LABELSTRING != null);

    }


    /**
     * Discards LABELSTRING's value.
     */

    public void deleteLABELSTRING() {

        _LABELSTRING = null;

    }


    /**
     * Gets the XML tag name for this object.
     */

    public String getXmlTagName() {

        return ($LABELREQUESTINFO);

    }


    /**
     * Gets the XML tag name for this class.
     */

    public static String getClassXmlTagName() {

        return ($LABELREQUESTINFO);

    }


    /**
     * This flag is used to used to check whether
     * <p/>
     * the validators have been created.
     */

    transient protected static boolean _validators_created = false;



    /*

     * XML Validators

     */

    transient protected static XmlStringValidator

            _SHIPPER_validator_ = null;

    transient protected static XmlStringValidator

            _SCS_validator_ = null;

    transient protected static XmlStringValidator

            _SC_validator_ = null;

    transient protected static XmlStringValidator

            _MSN_validator_ = null;

    transient protected static XmlStringValidator

            _BUNDLEID_validator_ = null;

    transient protected static XmlStringValidator

            _PACKAGELISTID_validator_ = null;

    transient protected static XmlStringValidator

            _POSTALCODE_validator_ = null;

    transient protected static XmlValidator

            _DELIVERYCONFIRMATIONNUMBER_validator_ = null;

    transient protected static XmlValidator

            _RETURNDELIVERY_validator_ = null;


    /**
     * Create the validators for this class.
     */

    protected static synchronized void createValidators() {


        if (_validators_created) {

            return;

        }


        _SHIPPER_validator_ = new XmlStringValidator("LABELREQUESTINFO.SHIPPER", "Element",

                "LABELREQUESTINFO/SHIPPER", -1, -1, true);


        _SCS_validator_ = new XmlStringValidator("LABELREQUESTINFO.SCS", "Element",

                "LABELREQUESTINFO/SCS", -1, -1, true);


        _SC_validator_ = new XmlStringValidator("LABELREQUESTINFO.SC", "Element",

                "LABELREQUESTINFO/SC", -1, -1, true);


        _MSN_validator_ = new XmlStringValidator("LABELREQUESTINFO.MSN", "Element",

                "LABELREQUESTINFO/MSN", -1, -1, true);


        _BUNDLEID_validator_ = new XmlStringValidator("LABELREQUESTINFO.BUNDLEID", "Element",

                "LABELREQUESTINFO/BUNDLEID", -1, -1, true);


        _PACKAGELISTID_validator_ = new XmlStringValidator("LABELREQUESTINFO.PACKAGELISTID", "Element",

                "LABELREQUESTINFO/PACKAGELISTID", -1, -1, true);


        _POSTALCODE_validator_ = new XmlStringValidator("LABELREQUESTINFO.POSTALCODE", "Element",

                "LABELREQUESTINFO/POSTALCODE", -1, -1, true);


        _DELIVERYCONFIRMATIONNUMBER_validator_ = new XmlValidator("LABELREQUESTINFO.DELIVERYCONFIRMATIONNUMBER", "ANY",

                "LABELREQUESTINFO/DELIVERYCONFIRMATIONNUMBER", false);


        _RETURNDELIVERY_validator_ = new XmlValidator("LABELREQUESTINFO.RETURNDELIVERY", "Element",

                "LABELREQUESTINFO/RETURNDELIVERY", false);


        _validators_created = true;

    }


    /**
     * Checks this object to see if it will produce valid XML.
     */

    public boolean isValid() {


        if (!(this instanceof Validateable)) {

            return (true);

        }


        Vector errors = ((Validateable) this).getValidationErrors(true);

        if (errors == null || errors.size() < 1) {

            return (true);

        }


        return (false);

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     */

    public Vector getValidationErrors() {

        return (getValidationErrors(false));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error) {

        return (getValidationErrors(return_on_error, true));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error, boolean traverse) {


        createValidators();


        Vector errors;

        if (_unexpected_xml_errors_ != null &&

                _unexpected_xml_errors_.size() > 0) {

            errors = (Vector) _unexpected_xml_errors_.clone();

            if (return_on_error) {

                return (errors);

            }

        } else {

            errors = new Vector();

        }


        XmlValidationError e;

        e = _SHIPPER_validator_.validate(_SHIPPER);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        e = _SCS_validator_.validate(_SCS);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        e = _SC_validator_.validate(_SC);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        e = _MSN_validator_.validate(_MSN);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        e = _BUNDLEID_validator_.validate(_BUNDLEID);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        e = _PACKAGELISTID_validator_.validate(_PACKAGELISTID);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        e = _POSTALCODE_validator_.validate(_POSTALCODE);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        if (!traverse) {

            if (errors.size() < 1) {

                return (null);

            }


            return (errors);

        }


        boolean is_valid;


        is_valid = _DELIVERYCONFIRMATIONNUMBER_validator_.isValid(_DELIVERYCONFIRMATIONNUMBER,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _RETURNDELIVERY_validator_.isValid(_RETURNDELIVERY,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        if (errors.size() < 1) {

            return (null);

        }


        return (errors);

    }


    /**
     * Checks the XML to see whether it matches the
     * <p/>
     * XML contents of this class.
     */

    public static boolean matches(XmlElement xml) {


        if (xml == null) {

            return (false);

        }


        return (xml.equals($LABELREQUESTINFO));

    }


    /**
     * This method unmarshals an XML document instance
     * <p/>
     * into an instance of this class.
     */

    public static LABELREQUESTINFO unmarshal(InputStream in) throws Exception {


        LABELREQUESTINFO obj = new LABELREQUESTINFO();

        ObjectFactory.unmarshal(obj, in);

        return (obj);

    }


    /**
     * Populates this object with the values from the
     * <p/>
     * parsed XML.
     */

    public void fromXml(XmlElement xml) {


        if (xml == null) {

            return;

        }


        if (!xml.equals($LABELREQUESTINFO)) {

            return;

        }





        /*

         * Get the contained XmlElement, this is what we process

         */

        xml = xml.getSubElementAt(0);

        if (xml == null) {

            return;

        }


        if (xml.equals($SHIPPER)) {

            setSHIPPER(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SCS)) {

            setSCS(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SC)) {

            setSC(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($MSN)) {

            setMSN(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($BUNDLEID)) {

            setBUNDLEID(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKAGELISTID)) {

            setPACKAGELISTID(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($POSTALCODE)) {

            setPOSTALCODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DELIVERYCONFIRMATIONNUMBER)) {

            setDELIVERYCONFIRMATIONNUMBER(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($RETURNDELIVERY)) {

            setRETURNDELIVERY(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($LABELSTRING)) {

            setLABELSTRING(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml != null) {


            _unexpected_xml_errors_ =

                    XmlValidationError.addUnexpectedXmlError(this, _unexpected_xml_errors_, xml);

            xml = xml.next();

        }

    }


    /**
     * This method marshals this object into an
     * <p/>
     * XML instance document.
     */

    public void marshal(OutputStream out) {

        toXml(out);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream) {

        toXml(stream, true);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream, String indent, boolean embed_files) {


        if (stream instanceof XmlOutputStream) {

            toXml(stream, embed_files);

        } else {

            FormattedOutputStream out =

                    new FormattedOutputStream(stream);

            out.setIndentString(indent);

            toXml(out, embed_files);

        }

    }


    /**
     * Serializes this object to XML.
     */

    public void toXml(OutputStream stream, boolean embed_files) {


        XmlOutputStream out = null;

        if (stream instanceof XmlOutputStream) {

            out = (XmlOutputStream) stream;

        } else {

            out = new RawOutputStream(stream);

        }


        out.writeStartTag(getXmlTagName(), false);

        out.incrementIndent();


        out.write($SHIPPER,

                _SHIPPER);

        out.write($SCS,

                _SCS);

        out.write($SC,

                _SC);

        out.write($MSN,

                _MSN);

        out.write($BUNDLEID,

                _BUNDLEID);

        out.write($PACKAGELISTID,

                _PACKAGELISTID);

        out.write($POSTALCODE,

                _POSTALCODE);


        Object DELIVERYCONFIRMATIONNUMBER_value = getDELIVERYCONFIRMATIONNUMBER();

        if (DELIVERYCONFIRMATIONNUMBER_value instanceof XmlObject) {

            out.write($DELIVERYCONFIRMATIONNUMBER,

                    (XmlObject) DELIVERYCONFIRMATIONNUMBER_value,

                    embed_files);

        } else if (DELIVERYCONFIRMATIONNUMBER_value != null) {

            out.writeln($DELIVERYCONFIRMATIONNUMBER, DELIVERYCONFIRMATIONNUMBER_value.toString());

        }


        Object RETURNDELIVERY_value = getRETURNDELIVERY();

        if (RETURNDELIVERY_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) RETURNDELIVERY_value,

                    embed_files);

        }

        out.write($LABELSTRING,

                _LABELSTRING);


        out.decrementIndent();

        out.writeEndTag(getXmlTagName());

    }


    /**
     * Get the  birth certificate for this object.
     */

    public String birthCertificate() {

        return ("1hge137:cy11q36x:15gthac");

    }

}
