/*



 * DO NOT EDIT!



 *



 * This file was generated by the Breeze XML Studio Java Export Wizard.



 *



 *        Project: connectship



 *     Class Name: PKG



 *           Date: Fri Feb 22 21:58:50 PST 2002



 * Breeze Version: 2.2.1 build 114



 *



 * IMPORTANT: Please see your Breeze license for more information on



 *            where and how this generated code may be used.



 *



 */


package com.owd.core.csXml;


import com.tbf.xml.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Vector;


/**
 * PKG class.
 */


public class PKG


        implements com.tbf.xml.XmlObject, Validateable, java.io.Serializable {
private final static Logger log =  LogManager.getLogger();


    /**
     * Constant for "TRACKINGNUMBER" node name.
     */


    public static final String $TRACKINGNUMBER = "TRACKINGNUMBER";


    /**
     * Constant for "POSTALCODE" node name.
     */


    public static final String $POSTALCODE = "POSTALCODE";


    /**
     * Constant for "SCS" node name.
     */


    public static final String $SCS = "SCS";


    /**
     * Constant for "SC" node name.
     */


    public static final String $SC = "SC";


    /**
     * Constant for "PKG" node name.
     */


    public static final String $PKG = "PKG";


    /**
     * Constant for "RETURNDELIVERY" node name.
     */


    public static final String $RETURNDELIVERY = "RETURNDELIVERY";


    /**
     * Constant for "MSN" node name.
     */


    public static final String $MSN = "MSN";


    /**
     * Constant for "REFERENCE" node name.
     */


    public static final String $REFERENCE = "REFERENCE";


    /**
     * Constant for "SHIPPERINFO" node name.
     */


    public static final String $SHIPPERINFO = "SHIPPERINFO";


    /**
     * Constant for "SHIPDATE" node name.
     */


    public static final String $SHIPDATE = "SHIPDATE";


    /**
     * Constant for "LABELFORMAT" node name.
     */


    public static final String $LABELFORMAT = "LABELFORMAT";


    /**
     * Constant for "LABELPRINT" node name.
     */


    public static final String $LABELPRINT = "LABELPRINT";


    /**
     * Constant for "SHIPNOTIFICATION" node name.
     */


    public static final String $SHIPNOTIFICATION = "SHIPNOTIFICATION";


    /**
     * Constant for "BUNDLEID" node name.
     */


    public static final String $BUNDLEID = "BUNDLEID";


    protected REFERENCE _REFERENCE = null;


    protected SHIPPERINFO _SHIPPERINFO = null;


    protected String _SCS = null;


    protected String _SC = null;


    protected String _MSN = null;


    protected String _BUNDLEID = null;


    protected String _POSTALCODE = null;


    protected RETURNDELIVERY _RETURNDELIVERY = null;


    protected String _LABELFORMAT = null;


    protected String _SHIPDATE = null;


    protected SHIPNOTIFICATION _SHIPNOTIFICATION = null;


    protected String _TRACKINGNUMBER = null;


    protected LABELPRINT _LABELPRINT = null;


    /**
     * Storage for UNEXPECTED_XML errors.
     */


    protected Vector _unexpected_xml_errors_ = null;


    /**
     * Default no args constructor.
     */


    public PKG() {


    }


    /**
     * Creates and populates an instance from the provided parse tree.
     *
     * @param xml the parse tree
     */


    public PKG(XmlElement xml) {


        fromXml(xml);


    }


    /**
     * Get the REFERENCE property.
     */


    public REFERENCE getREFERENCE() {


        return (_REFERENCE);


    }


    /**
     * Set the REFERENCE property.
     */


    public void setREFERENCE(REFERENCE obj) {


        _REFERENCE = obj;


    }


    protected void setREFERENCE(XmlElement xml) {


        _REFERENCE =


                new REFERENCE(xml);


    }


    /**
     * Checks for whether REFERENCE is set or not.
     *
     * @returns true if REFERENCE is set, false if not
     */


    public boolean hasREFERENCE() {


        return (_REFERENCE != null);


    }


    /**
     * Discards REFERENCE's value.
     */


    public void deleteREFERENCE() {


        _REFERENCE = null;


    }


    /**
     * Get the SHIPPERINFO property.
     */


    public SHIPPERINFO getSHIPPERINFO() {


        return (_SHIPPERINFO);


    }


    /**
     * Set the SHIPPERINFO property.
     */


    public void setSHIPPERINFO(SHIPPERINFO obj) {


        _SHIPPERINFO = obj;


    }


    protected void setSHIPPERINFO(XmlElement xml) {


        _SHIPPERINFO =


                new SHIPPERINFO(xml);


    }


    /**
     * Checks for whether SHIPPERINFO is set or not.
     *
     * @returns true if SHIPPERINFO is set, false if not
     */


    public boolean hasSHIPPERINFO() {


        return (_SHIPPERINFO != null);


    }


    /**
     * Discards SHIPPERINFO's value.
     */


    public void deleteSHIPPERINFO() {


        _SHIPPERINFO = null;


    }


    /**
     * Get the SCS property.
     */


    public String getSCS() {


        return (_SCS);


    }


    /**
     * Set the SCS property.
     */


    public void setSCS(String newValue) {


        _SCS = newValue;


    }


    /**
     * Checks for whether SCS is set or not.
     *
     * @returns true if SCS is set, false if not
     */


    public boolean hasSCS() {


        return (_SCS != null);


    }


    /**
     * Discards SCS's value.
     */


    public void deleteSCS() {


        _SCS = null;


    }


    /**
     * Get the SC property.
     */


    public String getSC() {


        return (_SC);


    }


    /**
     * Set the SC property.
     */


    public void setSC(String newValue) {


        _SC = newValue;


    }


    /**
     * Checks for whether SC is set or not.
     *
     * @returns true if SC is set, false if not
     */


    public boolean hasSC() {


        return (_SC != null);


    }


    /**
     * Discards SC's value.
     */


    public void deleteSC() {


        _SC = null;


    }


    /**
     * Get the MSN property.
     */


    public String getMSN() {


        return (_MSN);


    }


    /**
     * Set the MSN property.
     */


    public void setMSN(String newValue) {


        _MSN = newValue;


    }


    /**
     * Checks for whether MSN is set or not.
     *
     * @returns true if MSN is set, false if not
     */


    public boolean hasMSN() {


        return (_MSN != null);


    }


    /**
     * Discards MSN's value.
     */


    public void deleteMSN() {


        _MSN = null;


    }


    /**
     * Get the BUNDLEID property.
     */


    public String getBUNDLEID() {


        return (_BUNDLEID);


    }


    /**
     * Set the BUNDLEID property.
     */


    public void setBUNDLEID(String newValue) {


        _BUNDLEID = newValue;


    }


    /**
     * Checks for whether BUNDLEID is set or not.
     *
     * @returns true if BUNDLEID is set, false if not
     */


    public boolean hasBUNDLEID() {


        return (_BUNDLEID != null);


    }


    /**
     * Discards BUNDLEID's value.
     */


    public void deleteBUNDLEID() {


        _BUNDLEID = null;


    }


    /**
     * Get the POSTALCODE property.
     */


    public String getPOSTALCODE() {


        return (_POSTALCODE);


    }


    /**
     * Set the POSTALCODE property.
     */


    public void setPOSTALCODE(String newValue) {


        _POSTALCODE = newValue;


    }


    /**
     * Checks for whether POSTALCODE is set or not.
     *
     * @returns true if POSTALCODE is set, false if not
     */


    public boolean hasPOSTALCODE() {


        return (_POSTALCODE != null);


    }


    /**
     * Discards POSTALCODE's value.
     */


    public void deletePOSTALCODE() {


        _POSTALCODE = null;


    }


    /**
     * Get the RETURNDELIVERY property.
     */


    public RETURNDELIVERY getRETURNDELIVERY() {


        return (_RETURNDELIVERY);


    }


    /**
     * Set the RETURNDELIVERY property.
     */


    public void setRETURNDELIVERY(RETURNDELIVERY obj) {


        _RETURNDELIVERY = obj;


    }


    protected void setRETURNDELIVERY(XmlElement xml) {


        _RETURNDELIVERY =


                new RETURNDELIVERY(xml);


    }


    /**
     * Checks for whether RETURNDELIVERY is set or not.
     *
     * @returns true if RETURNDELIVERY is set, false if not
     */


    public boolean hasRETURNDELIVERY() {


        return (_RETURNDELIVERY != null);


    }


    /**
     * Discards RETURNDELIVERY's value.
     */


    public void deleteRETURNDELIVERY() {


        _RETURNDELIVERY = null;


    }


    /**
     * Get the LABELFORMAT property.
     */


    public String getLABELFORMAT() {


        return (_LABELFORMAT);


    }


    /**
     * Set the LABELFORMAT property.
     */


    public void setLABELFORMAT(String newValue) {


        _LABELFORMAT = newValue;


    }


    /**
     * Checks for whether LABELFORMAT is set or not.
     *
     * @returns true if LABELFORMAT is set, false if not
     */


    public boolean hasLABELFORMAT() {


        return (_LABELFORMAT != null);


    }


    /**
     * Discards LABELFORMAT's value.
     */


    public void deleteLABELFORMAT() {


        _LABELFORMAT = null;


    }


    /**
     * Get the SHIPDATE property.
     */


    public String getSHIPDATE() {


        return (_SHIPDATE);


    }


    /**
     * Set the SHIPDATE property.
     */


    public void setSHIPDATE(String newValue) {


        _SHIPDATE = newValue;


    }


    /**
     * Checks for whether SHIPDATE is set or not.
     *
     * @returns true if SHIPDATE is set, false if not
     */


    public boolean hasSHIPDATE() {


        return (_SHIPDATE != null);


    }


    /**
     * Discards SHIPDATE's value.
     */


    public void deleteSHIPDATE() {


        _SHIPDATE = null;


    }


    /**
     * Get the SHIPNOTIFICATION property.
     */


    public SHIPNOTIFICATION getSHIPNOTIFICATION() {


        return (_SHIPNOTIFICATION);


    }


    /**
     * Set the SHIPNOTIFICATION property.
     */


    public void setSHIPNOTIFICATION(SHIPNOTIFICATION obj) {


        _SHIPNOTIFICATION = obj;


    }


    protected void setSHIPNOTIFICATION(XmlElement xml) {


        _SHIPNOTIFICATION =


                new SHIPNOTIFICATION(xml);


    }


    /**
     * Checks for whether SHIPNOTIFICATION is set or not.
     *
     * @returns true if SHIPNOTIFICATION is set, false if not
     */


    public boolean hasSHIPNOTIFICATION() {


        return (_SHIPNOTIFICATION != null);


    }


    /**
     * Discards SHIPNOTIFICATION's value.
     */


    public void deleteSHIPNOTIFICATION() {


        _SHIPNOTIFICATION = null;


    }


    /**
     * Get the TRACKINGNUMBER property.
     */


    public String getTRACKINGNUMBER() {


        return (_TRACKINGNUMBER);


    }


    /**
     * Set the TRACKINGNUMBER property.
     */


    public void setTRACKINGNUMBER(String newValue) {


        _TRACKINGNUMBER = newValue;


    }


    /**
     * Checks for whether TRACKINGNUMBER is set or not.
     *
     * @returns true if TRACKINGNUMBER is set, false if not
     */


    public boolean hasTRACKINGNUMBER() {


        return (_TRACKINGNUMBER != null);


    }


    /**
     * Discards TRACKINGNUMBER's value.
     */


    public void deleteTRACKINGNUMBER() {


        _TRACKINGNUMBER = null;


    }


    /**
     * Get the LABELPRINT property.
     */


    public LABELPRINT getLABELPRINT() {


        return (_LABELPRINT);


    }


    /**
     * Set the LABELPRINT property.
     */


    public void setLABELPRINT(LABELPRINT obj) {


        _LABELPRINT = obj;


    }


    protected void setLABELPRINT(XmlElement xml) {


        _LABELPRINT =


                new LABELPRINT(xml);


    }


    /**
     * Checks for whether LABELPRINT is set or not.
     *
     * @returns true if LABELPRINT is set, false if not
     */


    public boolean hasLABELPRINT() {


        return (_LABELPRINT != null);


    }


    /**
     * Discards LABELPRINT's value.
     */


    public void deleteLABELPRINT() {


        _LABELPRINT = null;


    }


    /**
     * Gets the XML tag name for this object.
     */


    public String getXmlTagName() {


        return ($PKG);


    }


    /**
     * Gets the XML tag name for this class.
     */


    public static String getClassXmlTagName() {


        return ($PKG);


    }


    /**
     * This flag is used to used to check whether
     * <p/>
     * <p/>
     * <p/>
     * the validators have been created.
     */


    transient protected static boolean _validators_created = false;







    /*



     * XML Validators



     */



    transient protected static XmlValidator


            _REFERENCE_validator_ = null;


    transient protected static XmlValidator


            _SHIPPERINFO_validator_ = null;


    transient protected static XmlStringValidator


            _SCS_validator_ = null;


    transient protected static XmlStringValidator


            _SC_validator_ = null;


    transient protected static XmlStringValidator


            _MSN_validator_ = null;


    transient protected static XmlValidator


            _RETURNDELIVERY_validator_ = null;


    transient protected static XmlStringValidator


            _LABELFORMAT_validator_ = null;


    transient protected static XmlStringValidator


            _SHIPDATE_validator_ = null;


    transient protected static XmlValidator


            _SHIPNOTIFICATION_validator_ = null;


    transient protected static XmlValidator


            _LABELPRINT_validator_ = null;


    /**
     * Create the validators for this class.
     */


    protected static synchronized void createValidators() {


        if (_validators_created) {


            return;


        }


        _REFERENCE_validator_ = new XmlValidator("PKG.REFERENCE", "Element",


                "PKG/REFERENCE", true);


        _SHIPPERINFO_validator_ = new XmlValidator("PKG.SHIPPERINFO", "Element",


                "PKG/SHIPPERINFO", false);


        _SCS_validator_ = new XmlStringValidator("PKG.SCS", "Element",


                "PKG/SCS", -1, -1, true);


        _SC_validator_ = new XmlStringValidator("PKG.SC", "Element",


                "PKG/SC", -1, -1, true);


        _MSN_validator_ = new XmlStringValidator("PKG.MSN", "Element",


                "PKG/MSN", -1, -1, true);


        _RETURNDELIVERY_validator_ = new XmlValidator("PKG.RETURNDELIVERY", "Element",


                "PKG/RETURNDELIVERY", false);


        _LABELFORMAT_validator_ = new XmlStringValidator("PKG.LABELFORMAT", "Element",


                "PKG/LABELFORMAT", -1, -1, true);


        _SHIPDATE_validator_ = new XmlStringValidator("PKG.SHIPDATE", "Element",


                "PKG/SHIPDATE", -1, -1, true);


        _SHIPNOTIFICATION_validator_ = new XmlValidator("PKG.SHIPNOTIFICATION", "Element",


                "PKG/SHIPNOTIFICATION", false);


        _LABELPRINT_validator_ = new XmlValidator("PKG.LABELPRINT", "Element",


                "PKG/LABELPRINT", false);


        _validators_created = true;


    }


    /**
     * Checks this object to see if it will produce valid XML.
     */


    public boolean isValid() {


        if (!(this instanceof Validateable)) {


            return (true);


        }


        Vector errors = ((Validateable) this).getValidationErrors(true);


        if (errors == null || errors.size() < 1) {


            return (true);


        }


        return (false);


    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * <p/>
     * <p/>
     * returns a Vector holding the validation errors.
     */


    public Vector getValidationErrors() {


        return (getValidationErrors(false));


    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * <p/>
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */


    public Vector getValidationErrors(boolean return_on_error) {


        return (getValidationErrors(return_on_error, true));


    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * <p/>
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */


    public Vector getValidationErrors(boolean return_on_error, boolean traverse) {


        createValidators();


        Vector errors;


        if (_unexpected_xml_errors_ != null &&


                _unexpected_xml_errors_.size() > 0) {


            errors = (Vector) _unexpected_xml_errors_.clone();


            if (return_on_error) {


                return (errors);


            }


        } else {


            errors = new Vector();


        }


        XmlValidationError e;


        e = _SCS_validator_.validate(_SCS);


        if (e != null) {


            errors.addElement(e);


            if (return_on_error) {


                return (errors);


            }


        }


        e = _SC_validator_.validate(_SC);


        if (e != null) {


            errors.addElement(e);


            if (return_on_error) {


                return (errors);


            }


        }


        e = _MSN_validator_.validate(_MSN);


        if (e != null) {


            errors.addElement(e);


            if (return_on_error) {


                return (errors);


            }


        }


        e = _LABELFORMAT_validator_.validate(_LABELFORMAT);


        if (e != null) {


            errors.addElement(e);


            if (return_on_error) {


                return (errors);


            }


        }


        e = _SHIPDATE_validator_.validate(_SHIPDATE);


        if (e != null) {


            errors.addElement(e);


            if (return_on_error) {


                return (errors);


            }


        }


        if (!traverse) {


            if (errors.size() < 1) {


                return (null);


            }


            return (errors);


        }


        boolean is_valid;


        is_valid = _REFERENCE_validator_.isValid(_REFERENCE,


                errors, return_on_error, traverse);


        if (!is_valid && return_on_error) {


            return (errors);


        }


        is_valid = _SHIPPERINFO_validator_.isValid(_SHIPPERINFO,


                errors, return_on_error, traverse);


        if (!is_valid && return_on_error) {


            return (errors);


        }


        is_valid = _RETURNDELIVERY_validator_.isValid(_RETURNDELIVERY,


                errors, return_on_error, traverse);


        if (!is_valid && return_on_error) {


            return (errors);


        }


        is_valid = _SHIPNOTIFICATION_validator_.isValid(_SHIPNOTIFICATION,


                errors, return_on_error, traverse);


        if (!is_valid && return_on_error) {


            return (errors);


        }


        is_valid = _LABELPRINT_validator_.isValid(_LABELPRINT,


                errors, return_on_error, traverse);


        if (!is_valid && return_on_error) {


            return (errors);


        }


        if (errors.size() < 1) {


            return (null);


        }


        return (errors);


    }


    /**
     * Checks the XML to see whether it matches the
     * <p/>
     * <p/>
     * <p/>
     * XML contents of this class.
     */


    public static boolean matches(XmlElement xml) {


        if (xml == null) {


            return (false);


        }


        return (xml.equals($PKG));


    }


    /**
     * This method unmarshals an XML document instance
     * <p/>
     * <p/>
     * <p/>
     * into an instance of this class.
     */


    public static PKG unmarshal(InputStream in) throws Exception {


        PKG obj = new PKG();


        ObjectFactory.unmarshal(obj, in);


        return (obj);


    }


    /**
     * Populates this object with the values from the
     * <p/>
     * <p/>
     * <p/>
     * parsed XML.
     */


    public void fromXml(XmlElement xml) {


        if (xml == null) {


            return;


        }


        if (!xml.equals($PKG)) {


            return;


        }











        /*



         * Get the contained XmlElement, this is what we process



         */



        xml = xml.getSubElementAt(0);


        if (xml == null) {


            return;


        }


        if (xml.equals($REFERENCE)) {


            setREFERENCE(xml);


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($SHIPPERINFO)) {


            setSHIPPERINFO(xml);


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($SCS)) {


            setSCS(xml.getData());


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($SC)) {


            setSC(xml.getData());


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($MSN)) {


            setMSN(xml.getData());


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($BUNDLEID)) {


            setBUNDLEID(xml.getData());


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($POSTALCODE)) {


            setPOSTALCODE(xml.getData());


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($RETURNDELIVERY)) {


            setRETURNDELIVERY(xml);


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($LABELFORMAT)) {


            setLABELFORMAT(xml.getData());


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($SHIPDATE)) {


            setSHIPDATE(xml.getData());


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($SHIPNOTIFICATION)) {


            setSHIPNOTIFICATION(xml);


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($TRACKINGNUMBER)) {


            setTRACKINGNUMBER(xml.getData());


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml.equals($LABELPRINT)) {


            setLABELPRINT(xml);


            xml = xml.next();


            if (xml == null) {


                return;


            }


        }


        if (xml != null) {


            _unexpected_xml_errors_ =


                    XmlValidationError.addUnexpectedXmlError(this, _unexpected_xml_errors_, xml);


            xml = xml.next();


        }


    }


    /**
     * This method marshals this object into an
     * <p/>
     * <p/>
     * <p/>
     * XML instance document.
     */


    public void marshal(OutputStream out) {


        toXml(out);


    }


    /**
     * Serializes this object to Formatted XML.
     */


    public void toXml(OutputStream stream) {


        toXml(stream, true);


    }


    /**
     * Serializes this object to Formatted XML.
     */


    public void toXml(OutputStream stream, String indent, boolean embed_files) {


        if (stream instanceof XmlOutputStream) {


            toXml(stream, embed_files);


        } else {


            FormattedOutputStream out =


                    new FormattedOutputStream(stream);


            out.setIndentString(indent);


            toXml(out, embed_files);


        }


    }


    /**
     * Serializes this object to XML.
     */


    public void toXml(OutputStream stream, boolean embed_files) {


        XmlOutputStream out = null;


        if (stream instanceof XmlOutputStream) {


            out = (XmlOutputStream) stream;


        } else {


            out = new RawOutputStream(stream);


        }


        out.writeStartTag(getXmlTagName(), false);


        out.incrementIndent();


        Object REFERENCE_value = getREFERENCE();


        if (REFERENCE_value instanceof XmlObject) {


            out.write(null,


                    (XmlObject) REFERENCE_value,


                    embed_files);


        }


        Object SHIPPERINFO_value = getSHIPPERINFO();


        if (SHIPPERINFO_value instanceof XmlObject) {


            out.write(null,


                    (XmlObject) SHIPPERINFO_value,


                    embed_files);


        }


        out.write($SCS,


                _SCS);


        out.write($SC,


                _SC);


        out.write($MSN,


                _MSN);


        out.write($BUNDLEID,


                _BUNDLEID);


        out.write($POSTALCODE,


                _POSTALCODE);


        Object RETURNDELIVERY_value = getRETURNDELIVERY();


        if (RETURNDELIVERY_value instanceof XmlObject) {


            out.write(null,


                    (XmlObject) RETURNDELIVERY_value,


                    embed_files);


        }


        out.write($LABELFORMAT,


                _LABELFORMAT);


        out.write($SHIPDATE,


                _SHIPDATE);


        Object SHIPNOTIFICATION_value = getSHIPNOTIFICATION();


        if (SHIPNOTIFICATION_value instanceof XmlObject) {


            out.write(null,


                    (XmlObject) SHIPNOTIFICATION_value,


                    embed_files);


        }


        out.write($TRACKINGNUMBER,


                _TRACKINGNUMBER);


        Object LABELPRINT_value = getLABELPRINT();


        if (LABELPRINT_value instanceof XmlObject) {


            out.write(null,


                    (XmlObject) LABELPRINT_value,


                    embed_files);


        }


        out.decrementIndent();


        out.writeEndTag(getXmlTagName());


    }


    /**
     * Get the  birth certificate for this object.
     */


    public String birthCertificate() {


        return ("1hge137:cy11q28q:89elg6");


    }


}

