/*

 * DO NOT EDIT!

 *

 * This file was generated by the Breeze XML Studio Java Export Wizard.

 *

 *        Project: connectship

 *     Class Name: RESULTITEM

 *           Date: Fri Feb 22 21:58:51 PST 2002

 * Breeze Version: 2.2.1 build 114

 *

 * IMPORTANT: Please see your Breeze license for more information on

 *            where and how this generated code may be used.

 *

 */


package com.owd.core.csXml;


import com.tbf.xml.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Vector;


/**
 * RESULTITEM class.
 */

public class RESULTITEM

        implements com.tbf.xml.XmlObject, Validateable, java.io.Serializable {
private final static Logger log =  LogManager.getLogger();


    /**
     * Constant for "HAZMAT" node name.
     */

    public static final String $HAZMAT = "HAZMAT";


    /**
     * Constant for "HAZMAT_DESCRIPTION" node name.
     */

    public static final String $HAZMAT_DESCRIPTION = "HAZMAT_DESCRIPTION";


    /**
     * Constant for "SPECIAL_DELIVERY_FEE" node name.
     */

    public static final String $SPECIAL_DELIVERY_FEE = "SPECIAL_DELIVERY_FEE";


    /**
     * Constant for "RESULTITEM" node name.
     */

    public static final String $RESULTITEM = "RESULTITEM";


    /**
     * Constant for "SATURDAY_PICKUP_FEE" node name.
     */

    public static final String $SATURDAY_PICKUP_FEE = "SATURDAY_PICKUP_FEE";


    /**
     * Constant for "TIME_IN_TRANSIT" node name.
     */

    public static final String $TIME_IN_TRANSIT = "TIME_IN_TRANSIT";


    /**
     * Constant for "SUBCATEGORY" node name.
     */

    public static final String $SUBCATEGORY = "SUBCATEGORY";


    /**
     * Constant for "HAZMAT_PACKING_GROUP" node name.
     */

    public static final String $HAZMAT_PACKING_GROUP = "HAZMAT_PACKING_GROUP";


    /**
     * Constant for "CERTIFIED_MAIL" node name.
     */

    public static final String $CERTIFIED_MAIL = "CERTIFIED_MAIL";


    /**
     * Constant for "WEIGHT" node name.
     */

    public static final String $WEIGHT = "WEIGHT";


    /**
     * Constant for "PROOF_REQUIRE_SIGNATURE" node name.
     */

    public static final String $PROOF_REQUIRE_SIGNATURE = "PROOF_REQUIRE_SIGNATURE";


    /**
     * Constant for "NOFN_TOTAL_BUNDLE" node name.
     */

    public static final String $NOFN_TOTAL_BUNDLE = "NOFN_TOTAL_BUNDLE";


    /**
     * Constant for "PACKAGE_LIST_ID" node name.
     */

    public static final String $PACKAGE_LIST_ID = "PACKAGE_LIST_ID";


    /**
     * Constant for "CERTIFIED_MAIL_FEE" node name.
     */

    public static final String $CERTIFIED_MAIL_FEE = "CERTIFIED_MAIL_FEE";


    /**
     * Constant for "HUNDREDWEIGHT_RATED" node name.
     */

    public static final String $HUNDREDWEIGHT_RATED = "HUNDREDWEIGHT_RATED";


    /**
     * Constant for "APPORTIONED_TOTAL" node name.
     */

    public static final String $APPORTIONED_TOTAL = "APPORTIONED_TOTAL";


    /**
     * Constant for "NOFN_SEQUENCE_BUNDLE" node name.
     */

    public static final String $NOFN_SEQUENCE_BUNDLE = "NOFN_SEQUENCE_BUNDLE";


    /**
     * Constant for "HAZMAT_CLASS" node name.
     */

    public static final String $HAZMAT_CLASS = "HAZMAT_CLASS";


    /**
     * Constant for "CONSIGNEE_ACCOUNT" node name.
     */

    public static final String $CONSIGNEE_ACCOUNT = "CONSIGNEE_ACCOUNT";


    /**
     * Constant for "MAXICODE" node name.
     */

    public static final String $MAXICODE = "MAXICODE";


    /**
     * Constant for "THIRD_PARTY_BILLING_ADDRESS" node name.
     */

    public static final String $THIRD_PARTY_BILLING_ADDRESS = "THIRD_PARTY_BILLING_ADDRESS";


    /**
     * Constant for "COD_AMOUNT" node name.
     */

    public static final String $COD_AMOUNT = "COD_AMOUNT";


    /**
     * Constant for "ADDITIONAL_HANDLING_FEE" node name.
     */

    public static final String $ADDITIONAL_HANDLING_FEE = "ADDITIONAL_HANDLING_FEE";


    /**
     * Constant for "OVERSIZE_FEE" node name.
     */

    public static final String $OVERSIZE_FEE = "OVERSIZE_FEE";


    /**
     * Constant for "RESIDENTIAL_DELIVERY_FEE" node name.
     */

    public static final String $RESIDENTIAL_DELIVERY_FEE = "RESIDENTIAL_DELIVERY_FEE";


    /**
     * Constant for "SPECIAL_DELIVERY" node name.
     */

    public static final String $SPECIAL_DELIVERY = "SPECIAL_DELIVERY";


    /**
     * Constant for "PROOF_REQUIRES_SIGNATURE" node name.
     */

    public static final String $PROOF_REQUIRES_SIGNATURE = "PROOF_REQUIRES_SIGNATURE";


    /**
     * Constant for "PROOF_REQUIRES_SIGNATURE_FEE" node name.
     */

    public static final String $PROOF_REQUIRES_SIGNATURE_FEE = "PROOF_REQUIRES_SIGNATURE_FEE";


    /**
     * Constant for "CALLTAG" node name.
     */

    public static final String $CALLTAG = "CALLTAG";


    /**
     * Constant for "COD_FEE" node name.
     */

    public static final String $COD_FEE = "COD_FEE";


    /**
     * Constant for "DECLARED_VALUE_FEE" node name.
     */

    public static final String $DECLARED_VALUE_FEE = "DECLARED_VALUE_FEE";


    /**
     * Constant for "APPORTIONED_DISCOUNT" node name.
     */

    public static final String $APPORTIONED_DISCOUNT = "APPORTIONED_DISCOUNT";


    /**
     * Constant for "DIMENSIONAL_WEIGHT_RATED" node name.
     */

    public static final String $DIMENSIONAL_WEIGHT_RATED = "DIMENSIONAL_WEIGHT_RATED";


    /**
     * Constant for "CONSIGNEE" node name.
     */

    public static final String $CONSIGNEE = "CONSIGNEE";


    /**
     * Constant for "CONSIGNEE_REFERENCE" node name.
     */

    public static final String $CONSIGNEE_REFERENCE = "CONSIGNEE_REFERENCE";


    /**
     * Constant for "ROUTING_CODE" node name.
     */

    public static final String $ROUTING_CODE = "ROUTING_CODE";


    /**
     * Constant for "ULTIMATE_DESTINATION_COUNTRY" node name.
     */

    public static final String $ULTIMATE_DESTINATION_COUNTRY = "ULTIMATE_DESTINATION_COUNTRY";


    /**
     * Constant for "HAZMAT_QUANTITY" node name.
     */

    public static final String $HAZMAT_QUANTITY = "HAZMAT_QUANTITY";


    /**
     * Constant for "PROOF" node name.
     */

    public static final String $PROOF = "PROOF";


    /**
     * Constant for "SATURDAY_DELIVERY" node name.
     */

    public static final String $SATURDAY_DELIVERY = "SATURDAY_DELIVERY";


    /**
     * Constant for "DIRECT_DELIVERY_FEE" node name.
     */

    public static final String $DIRECT_DELIVERY_FEE = "DIRECT_DELIVERY_FEE";


    /**
     * Constant for "CALLTAG_FEE" node name.
     */

    public static final String $CALLTAG_FEE = "CALLTAG_FEE";


    /**
     * Constant for "SATURDAY_DELIVERY_FEE" node name.
     */

    public static final String $SATURDAY_DELIVERY_FEE = "SATURDAY_DELIVERY_FEE";


    /**
     * Constant for "THIRD_PARTY_BILLING_ACCOUNT" node name.
     */

    public static final String $THIRD_PARTY_BILLING_ACCOUNT = "THIRD_PARTY_BILLING_ACCOUNT";


    /**
     * Constant for "TERMS" node name.
     */

    public static final String $TERMS = "TERMS";


    /**
     * Constant for "HAZMAT_LABEL" node name.
     */

    public static final String $HAZMAT_LABEL = "HAZMAT_LABEL";


    /**
     * Constant for "REGISTERED_MAIL" node name.
     */

    public static final String $REGISTERED_MAIL = "REGISTERED_MAIL";


    /**
     * Constant for "EXTENDED_AREA_FEE" node name.
     */

    public static final String $EXTENDED_AREA_FEE = "EXTENDED_AREA_FEE";


    /**
     * Constant for "DIRECT_DELIVERY" node name.
     */

    public static final String $DIRECT_DELIVERY = "DIRECT_DELIVERY";


    /**
     * Constant for "ADDITIONAL_HANDLING" node name.
     */

    public static final String $ADDITIONAL_HANDLING = "ADDITIONAL_HANDLING";


    /**
     * Constant for "PARCEL_AIRLIFT" node name.
     */

    public static final String $PARCEL_AIRLIFT = "PARCEL_AIRLIFT";


    /**
     * Constant for "DOCUMENTS_ONLY" node name.
     */

    public static final String $DOCUMENTS_ONLY = "DOCUMENTS_ONLY";


    /**
     * Constant for "PARCEL_AIRLIFT_FEE" node name.
     */

    public static final String $PARCEL_AIRLIFT_FEE = "PARCEL_AIRLIFT_FEE";


    /**
     * Constant for "APPORTIONED_SPECIAL" node name.
     */

    public static final String $APPORTIONED_SPECIAL = "APPORTIONED_SPECIAL";


    /**
     * Constant for "PROOF_REQUIRE_ADULT_SIGNATURE" node name.
     */

    public static final String $PROOF_REQUIRE_ADULT_SIGNATURE = "PROOF_REQUIRE_ADULT_SIGNATURE";


    /**
     * Constant for "PROOF_FEE" node name.
     */

    public static final String $PROOF_FEE = "PROOF_FEE";


    /**
     * Constant for "COMMODITY_CONTENTS" node name.
     */

    public static final String $COMMODITY_CONTENTS = "COMMODITY_CONTENTS";


    /**
     * Constant for "HOLD_AT_LOCATION" node name.
     */

    public static final String $HOLD_AT_LOCATION = "HOLD_AT_LOCATION";


    /**
     * Constant for "SHIPPER" node name.
     */

    public static final String $SHIPPER = "SHIPPER";


    /**
     * Constant for "APPORTIONED_BASE" node name.
     */

    public static final String $APPORTIONED_BASE = "APPORTIONED_BASE";


    /**
     * Constant for "BUNDLE_ID" node name.
     */

    public static final String $BUNDLE_ID = "BUNDLE_ID";


    /**
     * Constant for "CYCLE_COUNT" node name.
     */

    public static final String $CYCLE_COUNT = "CYCLE_COUNT";


    /**
     * Constant for "THIRD_PARTY_BILLING" node name.
     */

    public static final String $THIRD_PARTY_BILLING = "THIRD_PARTY_BILLING";


    /**
     * Constant for "COD_PAYMENT_METHOD" node name.
     */

    public static final String $COD_PAYMENT_METHOD = "COD_PAYMENT_METHOD";


    /**
     * Constant for "REGISTERED_MAIL_FEE" node name.
     */

    public static final String $REGISTERED_MAIL_FEE = "REGISTERED_MAIL_FEE";


    /**
     * Constant for "MSN" node name.
     */

    public static final String $MSN = "MSN";


    /**
     * Constant for "PROOF_REQUIRE_SIGNATURE_FEE" node name.
     */

    public static final String $PROOF_REQUIRE_SIGNATURE_FEE = "PROOF_REQUIRE_SIGNATURE_FEE";


    /**
     * Constant for "TRACKING_NUMBER" node name.
     */

    public static final String $TRACKING_NUMBER = "TRACKING_NUMBER";


    /**
     * Constant for "COD_NUMBER" node name.
     */

    public static final String $COD_NUMBER = "COD_NUMBER";


    /**
     * Constant for "OVERSIZE" node name.
     */

    public static final String $OVERSIZE = "OVERSIZE";


    /**
     * Constant for "DECLARED_VALUE_AMOUNT" node name.
     */

    public static final String $DECLARED_VALUE_AMOUNT = "DECLARED_VALUE_AMOUNT";


    /**
     * Constant for "HAZMAT_ID" node name.
     */

    public static final String $HAZMAT_ID = "HAZMAT_ID";


    /**
     * Constant for "CALLTAG_NUMBER" node name.
     */

    public static final String $CALLTAG_NUMBER = "CALLTAG_NUMBER";


    /**
     * Constant for "CONSOLIDATION_ID" node name.
     */

    public static final String $CONSOLIDATION_ID = "CONSOLIDATION_ID";


    /**
     * Constant for "PACKAGING" node name.
     */

    public static final String $PACKAGING = "PACKAGING";


    /**
     * Constant for "SED_METHOD" node name.
     */

    public static final String $SED_METHOD = "SED_METHOD";


    /**
     * Constant for "ARRIVE_DATE" node name.
     */

    public static final String $ARRIVE_DATE = "ARRIVE_DATE";


    /**
     * Constant for "DESCRIPTION" node name.
     */

    public static final String $DESCRIPTION = "DESCRIPTION";


    /**
     * Constant for "NONMACHINABLE_MAIL_FEE" node name.
     */

    public static final String $NONMACHINABLE_MAIL_FEE = "NONMACHINABLE_MAIL_FEE";


    /**
     * Constant for "ZONE" node name.
     */

    public static final String $ZONE = "ZONE";


    /**
     * Constant for "HAZMAT_FEE" node name.
     */

    public static final String $HAZMAT_FEE = "HAZMAT_FEE";


    /**
     * Constant for "OPTION" node name.
     */

    public static final String $OPTION = "OPTION";


    /**
     * Constant for "CONSIGNEE_CODE" node name.
     */

    public static final String $CONSIGNEE_CODE = "CONSIGNEE_CODE";


    /**
     * Constant for "SHIPDATE" node name.
     */

    public static final String $SHIPDATE = "SHIPDATE";


    /**
     * Constant for "NONSTANDARD_MAIL_FEE" node name.
     */

    public static final String $NONSTANDARD_MAIL_FEE = "NONSTANDARD_MAIL_FEE";


    /**
     * Constant for "SHIPPER_REFERENCE" node name.
     */

    public static final String $SHIPPER_REFERENCE = "SHIPPER_REFERENCE";


    /**
     * Constant for "DIMENSION" node name.
     */

    public static final String $DIMENSION = "DIMENSION";


    /**
     * Constant for "BAR_CODE" node name.
     */

    public static final String $BAR_CODE = "BAR_CODE";


    protected String _ADDITIONALHANDLING = null;

    protected String _ADDITIONALHANDLINGFEE = null;

    protected String _APPORTIONEDBASE = null;

    protected String _APPORTIONEDDISCOUNT = null;

    protected String _APPORTIONEDSPECIAL = null;

    protected String _APPORTIONEDTOTAL = null;

    protected XmlObject _ARRIVEDATE = null;

    protected String _BARCODE = null;

    protected String _BUNDLEID = null;

    protected XmlObject _CALLTAG = null;

    protected String _CALLTAGFEE = null;

    protected String _CALLTAGNUMBER = null;

    protected XmlObject _CERTIFIEDMAIL = null;

    protected XmlObject _CERTIFIEDMAILFEE = null;

    protected XmlObject _CODAMOUNT = null;

    protected String _CODFEE = null;

    protected String _CODNUMBER = null;

    protected String _CODPAYMENTMETHOD = null;

    protected String _COMMODITYCONTENTS = null;

    protected XmlObject _CONSIGNEE = null;

    protected String _CONSIGNEEACCOUNT = null;

    protected String _CONSIGNEECODE = null;

    protected String _CONSIGNEEREFERENCE = null;

    protected XmlObject _CONSOLIDATIONID = null;

    protected XmlObject _CYCLECOUNT = null;

    protected String _DECLAREDVALUEAMOUNT = null;

    protected String _DECLAREDVALUEFEE = null;

    protected String _DESCRIPTION = null;

    protected XmlObject _DIMENSION = null;

    protected String _DIMENSIONALWEIGHTRATED = null;

    protected String _DIRECTDELIVERY = null;

    protected String _DIRECTDELIVERYFEE = null;

    protected String _DOCUMENTSONLY = null;

    protected String _EXTENDEDAREAFEE = null;

    protected String _HAZMAT = null;

    protected String _HAZMATCLASS = null;

    protected String _HAZMATDESCRIPTION = null;

    protected String _HAZMATFEE = null;

    protected String _HAZMATID = null;

    protected String _HAZMATLABEL = null;

    protected String _HAZMATPACKINGGROUP = null;

    protected String _HAZMATQUANTITY = null;

    protected String _HOLDATLOCATION = null;

    protected String _HUNDREDWEIGHTRATED = null;

    protected String _MAXICODE = null;

    protected String _MSN = null;

    protected String _NOFNSEQUENCEBUNDLE = null;

    protected String _NOFNTOTALBUNDLE = null;

    protected String _NONMACHINABLEMAILFEE = null;

    protected String _NONSTANDARDMAILFEE = null;

    protected String _OVERSIZE = null;

    protected String _OVERSIZEFEE = null;

    protected java.util.Vector _OPTION = new java.util.Vector();

    protected String _PACKAGELISTID = null;

    protected String _PACKAGING = null;

    protected String _PARCELAIRLIFT = null;

    protected String _PARCELAIRLIFTFEE = null;

    protected XmlObject _PROOF = null;

    protected String _PROOFFEE = null;

    protected XmlObject _PROOFREQUIRESSIGNATURE = null;

    protected String _PROOFREQUIRESSIGNATUREFEE = null;

    protected String _PROOFREQUIRESIGNATURE = null;

    protected XmlObject _PROOFREQUIRESIGNATUREFEE = null;

    protected String _REGISTEREDMAIL = null;

    protected String _REGISTEREDMAILFEE = null;

    protected String _RESIDENTIALDELIVERYFEE = null;

    protected String _ROUTINGCODE = null;

    protected String _SATURDAYDELIVERY = null;

    protected String _SATURDAYDELIVERYFEE = null;

    protected String _SATURDAYPICKUPFEE = null;

    protected String _SEDMETHOD = null;

    protected String _SHIPDATE = null;

    protected String _SHIPPER = null;

    protected String _SHIPPERREFERENCE = null;

    protected String _SPECIALDELIVERY = null;

    protected String _SPECIALDELIVERYFEE = null;

    protected String _SUBCATEGORY = null;

    protected String _TERMS = null;

    protected String _THIRDPARTYBILLING = null;

    protected String _THIRDPARTYBILLINGACCOUNT = null;

    protected String _THIRDPARTYBILLINGADDRESS = null;

    protected String _TIMEINTRANSIT = null;

    protected String _TRACKINGNUMBER = null;

    protected String _ULTIMATEDESTINATIONCOUNTRY = null;

    protected String _WEIGHT = null;

    protected String _ZONE = null;

    protected String _PROOFREQUIREADULTSIGNATURE = null;


    /**
     * Storage for UNEXPECTED_XML errors.
     */

    protected Vector _unexpected_xml_errors_ = null;


    /**
     * Default no args constructor.
     */

    public RESULTITEM() {

    }


    /**
     * Creates and populates an instance from the provided parse tree.
     *
     * @param xml the parse tree
     */

    public RESULTITEM(XmlElement xml) {

        fromXml(xml);

    }


    /**
     * Get the ADDITIONALHANDLING property.
     */

    public String getADDITIONALHANDLING() {

        return (_ADDITIONALHANDLING);

    }


    /**
     * Set the ADDITIONALHANDLING property.
     */

    public void setADDITIONALHANDLING(String newValue) {

        _ADDITIONALHANDLING = newValue;

    }


    /**
     * Checks for whether ADDITIONALHANDLING is set or not.
     *
     * @returns true if ADDITIONALHANDLING is set, false if not
     */

    public boolean hasADDITIONALHANDLING() {

        return (_ADDITIONALHANDLING != null);

    }


    /**
     * Discards ADDITIONALHANDLING's value.
     */

    public void deleteADDITIONALHANDLING() {

        _ADDITIONALHANDLING = null;

    }


    /**
     * Get the ADDITIONALHANDLINGFEE property.
     */

    public String getADDITIONALHANDLINGFEE() {

        return (_ADDITIONALHANDLINGFEE);

    }


    /**
     * Set the ADDITIONALHANDLINGFEE property.
     */

    public void setADDITIONALHANDLINGFEE(String newValue) {

        _ADDITIONALHANDLINGFEE = newValue;

    }


    /**
     * Checks for whether ADDITIONALHANDLINGFEE is set or not.
     *
     * @returns true if ADDITIONALHANDLINGFEE is set, false if not
     */

    public boolean hasADDITIONALHANDLINGFEE() {

        return (_ADDITIONALHANDLINGFEE != null);

    }


    /**
     * Discards ADDITIONALHANDLINGFEE's value.
     */

    public void deleteADDITIONALHANDLINGFEE() {

        _ADDITIONALHANDLINGFEE = null;

    }


    /**
     * Get the APPORTIONEDBASE property.
     */

    public String getAPPORTIONEDBASE() {

        return (_APPORTIONEDBASE);

    }


    /**
     * Set the APPORTIONEDBASE property.
     */

    public void setAPPORTIONEDBASE(String newValue) {

        _APPORTIONEDBASE = newValue;

    }


    /**
     * Checks for whether APPORTIONEDBASE is set or not.
     *
     * @returns true if APPORTIONEDBASE is set, false if not
     */

    public boolean hasAPPORTIONEDBASE() {

        return (_APPORTIONEDBASE != null);

    }


    /**
     * Discards APPORTIONEDBASE's value.
     */

    public void deleteAPPORTIONEDBASE() {

        _APPORTIONEDBASE = null;

    }


    /**
     * Get the APPORTIONEDDISCOUNT property.
     */

    public String getAPPORTIONEDDISCOUNT() {

        return (_APPORTIONEDDISCOUNT);

    }


    /**
     * Set the APPORTIONEDDISCOUNT property.
     */

    public void setAPPORTIONEDDISCOUNT(String newValue) {

        _APPORTIONEDDISCOUNT = newValue;

    }


    /**
     * Checks for whether APPORTIONEDDISCOUNT is set or not.
     *
     * @returns true if APPORTIONEDDISCOUNT is set, false if not
     */

    public boolean hasAPPORTIONEDDISCOUNT() {

        return (_APPORTIONEDDISCOUNT != null);

    }


    /**
     * Discards APPORTIONEDDISCOUNT's value.
     */

    public void deleteAPPORTIONEDDISCOUNT() {

        _APPORTIONEDDISCOUNT = null;

    }


    /**
     * Get the APPORTIONEDSPECIAL property.
     */

    public String getAPPORTIONEDSPECIAL() {

        return (_APPORTIONEDSPECIAL);

    }


    /**
     * Set the APPORTIONEDSPECIAL property.
     */

    public void setAPPORTIONEDSPECIAL(String newValue) {

        _APPORTIONEDSPECIAL = newValue;

    }


    /**
     * Checks for whether APPORTIONEDSPECIAL is set or not.
     *
     * @returns true if APPORTIONEDSPECIAL is set, false if not
     */

    public boolean hasAPPORTIONEDSPECIAL() {

        return (_APPORTIONEDSPECIAL != null);

    }


    /**
     * Discards APPORTIONEDSPECIAL's value.
     */

    public void deleteAPPORTIONEDSPECIAL() {

        _APPORTIONEDSPECIAL = null;

    }


    /**
     * Get the APPORTIONEDTOTAL property.
     */

    public String getAPPORTIONEDTOTAL() {

        return (_APPORTIONEDTOTAL);

    }


    /**
     * Set the APPORTIONEDTOTAL property.
     */

    public void setAPPORTIONEDTOTAL(String newValue) {

        _APPORTIONEDTOTAL = newValue;

    }


    /**
     * Checks for whether APPORTIONEDTOTAL is set or not.
     *
     * @returns true if APPORTIONEDTOTAL is set, false if not
     */

    public boolean hasAPPORTIONEDTOTAL() {

        return (_APPORTIONEDTOTAL != null);

    }


    /**
     * Discards APPORTIONEDTOTAL's value.
     */

    public void deleteAPPORTIONEDTOTAL() {

        _APPORTIONEDTOTAL = null;

    }


    /**
     * Get the ARRIVEDATE property.
     */

    public XmlObject getARRIVEDATE() {

        return (_ARRIVEDATE);

    }


    /**
     * Set the ARRIVEDATE property.
     */

    public void setARRIVEDATE(XmlObject obj) {

        _ARRIVEDATE = obj;

    }


    protected void setARRIVEDATE(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _ARRIVEDATE = new XmlString(s);

            } else {

                _ARRIVEDATE = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _ARRIVEDATE =

                ObjectFactory.createObject(xml);

        if (_ARRIVEDATE == null) {

            _ARRIVEDATE = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether ARRIVEDATE is set or not.
     *
     * @returns true if ARRIVEDATE is set, false if not
     */

    public boolean hasARRIVEDATE() {

        return (_ARRIVEDATE != null);

    }


    /**
     * Discards ARRIVEDATE's value.
     */

    public void deleteARRIVEDATE() {

        _ARRIVEDATE = null;

    }


    /**
     * Get the BARCODE property.
     */

    public String getBARCODE() {

        return (_BARCODE);

    }


    /**
     * Set the BARCODE property.
     */

    public void setBARCODE(String newValue) {

        _BARCODE = newValue;

    }


    /**
     * Checks for whether BARCODE is set or not.
     *
     * @returns true if BARCODE is set, false if not
     */

    public boolean hasBARCODE() {

        return (_BARCODE != null);

    }


    /**
     * Discards BARCODE's value.
     */

    public void deleteBARCODE() {

        _BARCODE = null;

    }


    /**
     * Get the BUNDLEID property.
     */

    public String getBUNDLEID() {

        return (_BUNDLEID);

    }


    /**
     * Set the BUNDLEID property.
     */

    public void setBUNDLEID(String newValue) {

        _BUNDLEID = newValue;

    }


    /**
     * Checks for whether BUNDLEID is set or not.
     *
     * @returns true if BUNDLEID is set, false if not
     */

    public boolean hasBUNDLEID() {

        return (_BUNDLEID != null);

    }


    /**
     * Discards BUNDLEID's value.
     */

    public void deleteBUNDLEID() {

        _BUNDLEID = null;

    }


    /**
     * Get the CALLTAG property.
     */

    public XmlObject getCALLTAG() {

        return (_CALLTAG);

    }


    /**
     * Set the CALLTAG property.
     */

    public void setCALLTAG(XmlObject obj) {

        _CALLTAG = obj;

    }


    protected void setCALLTAG(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _CALLTAG = new XmlString(s);

            } else {

                _CALLTAG = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _CALLTAG =

                ObjectFactory.createObject(xml);

        if (_CALLTAG == null) {

            _CALLTAG = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether CALLTAG is set or not.
     *
     * @returns true if CALLTAG is set, false if not
     */

    public boolean hasCALLTAG() {

        return (_CALLTAG != null);

    }


    /**
     * Discards CALLTAG's value.
     */

    public void deleteCALLTAG() {

        _CALLTAG = null;

    }


    /**
     * Get the CALLTAGFEE property.
     */

    public String getCALLTAGFEE() {

        return (_CALLTAGFEE);

    }


    /**
     * Set the CALLTAGFEE property.
     */

    public void setCALLTAGFEE(String newValue) {

        _CALLTAGFEE = newValue;

    }


    /**
     * Checks for whether CALLTAGFEE is set or not.
     *
     * @returns true if CALLTAGFEE is set, false if not
     */

    public boolean hasCALLTAGFEE() {

        return (_CALLTAGFEE != null);

    }


    /**
     * Discards CALLTAGFEE's value.
     */

    public void deleteCALLTAGFEE() {

        _CALLTAGFEE = null;

    }


    /**
     * Get the CALLTAGNUMBER property.
     */

    public String getCALLTAGNUMBER() {

        return (_CALLTAGNUMBER);

    }


    /**
     * Set the CALLTAGNUMBER property.
     */

    public void setCALLTAGNUMBER(String newValue) {

        _CALLTAGNUMBER = newValue;

    }


    /**
     * Checks for whether CALLTAGNUMBER is set or not.
     *
     * @returns true if CALLTAGNUMBER is set, false if not
     */

    public boolean hasCALLTAGNUMBER() {

        return (_CALLTAGNUMBER != null);

    }


    /**
     * Discards CALLTAGNUMBER's value.
     */

    public void deleteCALLTAGNUMBER() {

        _CALLTAGNUMBER = null;

    }


    /**
     * Get the CERTIFIEDMAIL property.
     */

    public XmlObject getCERTIFIEDMAIL() {

        return (_CERTIFIEDMAIL);

    }


    /**
     * Set the CERTIFIEDMAIL property.
     */

    public void setCERTIFIEDMAIL(XmlObject obj) {

        _CERTIFIEDMAIL = obj;

    }


    protected void setCERTIFIEDMAIL(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _CERTIFIEDMAIL = new XmlString(s);

            } else {

                _CERTIFIEDMAIL = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _CERTIFIEDMAIL =

                ObjectFactory.createObject(xml);

        if (_CERTIFIEDMAIL == null) {

            _CERTIFIEDMAIL = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether CERTIFIEDMAIL is set or not.
     *
     * @returns true if CERTIFIEDMAIL is set, false if not
     */

    public boolean hasCERTIFIEDMAIL() {

        return (_CERTIFIEDMAIL != null);

    }


    /**
     * Discards CERTIFIEDMAIL's value.
     */

    public void deleteCERTIFIEDMAIL() {

        _CERTIFIEDMAIL = null;

    }


    /**
     * Get the CERTIFIEDMAILFEE property.
     */

    public XmlObject getCERTIFIEDMAILFEE() {

        return (_CERTIFIEDMAILFEE);

    }


    /**
     * Set the CERTIFIEDMAILFEE property.
     */

    public void setCERTIFIEDMAILFEE(XmlObject obj) {

        _CERTIFIEDMAILFEE = obj;

    }


    protected void setCERTIFIEDMAILFEE(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _CERTIFIEDMAILFEE = new XmlString(s);

            } else {

                _CERTIFIEDMAILFEE = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _CERTIFIEDMAILFEE =

                ObjectFactory.createObject(xml);

        if (_CERTIFIEDMAILFEE == null) {

            _CERTIFIEDMAILFEE = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether CERTIFIEDMAILFEE is set or not.
     *
     * @returns true if CERTIFIEDMAILFEE is set, false if not
     */

    public boolean hasCERTIFIEDMAILFEE() {

        return (_CERTIFIEDMAILFEE != null);

    }


    /**
     * Discards CERTIFIEDMAILFEE's value.
     */

    public void deleteCERTIFIEDMAILFEE() {

        _CERTIFIEDMAILFEE = null;

    }


    /**
     * Get the CODAMOUNT property.
     */

    public XmlObject getCODAMOUNT() {

        return (_CODAMOUNT);

    }


    /**
     * Set the CODAMOUNT property.
     */

    public void setCODAMOUNT(XmlObject obj) {

        _CODAMOUNT = obj;

    }


    protected void setCODAMOUNT(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _CODAMOUNT = new XmlString(s);

            } else {

                _CODAMOUNT = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _CODAMOUNT =

                ObjectFactory.createObject(xml);

        if (_CODAMOUNT == null) {

            _CODAMOUNT = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether CODAMOUNT is set or not.
     *
     * @returns true if CODAMOUNT is set, false if not
     */

    public boolean hasCODAMOUNT() {

        return (_CODAMOUNT != null);

    }


    /**
     * Discards CODAMOUNT's value.
     */

    public void deleteCODAMOUNT() {

        _CODAMOUNT = null;

    }


    /**
     * Get the CODFEE property.
     */

    public String getCODFEE() {

        return (_CODFEE);

    }


    /**
     * Set the CODFEE property.
     */

    public void setCODFEE(String newValue) {

        _CODFEE = newValue;

    }


    /**
     * Checks for whether CODFEE is set or not.
     *
     * @returns true if CODFEE is set, false if not
     */

    public boolean hasCODFEE() {

        return (_CODFEE != null);

    }


    /**
     * Discards CODFEE's value.
     */

    public void deleteCODFEE() {

        _CODFEE = null;

    }


    /**
     * Get the CODNUMBER property.
     */

    public String getCODNUMBER() {

        return (_CODNUMBER);

    }


    /**
     * Set the CODNUMBER property.
     */

    public void setCODNUMBER(String newValue) {

        _CODNUMBER = newValue;

    }


    /**
     * Checks for whether CODNUMBER is set or not.
     *
     * @returns true if CODNUMBER is set, false if not
     */

    public boolean hasCODNUMBER() {

        return (_CODNUMBER != null);

    }


    /**
     * Discards CODNUMBER's value.
     */

    public void deleteCODNUMBER() {

        _CODNUMBER = null;

    }


    /**
     * Get the CODPAYMENTMETHOD property.
     */

    public String getCODPAYMENTMETHOD() {

        return (_CODPAYMENTMETHOD);

    }


    /**
     * Set the CODPAYMENTMETHOD property.
     */

    public void setCODPAYMENTMETHOD(String newValue) {

        _CODPAYMENTMETHOD = newValue;

    }


    /**
     * Checks for whether CODPAYMENTMETHOD is set or not.
     *
     * @returns true if CODPAYMENTMETHOD is set, false if not
     */

    public boolean hasCODPAYMENTMETHOD() {

        return (_CODPAYMENTMETHOD != null);

    }


    /**
     * Discards CODPAYMENTMETHOD's value.
     */

    public void deleteCODPAYMENTMETHOD() {

        _CODPAYMENTMETHOD = null;

    }


    /**
     * Get the COMMODITYCONTENTS property.
     */

    public String getCOMMODITYCONTENTS() {

        return (_COMMODITYCONTENTS);

    }


    /**
     * Set the COMMODITYCONTENTS property.
     */

    public void setCOMMODITYCONTENTS(String newValue) {

        _COMMODITYCONTENTS = newValue;

    }


    /**
     * Checks for whether COMMODITYCONTENTS is set or not.
     *
     * @returns true if COMMODITYCONTENTS is set, false if not
     */

    public boolean hasCOMMODITYCONTENTS() {

        return (_COMMODITYCONTENTS != null);

    }


    /**
     * Discards COMMODITYCONTENTS's value.
     */

    public void deleteCOMMODITYCONTENTS() {

        _COMMODITYCONTENTS = null;

    }


    /**
     * Get the CONSIGNEE property.
     */

    public XmlObject getCONSIGNEE() {

        return (_CONSIGNEE);

    }


    /**
     * Set the CONSIGNEE property.
     */

    public void setCONSIGNEE(XmlObject obj) {

        _CONSIGNEE = obj;

    }


    protected void setCONSIGNEE(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _CONSIGNEE = new XmlString(s);

            } else {

                _CONSIGNEE = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _CONSIGNEE =

                ObjectFactory.createObject(xml);

        if (_CONSIGNEE == null) {

            _CONSIGNEE = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether CONSIGNEE is set or not.
     *
     * @returns true if CONSIGNEE is set, false if not
     */

    public boolean hasCONSIGNEE() {

        return (_CONSIGNEE != null);

    }


    /**
     * Discards CONSIGNEE's value.
     */

    public void deleteCONSIGNEE() {

        _CONSIGNEE = null;

    }


    /**
     * Get the CONSIGNEEACCOUNT property.
     */

    public String getCONSIGNEEACCOUNT() {

        return (_CONSIGNEEACCOUNT);

    }


    /**
     * Set the CONSIGNEEACCOUNT property.
     */

    public void setCONSIGNEEACCOUNT(String newValue) {

        _CONSIGNEEACCOUNT = newValue;

    }


    /**
     * Checks for whether CONSIGNEEACCOUNT is set or not.
     *
     * @returns true if CONSIGNEEACCOUNT is set, false if not
     */

    public boolean hasCONSIGNEEACCOUNT() {

        return (_CONSIGNEEACCOUNT != null);

    }


    /**
     * Discards CONSIGNEEACCOUNT's value.
     */

    public void deleteCONSIGNEEACCOUNT() {

        _CONSIGNEEACCOUNT = null;

    }


    /**
     * Get the CONSIGNEECODE property.
     */

    public String getCONSIGNEECODE() {

        return (_CONSIGNEECODE);

    }


    /**
     * Set the CONSIGNEECODE property.
     */

    public void setCONSIGNEECODE(String newValue) {

        _CONSIGNEECODE = newValue;

    }


    /**
     * Checks for whether CONSIGNEECODE is set or not.
     *
     * @returns true if CONSIGNEECODE is set, false if not
     */

    public boolean hasCONSIGNEECODE() {

        return (_CONSIGNEECODE != null);

    }


    /**
     * Discards CONSIGNEECODE's value.
     */

    public void deleteCONSIGNEECODE() {

        _CONSIGNEECODE = null;

    }


    /**
     * Get the CONSIGNEEREFERENCE property.
     */

    public String getCONSIGNEEREFERENCE() {

        return (_CONSIGNEEREFERENCE);

    }


    /**
     * Set the CONSIGNEEREFERENCE property.
     */

    public void setCONSIGNEEREFERENCE(String newValue) {

        _CONSIGNEEREFERENCE = newValue;

    }


    /**
     * Checks for whether CONSIGNEEREFERENCE is set or not.
     *
     * @returns true if CONSIGNEEREFERENCE is set, false if not
     */

    public boolean hasCONSIGNEEREFERENCE() {

        return (_CONSIGNEEREFERENCE != null);

    }


    /**
     * Discards CONSIGNEEREFERENCE's value.
     */

    public void deleteCONSIGNEEREFERENCE() {

        _CONSIGNEEREFERENCE = null;

    }


    /**
     * Get the CONSOLIDATIONID property.
     */

    public XmlObject getCONSOLIDATIONID() {

        return (_CONSOLIDATIONID);

    }


    /**
     * Set the CONSOLIDATIONID property.
     */

    public void setCONSOLIDATIONID(XmlObject obj) {

        _CONSOLIDATIONID = obj;

    }


    protected void setCONSOLIDATIONID(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _CONSOLIDATIONID = new XmlString(s);

            } else {

                _CONSOLIDATIONID = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _CONSOLIDATIONID =

                ObjectFactory.createObject(xml);

        if (_CONSOLIDATIONID == null) {

            _CONSOLIDATIONID = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether CONSOLIDATIONID is set or not.
     *
     * @returns true if CONSOLIDATIONID is set, false if not
     */

    public boolean hasCONSOLIDATIONID() {

        return (_CONSOLIDATIONID != null);

    }


    /**
     * Discards CONSOLIDATIONID's value.
     */

    public void deleteCONSOLIDATIONID() {

        _CONSOLIDATIONID = null;

    }


    /**
     * Get the CYCLECOUNT property.
     */

    public XmlObject getCYCLECOUNT() {

        return (_CYCLECOUNT);

    }


    /**
     * Set the CYCLECOUNT property.
     */

    public void setCYCLECOUNT(XmlObject obj) {

        _CYCLECOUNT = obj;

    }


    protected void setCYCLECOUNT(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _CYCLECOUNT = new XmlString(s);

            } else {

                _CYCLECOUNT = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _CYCLECOUNT =

                ObjectFactory.createObject(xml);

        if (_CYCLECOUNT == null) {

            _CYCLECOUNT = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether CYCLECOUNT is set or not.
     *
     * @returns true if CYCLECOUNT is set, false if not
     */

    public boolean hasCYCLECOUNT() {

        return (_CYCLECOUNT != null);

    }


    /**
     * Discards CYCLECOUNT's value.
     */

    public void deleteCYCLECOUNT() {

        _CYCLECOUNT = null;

    }


    /**
     * Get the DECLAREDVALUEAMOUNT property.
     */

    public String getDECLAREDVALUEAMOUNT() {

        return (_DECLAREDVALUEAMOUNT);

    }


    /**
     * Set the DECLAREDVALUEAMOUNT property.
     */

    public void setDECLAREDVALUEAMOUNT(String newValue) {

        _DECLAREDVALUEAMOUNT = newValue;

    }


    /**
     * Checks for whether DECLAREDVALUEAMOUNT is set or not.
     *
     * @returns true if DECLAREDVALUEAMOUNT is set, false if not
     */

    public boolean hasDECLAREDVALUEAMOUNT() {

        return (_DECLAREDVALUEAMOUNT != null);

    }


    /**
     * Discards DECLAREDVALUEAMOUNT's value.
     */

    public void deleteDECLAREDVALUEAMOUNT() {

        _DECLAREDVALUEAMOUNT = null;

    }


    /**
     * Get the DECLAREDVALUEFEE property.
     */

    public String getDECLAREDVALUEFEE() {

        return (_DECLAREDVALUEFEE);

    }


    /**
     * Set the DECLAREDVALUEFEE property.
     */

    public void setDECLAREDVALUEFEE(String newValue) {

        _DECLAREDVALUEFEE = newValue;

    }


    /**
     * Checks for whether DECLAREDVALUEFEE is set or not.
     *
     * @returns true if DECLAREDVALUEFEE is set, false if not
     */

    public boolean hasDECLAREDVALUEFEE() {

        return (_DECLAREDVALUEFEE != null);

    }


    /**
     * Discards DECLAREDVALUEFEE's value.
     */

    public void deleteDECLAREDVALUEFEE() {

        _DECLAREDVALUEFEE = null;

    }


    /**
     * Get the DESCRIPTION property.
     */

    public String getDESCRIPTION() {

        return (_DESCRIPTION);

    }


    /**
     * Set the DESCRIPTION property.
     */

    public void setDESCRIPTION(String newValue) {

        _DESCRIPTION = newValue;

    }


    /**
     * Checks for whether DESCRIPTION is set or not.
     *
     * @returns true if DESCRIPTION is set, false if not
     */

    public boolean hasDESCRIPTION() {

        return (_DESCRIPTION != null);

    }


    /**
     * Discards DESCRIPTION's value.
     */

    public void deleteDESCRIPTION() {

        _DESCRIPTION = null;

    }


    /**
     * Get the DIMENSION property.
     */

    public XmlObject getDIMENSION() {

        return (_DIMENSION);

    }


    /**
     * Set the DIMENSION property.
     */

    public void setDIMENSION(XmlObject obj) {

        _DIMENSION = obj;

    }


    protected void setDIMENSION(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _DIMENSION = new XmlString(s);

            } else {

                _DIMENSION = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _DIMENSION =

                ObjectFactory.createObject(xml);

        if (_DIMENSION == null) {

            _DIMENSION = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether DIMENSION is set or not.
     *
     * @returns true if DIMENSION is set, false if not
     */

    public boolean hasDIMENSION() {

        return (_DIMENSION != null);

    }


    /**
     * Discards DIMENSION's value.
     */

    public void deleteDIMENSION() {

        _DIMENSION = null;

    }


    /**
     * Get the DIMENSIONALWEIGHTRATED property.
     */

    public String getDIMENSIONALWEIGHTRATED() {

        return (_DIMENSIONALWEIGHTRATED);

    }


    /**
     * Set the DIMENSIONALWEIGHTRATED property.
     */

    public void setDIMENSIONALWEIGHTRATED(String newValue) {

        _DIMENSIONALWEIGHTRATED = newValue;

    }


    /**
     * Checks for whether DIMENSIONALWEIGHTRATED is set or not.
     *
     * @returns true if DIMENSIONALWEIGHTRATED is set, false if not
     */

    public boolean hasDIMENSIONALWEIGHTRATED() {

        return (_DIMENSIONALWEIGHTRATED != null);

    }


    /**
     * Discards DIMENSIONALWEIGHTRATED's value.
     */

    public void deleteDIMENSIONALWEIGHTRATED() {

        _DIMENSIONALWEIGHTRATED = null;

    }


    /**
     * Get the DIRECTDELIVERY property.
     */

    public String getDIRECTDELIVERY() {

        return (_DIRECTDELIVERY);

    }


    /**
     * Set the DIRECTDELIVERY property.
     */

    public void setDIRECTDELIVERY(String newValue) {

        _DIRECTDELIVERY = newValue;

    }


    /**
     * Checks for whether DIRECTDELIVERY is set or not.
     *
     * @returns true if DIRECTDELIVERY is set, false if not
     */

    public boolean hasDIRECTDELIVERY() {

        return (_DIRECTDELIVERY != null);

    }


    /**
     * Discards DIRECTDELIVERY's value.
     */

    public void deleteDIRECTDELIVERY() {

        _DIRECTDELIVERY = null;

    }


    /**
     * Get the DIRECTDELIVERYFEE property.
     */

    public String getDIRECTDELIVERYFEE() {

        return (_DIRECTDELIVERYFEE);

    }


    /**
     * Set the DIRECTDELIVERYFEE property.
     */

    public void setDIRECTDELIVERYFEE(String newValue) {

        _DIRECTDELIVERYFEE = newValue;

    }


    /**
     * Checks for whether DIRECTDELIVERYFEE is set or not.
     *
     * @returns true if DIRECTDELIVERYFEE is set, false if not
     */

    public boolean hasDIRECTDELIVERYFEE() {

        return (_DIRECTDELIVERYFEE != null);

    }


    /**
     * Discards DIRECTDELIVERYFEE's value.
     */

    public void deleteDIRECTDELIVERYFEE() {

        _DIRECTDELIVERYFEE = null;

    }


    /**
     * Get the DOCUMENTSONLY property.
     */

    public String getDOCUMENTSONLY() {

        return (_DOCUMENTSONLY);

    }


    /**
     * Set the DOCUMENTSONLY property.
     */

    public void setDOCUMENTSONLY(String newValue) {

        _DOCUMENTSONLY = newValue;

    }


    /**
     * Checks for whether DOCUMENTSONLY is set or not.
     *
     * @returns true if DOCUMENTSONLY is set, false if not
     */

    public boolean hasDOCUMENTSONLY() {

        return (_DOCUMENTSONLY != null);

    }


    /**
     * Discards DOCUMENTSONLY's value.
     */

    public void deleteDOCUMENTSONLY() {

        _DOCUMENTSONLY = null;

    }


    /**
     * Get the EXTENDEDAREAFEE property.
     */

    public String getEXTENDEDAREAFEE() {

        return (_EXTENDEDAREAFEE);

    }


    /**
     * Set the EXTENDEDAREAFEE property.
     */

    public void setEXTENDEDAREAFEE(String newValue) {

        _EXTENDEDAREAFEE = newValue;

    }


    /**
     * Checks for whether EXTENDEDAREAFEE is set or not.
     *
     * @returns true if EXTENDEDAREAFEE is set, false if not
     */

    public boolean hasEXTENDEDAREAFEE() {

        return (_EXTENDEDAREAFEE != null);

    }


    /**
     * Discards EXTENDEDAREAFEE's value.
     */

    public void deleteEXTENDEDAREAFEE() {

        _EXTENDEDAREAFEE = null;

    }


    /**
     * Get the HAZMAT property.
     */

    public String getHAZMAT() {

        return (_HAZMAT);

    }


    /**
     * Set the HAZMAT property.
     */

    public void setHAZMAT(String newValue) {

        _HAZMAT = newValue;

    }


    /**
     * Checks for whether HAZMAT is set or not.
     *
     * @returns true if HAZMAT is set, false if not
     */

    public boolean hasHAZMAT() {

        return (_HAZMAT != null);

    }


    /**
     * Discards HAZMAT's value.
     */

    public void deleteHAZMAT() {

        _HAZMAT = null;

    }


    /**
     * Get the HAZMATCLASS property.
     */

    public String getHAZMATCLASS() {

        return (_HAZMATCLASS);

    }


    /**
     * Set the HAZMATCLASS property.
     */

    public void setHAZMATCLASS(String newValue) {

        _HAZMATCLASS = newValue;

    }


    /**
     * Checks for whether HAZMATCLASS is set or not.
     *
     * @returns true if HAZMATCLASS is set, false if not
     */

    public boolean hasHAZMATCLASS() {

        return (_HAZMATCLASS != null);

    }


    /**
     * Discards HAZMATCLASS's value.
     */

    public void deleteHAZMATCLASS() {

        _HAZMATCLASS = null;

    }


    /**
     * Get the HAZMATDESCRIPTION property.
     */

    public String getHAZMATDESCRIPTION() {

        return (_HAZMATDESCRIPTION);

    }


    /**
     * Set the HAZMATDESCRIPTION property.
     */

    public void setHAZMATDESCRIPTION(String newValue) {

        _HAZMATDESCRIPTION = newValue;

    }


    /**
     * Checks for whether HAZMATDESCRIPTION is set or not.
     *
     * @returns true if HAZMATDESCRIPTION is set, false if not
     */

    public boolean hasHAZMATDESCRIPTION() {

        return (_HAZMATDESCRIPTION != null);

    }


    /**
     * Discards HAZMATDESCRIPTION's value.
     */

    public void deleteHAZMATDESCRIPTION() {

        _HAZMATDESCRIPTION = null;

    }


    /**
     * Get the HAZMATFEE property.
     */

    public String getHAZMATFEE() {

        return (_HAZMATFEE);

    }


    /**
     * Set the HAZMATFEE property.
     */

    public void setHAZMATFEE(String newValue) {

        _HAZMATFEE = newValue;

    }


    /**
     * Checks for whether HAZMATFEE is set or not.
     *
     * @returns true if HAZMATFEE is set, false if not
     */

    public boolean hasHAZMATFEE() {

        return (_HAZMATFEE != null);

    }


    /**
     * Discards HAZMATFEE's value.
     */

    public void deleteHAZMATFEE() {

        _HAZMATFEE = null;

    }


    /**
     * Get the HAZMATID property.
     */

    public String getHAZMATID() {

        return (_HAZMATID);

    }


    /**
     * Set the HAZMATID property.
     */

    public void setHAZMATID(String newValue) {

        _HAZMATID = newValue;

    }


    /**
     * Checks for whether HAZMATID is set or not.
     *
     * @returns true if HAZMATID is set, false if not
     */

    public boolean hasHAZMATID() {

        return (_HAZMATID != null);

    }


    /**
     * Discards HAZMATID's value.
     */

    public void deleteHAZMATID() {

        _HAZMATID = null;

    }


    /**
     * Get the HAZMATLABEL property.
     */

    public String getHAZMATLABEL() {

        return (_HAZMATLABEL);

    }


    /**
     * Set the HAZMATLABEL property.
     */

    public void setHAZMATLABEL(String newValue) {

        _HAZMATLABEL = newValue;

    }


    /**
     * Checks for whether HAZMATLABEL is set or not.
     *
     * @returns true if HAZMATLABEL is set, false if not
     */

    public boolean hasHAZMATLABEL() {

        return (_HAZMATLABEL != null);

    }


    /**
     * Discards HAZMATLABEL's value.
     */

    public void deleteHAZMATLABEL() {

        _HAZMATLABEL = null;

    }


    /**
     * Get the HAZMATPACKINGGROUP property.
     */

    public String getHAZMATPACKINGGROUP() {

        return (_HAZMATPACKINGGROUP);

    }


    /**
     * Set the HAZMATPACKINGGROUP property.
     */

    public void setHAZMATPACKINGGROUP(String newValue) {

        _HAZMATPACKINGGROUP = newValue;

    }


    /**
     * Checks for whether HAZMATPACKINGGROUP is set or not.
     *
     * @returns true if HAZMATPACKINGGROUP is set, false if not
     */

    public boolean hasHAZMATPACKINGGROUP() {

        return (_HAZMATPACKINGGROUP != null);

    }


    /**
     * Discards HAZMATPACKINGGROUP's value.
     */

    public void deleteHAZMATPACKINGGROUP() {

        _HAZMATPACKINGGROUP = null;

    }


    /**
     * Get the HAZMATQUANTITY property.
     */

    public String getHAZMATQUANTITY() {

        return (_HAZMATQUANTITY);

    }


    /**
     * Set the HAZMATQUANTITY property.
     */

    public void setHAZMATQUANTITY(String newValue) {

        _HAZMATQUANTITY = newValue;

    }


    /**
     * Checks for whether HAZMATQUANTITY is set or not.
     *
     * @returns true if HAZMATQUANTITY is set, false if not
     */

    public boolean hasHAZMATQUANTITY() {

        return (_HAZMATQUANTITY != null);

    }


    /**
     * Discards HAZMATQUANTITY's value.
     */

    public void deleteHAZMATQUANTITY() {

        _HAZMATQUANTITY = null;

    }


    /**
     * Get the HOLDATLOCATION property.
     */

    public String getHOLDATLOCATION() {

        return (_HOLDATLOCATION);

    }


    /**
     * Set the HOLDATLOCATION property.
     */

    public void setHOLDATLOCATION(String newValue) {

        _HOLDATLOCATION = newValue;

    }


    /**
     * Checks for whether HOLDATLOCATION is set or not.
     *
     * @returns true if HOLDATLOCATION is set, false if not
     */

    public boolean hasHOLDATLOCATION() {

        return (_HOLDATLOCATION != null);

    }


    /**
     * Discards HOLDATLOCATION's value.
     */

    public void deleteHOLDATLOCATION() {

        _HOLDATLOCATION = null;

    }


    /**
     * Get the HUNDREDWEIGHTRATED property.
     */

    public String getHUNDREDWEIGHTRATED() {

        return (_HUNDREDWEIGHTRATED);

    }


    /**
     * Set the HUNDREDWEIGHTRATED property.
     */

    public void setHUNDREDWEIGHTRATED(String newValue) {

        _HUNDREDWEIGHTRATED = newValue;

    }


    /**
     * Checks for whether HUNDREDWEIGHTRATED is set or not.
     *
     * @returns true if HUNDREDWEIGHTRATED is set, false if not
     */

    public boolean hasHUNDREDWEIGHTRATED() {

        return (_HUNDREDWEIGHTRATED != null);

    }


    /**
     * Discards HUNDREDWEIGHTRATED's value.
     */

    public void deleteHUNDREDWEIGHTRATED() {

        _HUNDREDWEIGHTRATED = null;

    }


    /**
     * Get the MAXICODE property.
     */

    public String getMAXICODE() {

        return (_MAXICODE);

    }


    /**
     * Set the MAXICODE property.
     */

    public void setMAXICODE(String newValue) {

        _MAXICODE = newValue;

    }


    /**
     * Checks for whether MAXICODE is set or not.
     *
     * @returns true if MAXICODE is set, false if not
     */

    public boolean hasMAXICODE() {

        return (_MAXICODE != null);

    }


    /**
     * Discards MAXICODE's value.
     */

    public void deleteMAXICODE() {

        _MAXICODE = null;

    }


    /**
     * Get the MSN property.
     */

    public String getMSN() {

        return (_MSN);

    }


    /**
     * Set the MSN property.
     */

    public void setMSN(String newValue) {

        _MSN = newValue;

    }


    /**
     * Checks for whether MSN is set or not.
     *
     * @returns true if MSN is set, false if not
     */

    public boolean hasMSN() {

        return (_MSN != null);

    }


    /**
     * Discards MSN's value.
     */

    public void deleteMSN() {

        _MSN = null;

    }


    /**
     * Get the NOFNSEQUENCEBUNDLE property.
     */

    public String getNOFNSEQUENCEBUNDLE() {

        return (_NOFNSEQUENCEBUNDLE);

    }


    /**
     * Set the NOFNSEQUENCEBUNDLE property.
     */

    public void setNOFNSEQUENCEBUNDLE(String newValue) {

        _NOFNSEQUENCEBUNDLE = newValue;

    }


    /**
     * Checks for whether NOFNSEQUENCEBUNDLE is set or not.
     *
     * @returns true if NOFNSEQUENCEBUNDLE is set, false if not
     */

    public boolean hasNOFNSEQUENCEBUNDLE() {

        return (_NOFNSEQUENCEBUNDLE != null);

    }


    /**
     * Discards NOFNSEQUENCEBUNDLE's value.
     */

    public void deleteNOFNSEQUENCEBUNDLE() {

        _NOFNSEQUENCEBUNDLE = null;

    }


    /**
     * Get the NOFNTOTALBUNDLE property.
     */

    public String getNOFNTOTALBUNDLE() {

        return (_NOFNTOTALBUNDLE);

    }


    /**
     * Set the NOFNTOTALBUNDLE property.
     */

    public void setNOFNTOTALBUNDLE(String newValue) {

        _NOFNTOTALBUNDLE = newValue;

    }


    /**
     * Checks for whether NOFNTOTALBUNDLE is set or not.
     *
     * @returns true if NOFNTOTALBUNDLE is set, false if not
     */

    public boolean hasNOFNTOTALBUNDLE() {

        return (_NOFNTOTALBUNDLE != null);

    }


    /**
     * Discards NOFNTOTALBUNDLE's value.
     */

    public void deleteNOFNTOTALBUNDLE() {

        _NOFNTOTALBUNDLE = null;

    }


    /**
     * Get the NONMACHINABLEMAILFEE property.
     */

    public String getNONMACHINABLEMAILFEE() {

        return (_NONMACHINABLEMAILFEE);

    }


    /**
     * Set the NONMACHINABLEMAILFEE property.
     */

    public void setNONMACHINABLEMAILFEE(String newValue) {

        _NONMACHINABLEMAILFEE = newValue;

    }


    /**
     * Checks for whether NONMACHINABLEMAILFEE is set or not.
     *
     * @returns true if NONMACHINABLEMAILFEE is set, false if not
     */

    public boolean hasNONMACHINABLEMAILFEE() {

        return (_NONMACHINABLEMAILFEE != null);

    }


    /**
     * Discards NONMACHINABLEMAILFEE's value.
     */

    public void deleteNONMACHINABLEMAILFEE() {

        _NONMACHINABLEMAILFEE = null;

    }


    /**
     * Get the NONSTANDARDMAILFEE property.
     */

    public String getNONSTANDARDMAILFEE() {

        return (_NONSTANDARDMAILFEE);

    }


    /**
     * Set the NONSTANDARDMAILFEE property.
     */

    public void setNONSTANDARDMAILFEE(String newValue) {

        _NONSTANDARDMAILFEE = newValue;

    }


    /**
     * Checks for whether NONSTANDARDMAILFEE is set or not.
     *
     * @returns true if NONSTANDARDMAILFEE is set, false if not
     */

    public boolean hasNONSTANDARDMAILFEE() {

        return (_NONSTANDARDMAILFEE != null);

    }


    /**
     * Discards NONSTANDARDMAILFEE's value.
     */

    public void deleteNONSTANDARDMAILFEE() {

        _NONSTANDARDMAILFEE = null;

    }


    /**
     * Get the OVERSIZE property.
     */

    public String getOVERSIZE() {

        return (_OVERSIZE);

    }


    /**
     * Set the OVERSIZE property.
     */

    public void setOVERSIZE(String newValue) {

        _OVERSIZE = newValue;

    }


    /**
     * Checks for whether OVERSIZE is set or not.
     *
     * @returns true if OVERSIZE is set, false if not
     */

    public boolean hasOVERSIZE() {

        return (_OVERSIZE != null);

    }


    /**
     * Discards OVERSIZE's value.
     */

    public void deleteOVERSIZE() {

        _OVERSIZE = null;

    }


    /**
     * Get the OVERSIZEFEE property.
     */

    public String getOVERSIZEFEE() {

        return (_OVERSIZEFEE);

    }


    /**
     * Set the OVERSIZEFEE property.
     */

    public void setOVERSIZEFEE(String newValue) {

        _OVERSIZEFEE = newValue;

    }


    /**
     * Checks for whether OVERSIZEFEE is set or not.
     *
     * @returns true if OVERSIZEFEE is set, false if not
     */

    public boolean hasOVERSIZEFEE() {

        return (_OVERSIZEFEE != null);

    }


    /**
     * Discards OVERSIZEFEE's value.
     */

    public void deleteOVERSIZEFEE() {

        _OVERSIZEFEE = null;

    }


    /**
     * Get the OPTION property.
     */

    public java.util.Vector getOPTION() {

        return (_OPTION);

    }


    public XmlObject getOPTIONAt(int index)

            throws IndexOutOfBoundsException {

        return ((XmlObject) _OPTION.elementAt(index));

    }


    /**
     * Get the count of elements in the OPTION property.
     */

    public int getOPTIONCount() {

        if (_OPTION == null) {

            return (0);

        }


        return (_OPTION.size());

    }


    /**
     * Set the OPTION property.
     */

    public void setOPTION(java.util.Vector newList) {


        if (newList == null) {

            _OPTION.removeAllElements();

        } else {

            _OPTION = (java.util.Vector) newList.clone();

        }

    }


    public void addOPTION(XmlObject obj) {

        if (obj == null) {

            return;

        }


        _OPTION.addElement(obj);

    }


    public void setOPTIONAt(XmlObject obj, int index)

            throws IndexOutOfBoundsException {

        if (obj == null) {

            return;

        }


        _OPTION.setElementAt(obj, index);

    }


    public void removeOPTION(XmlObject obj) {

        if (obj == null) {

            return;

        }


        _OPTION.removeElement(obj);

    }


    public void removeOPTIONAt(int index)

            throws IndexOutOfBoundsException {

        _OPTION.removeElementAt(index);

    }


    protected void setOPTION(XmlElement xml) {


        _OPTION.removeAllElements();

        xml = xml.getSubElementAt(0);


        while (xml != null) {


            Object obj = ObjectFactory.createObject(xml);

            if (obj != null) {

                _OPTION.addElement(obj);

            }


            xml = xml.next();

        }

    }


    /**
     * Get the PACKAGELISTID property.
     */

    public String getPACKAGELISTID() {

        return (_PACKAGELISTID);

    }


    /**
     * Set the PACKAGELISTID property.
     */

    public void setPACKAGELISTID(String newValue) {

        _PACKAGELISTID = newValue;

    }


    /**
     * Checks for whether PACKAGELISTID is set or not.
     *
     * @returns true if PACKAGELISTID is set, false if not
     */

    public boolean hasPACKAGELISTID() {

        return (_PACKAGELISTID != null);

    }


    /**
     * Discards PACKAGELISTID's value.
     */

    public void deletePACKAGELISTID() {

        _PACKAGELISTID = null;

    }


    /**
     * Get the PACKAGING property.
     */

    public String getPACKAGING() {

        return (_PACKAGING);

    }


    /**
     * Set the PACKAGING property.
     */

    public void setPACKAGING(String newValue) {

        _PACKAGING = newValue;

    }


    /**
     * Checks for whether PACKAGING is set or not.
     *
     * @returns true if PACKAGING is set, false if not
     */

    public boolean hasPACKAGING() {

        return (_PACKAGING != null);

    }


    /**
     * Discards PACKAGING's value.
     */

    public void deletePACKAGING() {

        _PACKAGING = null;

    }


    /**
     * Get the PARCELAIRLIFT property.
     */

    public String getPARCELAIRLIFT() {

        return (_PARCELAIRLIFT);

    }


    /**
     * Set the PARCELAIRLIFT property.
     */

    public void setPARCELAIRLIFT(String newValue) {

        _PARCELAIRLIFT = newValue;

    }


    /**
     * Checks for whether PARCELAIRLIFT is set or not.
     *
     * @returns true if PARCELAIRLIFT is set, false if not
     */

    public boolean hasPARCELAIRLIFT() {

        return (_PARCELAIRLIFT != null);

    }


    /**
     * Discards PARCELAIRLIFT's value.
     */

    public void deletePARCELAIRLIFT() {

        _PARCELAIRLIFT = null;

    }


    /**
     * Get the PARCELAIRLIFTFEE property.
     */

    public String getPARCELAIRLIFTFEE() {

        return (_PARCELAIRLIFTFEE);

    }


    /**
     * Set the PARCELAIRLIFTFEE property.
     */

    public void setPARCELAIRLIFTFEE(String newValue) {

        _PARCELAIRLIFTFEE = newValue;

    }


    /**
     * Checks for whether PARCELAIRLIFTFEE is set or not.
     *
     * @returns true if PARCELAIRLIFTFEE is set, false if not
     */

    public boolean hasPARCELAIRLIFTFEE() {

        return (_PARCELAIRLIFTFEE != null);

    }


    /**
     * Discards PARCELAIRLIFTFEE's value.
     */

    public void deletePARCELAIRLIFTFEE() {

        _PARCELAIRLIFTFEE = null;

    }


    /**
     * Get the PROOF property.
     */

    public XmlObject getPROOF() {

        return (_PROOF);

    }


    /**
     * Set the PROOF property.
     */

    public void setPROOF(XmlObject obj) {

        _PROOF = obj;

    }


    protected void setPROOF(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _PROOF = new XmlString(s);

            } else {

                _PROOF = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _PROOF =

                ObjectFactory.createObject(xml);

        if (_PROOF == null) {

            _PROOF = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether PROOF is set or not.
     *
     * @returns true if PROOF is set, false if not
     */

    public boolean hasPROOF() {

        return (_PROOF != null);

    }


    /**
     * Discards PROOF's value.
     */

    public void deletePROOF() {

        _PROOF = null;

    }


    /**
     * Get the PROOFFEE property.
     */

    public String getPROOFFEE() {

        return (_PROOFFEE);

    }


    /**
     * Set the PROOFFEE property.
     */

    public void setPROOFFEE(String newValue) {

        _PROOFFEE = newValue;

    }


    /**
     * Checks for whether PROOFFEE is set or not.
     *
     * @returns true if PROOFFEE is set, false if not
     */

    public boolean hasPROOFFEE() {

        return (_PROOFFEE != null);

    }


    /**
     * Discards PROOFFEE's value.
     */

    public void deletePROOFFEE() {

        _PROOFFEE = null;

    }


    /**
     * Get the PROOFREQUIRESSIGNATURE property.
     */

    public XmlObject getPROOFREQUIRESSIGNATURE() {

        return (_PROOFREQUIRESSIGNATURE);

    }


    /**
     * Set the PROOFREQUIRESSIGNATURE property.
     */

    public void setPROOFREQUIRESSIGNATURE(XmlObject obj) {

        _PROOFREQUIRESSIGNATURE = obj;

    }


    protected void setPROOFREQUIRESSIGNATURE(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _PROOFREQUIRESSIGNATURE = new XmlString(s);

            } else {

                _PROOFREQUIRESSIGNATURE = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _PROOFREQUIRESSIGNATURE =

                ObjectFactory.createObject(xml);

        if (_PROOFREQUIRESSIGNATURE == null) {

            _PROOFREQUIRESSIGNATURE = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether PROOFREQUIRESSIGNATURE is set or not.
     *
     * @returns true if PROOFREQUIRESSIGNATURE is set, false if not
     */

    public boolean hasPROOFREQUIRESSIGNATURE() {

        return (_PROOFREQUIRESSIGNATURE != null);

    }


    /**
     * Discards PROOFREQUIRESSIGNATURE's value.
     */

    public void deletePROOFREQUIRESSIGNATURE() {

        _PROOFREQUIRESSIGNATURE = null;

    }


    /**
     * Get the PROOFREQUIRESSIGNATUREFEE property.
     */

    public String getPROOFREQUIRESSIGNATUREFEE() {

        return (_PROOFREQUIRESSIGNATUREFEE);

    }


    /**
     * Set the PROOFREQUIRESSIGNATUREFEE property.
     */

    public void setPROOFREQUIRESSIGNATUREFEE(String newValue) {

        _PROOFREQUIRESSIGNATUREFEE = newValue;

    }


    /**
     * Checks for whether PROOFREQUIRESSIGNATUREFEE is set or not.
     *
     * @returns true if PROOFREQUIRESSIGNATUREFEE is set, false if not
     */

    public boolean hasPROOFREQUIRESSIGNATUREFEE() {

        return (_PROOFREQUIRESSIGNATUREFEE != null);

    }


    /**
     * Discards PROOFREQUIRESSIGNATUREFEE's value.
     */

    public void deletePROOFREQUIRESSIGNATUREFEE() {

        _PROOFREQUIRESSIGNATUREFEE = null;

    }


    /**
     * Get the PROOFREQUIRESIGNATURE property.
     */

    public String getPROOFREQUIRESIGNATURE() {

        return (_PROOFREQUIRESIGNATURE);

    }


    /**
     * Set the PROOFREQUIRESIGNATURE property.
     */

    public void setPROOFREQUIRESIGNATURE(String newValue) {

        _PROOFREQUIRESIGNATURE = newValue;

    }


    /**
     * Checks for whether PROOFREQUIRESIGNATURE is set or not.
     *
     * @returns true if PROOFREQUIRESIGNATURE is set, false if not
     */

    public boolean hasPROOFREQUIRESIGNATURE() {

        return (_PROOFREQUIRESIGNATURE != null);

    }


    /**
     * Discards PROOFREQUIRESIGNATURE's value.
     */

    public void deletePROOFREQUIRESIGNATURE() {

        _PROOFREQUIRESIGNATURE = null;

    }


    /**
     * Get the PROOFREQUIRESIGNATUREFEE property.
     */

    public XmlObject getPROOFREQUIRESIGNATUREFEE() {

        return (_PROOFREQUIRESIGNATUREFEE);

    }


    /**
     * Set the PROOFREQUIRESIGNATUREFEE property.
     */

    public void setPROOFREQUIRESIGNATUREFEE(XmlObject obj) {

        _PROOFREQUIRESIGNATUREFEE = obj;

    }


    protected void setPROOFREQUIRESIGNATUREFEE(XmlElement xml) {


        if (xml.getNumSubElements() == 0) {

            String s = xml.getData();

            if (s != null) {

                _PROOFREQUIRESIGNATUREFEE = new XmlString(s);

            } else {

                _PROOFREQUIRESIGNATUREFEE = null;

            }


            return;

        }


        xml = xml.getSubElementAt(0);

        _PROOFREQUIRESIGNATUREFEE =

                ObjectFactory.createObject(xml);

        if (_PROOFREQUIRESIGNATUREFEE == null) {

            _PROOFREQUIRESIGNATUREFEE = xml.getAnyContent($RESULTITEM);

        }

    }


    /**
     * Checks for whether PROOFREQUIRESIGNATUREFEE is set or not.
     *
     * @returns true if PROOFREQUIRESIGNATUREFEE is set, false if not
     */

    public boolean hasPROOFREQUIRESIGNATUREFEE() {

        return (_PROOFREQUIRESIGNATUREFEE != null);

    }


    /**
     * Discards PROOFREQUIRESIGNATUREFEE's value.
     */

    public void deletePROOFREQUIRESIGNATUREFEE() {

        _PROOFREQUIRESIGNATUREFEE = null;

    }


    /**
     * Get the REGISTEREDMAIL property.
     */

    public String getREGISTEREDMAIL() {

        return (_REGISTEREDMAIL);

    }


    /**
     * Set the REGISTEREDMAIL property.
     */

    public void setREGISTEREDMAIL(String newValue) {

        _REGISTEREDMAIL = newValue;

    }


    /**
     * Checks for whether REGISTEREDMAIL is set or not.
     *
     * @returns true if REGISTEREDMAIL is set, false if not
     */

    public boolean hasREGISTEREDMAIL() {

        return (_REGISTEREDMAIL != null);

    }


    /**
     * Discards REGISTEREDMAIL's value.
     */

    public void deleteREGISTEREDMAIL() {

        _REGISTEREDMAIL = null;

    }


    /**
     * Get the REGISTEREDMAILFEE property.
     */

    public String getREGISTEREDMAILFEE() {

        return (_REGISTEREDMAILFEE);

    }


    /**
     * Set the REGISTEREDMAILFEE property.
     */

    public void setREGISTEREDMAILFEE(String newValue) {

        _REGISTEREDMAILFEE = newValue;

    }


    /**
     * Checks for whether REGISTEREDMAILFEE is set or not.
     *
     * @returns true if REGISTEREDMAILFEE is set, false if not
     */

    public boolean hasREGISTEREDMAILFEE() {

        return (_REGISTEREDMAILFEE != null);

    }


    /**
     * Discards REGISTEREDMAILFEE's value.
     */

    public void deleteREGISTEREDMAILFEE() {

        _REGISTEREDMAILFEE = null;

    }


    /**
     * Get the RESIDENTIALDELIVERYFEE property.
     */

    public String getRESIDENTIALDELIVERYFEE() {

        return (_RESIDENTIALDELIVERYFEE);

    }


    /**
     * Set the RESIDENTIALDELIVERYFEE property.
     */

    public void setRESIDENTIALDELIVERYFEE(String newValue) {

        _RESIDENTIALDELIVERYFEE = newValue;

    }


    /**
     * Checks for whether RESIDENTIALDELIVERYFEE is set or not.
     *
     * @returns true if RESIDENTIALDELIVERYFEE is set, false if not
     */

    public boolean hasRESIDENTIALDELIVERYFEE() {

        return (_RESIDENTIALDELIVERYFEE != null);

    }


    /**
     * Discards RESIDENTIALDELIVERYFEE's value.
     */

    public void deleteRESIDENTIALDELIVERYFEE() {

        _RESIDENTIALDELIVERYFEE = null;

    }


    /**
     * Get the ROUTINGCODE property.
     */

    public String getROUTINGCODE() {

        return (_ROUTINGCODE);

    }


    /**
     * Set the ROUTINGCODE property.
     */

    public void setROUTINGCODE(String newValue) {

        _ROUTINGCODE = newValue;

    }


    /**
     * Checks for whether ROUTINGCODE is set or not.
     *
     * @returns true if ROUTINGCODE is set, false if not
     */

    public boolean hasROUTINGCODE() {

        return (_ROUTINGCODE != null);

    }


    /**
     * Discards ROUTINGCODE's value.
     */

    public void deleteROUTINGCODE() {

        _ROUTINGCODE = null;

    }


    /**
     * Get the SATURDAYDELIVERY property.
     */

    public String getSATURDAYDELIVERY() {

        return (_SATURDAYDELIVERY);

    }


    /**
     * Set the SATURDAYDELIVERY property.
     */

    public void setSATURDAYDELIVERY(String newValue) {

        _SATURDAYDELIVERY = newValue;

    }


    /**
     * Checks for whether SATURDAYDELIVERY is set or not.
     *
     * @returns true if SATURDAYDELIVERY is set, false if not
     */

    public boolean hasSATURDAYDELIVERY() {

        return (_SATURDAYDELIVERY != null);

    }


    /**
     * Discards SATURDAYDELIVERY's value.
     */

    public void deleteSATURDAYDELIVERY() {

        _SATURDAYDELIVERY = null;

    }


    /**
     * Get the SATURDAYDELIVERYFEE property.
     */

    public String getSATURDAYDELIVERYFEE() {

        return (_SATURDAYDELIVERYFEE);

    }


    /**
     * Set the SATURDAYDELIVERYFEE property.
     */

    public void setSATURDAYDELIVERYFEE(String newValue) {

        _SATURDAYDELIVERYFEE = newValue;

    }


    /**
     * Checks for whether SATURDAYDELIVERYFEE is set or not.
     *
     * @returns true if SATURDAYDELIVERYFEE is set, false if not
     */

    public boolean hasSATURDAYDELIVERYFEE() {

        return (_SATURDAYDELIVERYFEE != null);

    }


    /**
     * Discards SATURDAYDELIVERYFEE's value.
     */

    public void deleteSATURDAYDELIVERYFEE() {

        _SATURDAYDELIVERYFEE = null;

    }


    /**
     * Get the SATURDAYPICKUPFEE property.
     */

    public String getSATURDAYPICKUPFEE() {

        return (_SATURDAYPICKUPFEE);

    }


    /**
     * Set the SATURDAYPICKUPFEE property.
     */

    public void setSATURDAYPICKUPFEE(String newValue) {

        _SATURDAYPICKUPFEE = newValue;

    }


    /**
     * Checks for whether SATURDAYPICKUPFEE is set or not.
     *
     * @returns true if SATURDAYPICKUPFEE is set, false if not
     */

    public boolean hasSATURDAYPICKUPFEE() {

        return (_SATURDAYPICKUPFEE != null);

    }


    /**
     * Discards SATURDAYPICKUPFEE's value.
     */

    public void deleteSATURDAYPICKUPFEE() {

        _SATURDAYPICKUPFEE = null;

    }


    /**
     * Get the SEDMETHOD property.
     */

    public String getSEDMETHOD() {

        return (_SEDMETHOD);

    }


    /**
     * Set the SEDMETHOD property.
     */

    public void setSEDMETHOD(String newValue) {

        _SEDMETHOD = newValue;

    }


    /**
     * Checks for whether SEDMETHOD is set or not.
     *
     * @returns true if SEDMETHOD is set, false if not
     */

    public boolean hasSEDMETHOD() {

        return (_SEDMETHOD != null);

    }


    /**
     * Discards SEDMETHOD's value.
     */

    public void deleteSEDMETHOD() {

        _SEDMETHOD = null;

    }


    /**
     * Get the SHIPDATE property.
     */

    public String getSHIPDATE() {

        return (_SHIPDATE);

    }


    /**
     * Set the SHIPDATE property.
     */

    public void setSHIPDATE(String newValue) {

        _SHIPDATE = newValue;

    }


    /**
     * Checks for whether SHIPDATE is set or not.
     *
     * @returns true if SHIPDATE is set, false if not
     */

    public boolean hasSHIPDATE() {

        return (_SHIPDATE != null);

    }


    /**
     * Discards SHIPDATE's value.
     */

    public void deleteSHIPDATE() {

        _SHIPDATE = null;

    }


    /**
     * Get the SHIPPER property.
     */

    public String getSHIPPER() {

        return (_SHIPPER);

    }


    /**
     * Set the SHIPPER property.
     */

    public void setSHIPPER(String newValue) {

        _SHIPPER = newValue;

    }


    /**
     * Checks for whether SHIPPER is set or not.
     *
     * @returns true if SHIPPER is set, false if not
     */

    public boolean hasSHIPPER() {

        return (_SHIPPER != null);

    }


    /**
     * Discards SHIPPER's value.
     */

    public void deleteSHIPPER() {

        _SHIPPER = null;

    }


    /**
     * Get the SHIPPERREFERENCE property.
     */

    public String getSHIPPERREFERENCE() {

        return (_SHIPPERREFERENCE);

    }


    /**
     * Set the SHIPPERREFERENCE property.
     */

    public void setSHIPPERREFERENCE(String newValue) {

        _SHIPPERREFERENCE = newValue;

    }


    /**
     * Checks for whether SHIPPERREFERENCE is set or not.
     *
     * @returns true if SHIPPERREFERENCE is set, false if not
     */

    public boolean hasSHIPPERREFERENCE() {

        return (_SHIPPERREFERENCE != null);

    }


    /**
     * Discards SHIPPERREFERENCE's value.
     */

    public void deleteSHIPPERREFERENCE() {

        _SHIPPERREFERENCE = null;

    }


    /**
     * Get the SPECIALDELIVERY property.
     */

    public String getSPECIALDELIVERY() {

        return (_SPECIALDELIVERY);

    }


    /**
     * Set the SPECIALDELIVERY property.
     */

    public void setSPECIALDELIVERY(String newValue) {

        _SPECIALDELIVERY = newValue;

    }


    /**
     * Checks for whether SPECIALDELIVERY is set or not.
     *
     * @returns true if SPECIALDELIVERY is set, false if not
     */

    public boolean hasSPECIALDELIVERY() {

        return (_SPECIALDELIVERY != null);

    }


    /**
     * Discards SPECIALDELIVERY's value.
     */

    public void deleteSPECIALDELIVERY() {

        _SPECIALDELIVERY = null;

    }


    /**
     * Get the SPECIALDELIVERYFEE property.
     */

    public String getSPECIALDELIVERYFEE() {

        return (_SPECIALDELIVERYFEE);

    }


    /**
     * Set the SPECIALDELIVERYFEE property.
     */

    public void setSPECIALDELIVERYFEE(String newValue) {

        _SPECIALDELIVERYFEE = newValue;

    }


    /**
     * Checks for whether SPECIALDELIVERYFEE is set or not.
     *
     * @returns true if SPECIALDELIVERYFEE is set, false if not
     */

    public boolean hasSPECIALDELIVERYFEE() {

        return (_SPECIALDELIVERYFEE != null);

    }


    /**
     * Discards SPECIALDELIVERYFEE's value.
     */

    public void deleteSPECIALDELIVERYFEE() {

        _SPECIALDELIVERYFEE = null;

    }


    /**
     * Get the SUBCATEGORY property.
     */

    public String getSUBCATEGORY() {

        return (_SUBCATEGORY);

    }


    /**
     * Set the SUBCATEGORY property.
     */

    public void setSUBCATEGORY(String newValue) {

        _SUBCATEGORY = newValue;

    }


    /**
     * Checks for whether SUBCATEGORY is set or not.
     *
     * @returns true if SUBCATEGORY is set, false if not
     */

    public boolean hasSUBCATEGORY() {

        return (_SUBCATEGORY != null);

    }


    /**
     * Discards SUBCATEGORY's value.
     */

    public void deleteSUBCATEGORY() {

        _SUBCATEGORY = null;

    }


    /**
     * Get the TERMS property.
     */

    public String getTERMS() {

        return (_TERMS);

    }


    /**
     * Set the TERMS property.
     */

    public void setTERMS(String newValue) {

        _TERMS = newValue;

    }


    /**
     * Checks for whether TERMS is set or not.
     *
     * @returns true if TERMS is set, false if not
     */

    public boolean hasTERMS() {

        return (_TERMS != null);

    }


    /**
     * Discards TERMS's value.
     */

    public void deleteTERMS() {

        _TERMS = null;

    }


    /**
     * Get the THIRDPARTYBILLING property.
     */

    public String getTHIRDPARTYBILLING() {

        return (_THIRDPARTYBILLING);

    }


    /**
     * Set the THIRDPARTYBILLING property.
     */

    public void setTHIRDPARTYBILLING(String newValue) {

        _THIRDPARTYBILLING = newValue;

    }


    /**
     * Checks for whether THIRDPARTYBILLING is set or not.
     *
     * @returns true if THIRDPARTYBILLING is set, false if not
     */

    public boolean hasTHIRDPARTYBILLING() {

        return (_THIRDPARTYBILLING != null);

    }


    /**
     * Discards THIRDPARTYBILLING's value.
     */

    public void deleteTHIRDPARTYBILLING() {

        _THIRDPARTYBILLING = null;

    }


    /**
     * Get the THIRDPARTYBILLINGACCOUNT property.
     */

    public String getTHIRDPARTYBILLINGACCOUNT() {

        return (_THIRDPARTYBILLINGACCOUNT);

    }


    /**
     * Set the THIRDPARTYBILLINGACCOUNT property.
     */

    public void setTHIRDPARTYBILLINGACCOUNT(String newValue) {

        _THIRDPARTYBILLINGACCOUNT = newValue;

    }


    /**
     * Checks for whether THIRDPARTYBILLINGACCOUNT is set or not.
     *
     * @returns true if THIRDPARTYBILLINGACCOUNT is set, false if not
     */

    public boolean hasTHIRDPARTYBILLINGACCOUNT() {

        return (_THIRDPARTYBILLINGACCOUNT != null);

    }


    /**
     * Discards THIRDPARTYBILLINGACCOUNT's value.
     */

    public void deleteTHIRDPARTYBILLINGACCOUNT() {

        _THIRDPARTYBILLINGACCOUNT = null;

    }


    /**
     * Get the THIRDPARTYBILLINGADDRESS property.
     */

    public String getTHIRDPARTYBILLINGADDRESS() {

        return (_THIRDPARTYBILLINGADDRESS);

    }


    /**
     * Set the THIRDPARTYBILLINGADDRESS property.
     */

    public void setTHIRDPARTYBILLINGADDRESS(String newValue) {

        _THIRDPARTYBILLINGADDRESS = newValue;

    }


    /**
     * Checks for whether THIRDPARTYBILLINGADDRESS is set or not.
     *
     * @returns true if THIRDPARTYBILLINGADDRESS is set, false if not
     */

    public boolean hasTHIRDPARTYBILLINGADDRESS() {

        return (_THIRDPARTYBILLINGADDRESS != null);

    }


    /**
     * Discards THIRDPARTYBILLINGADDRESS's value.
     */

    public void deleteTHIRDPARTYBILLINGADDRESS() {

        _THIRDPARTYBILLINGADDRESS = null;

    }


    /**
     * Get the TIMEINTRANSIT property.
     */

    public String getTIMEINTRANSIT() {

        return (_TIMEINTRANSIT);

    }


    /**
     * Set the TIMEINTRANSIT property.
     */

    public void setTIMEINTRANSIT(String newValue) {

        _TIMEINTRANSIT = newValue;

    }


    /**
     * Checks for whether TIMEINTRANSIT is set or not.
     *
     * @returns true if TIMEINTRANSIT is set, false if not
     */

    public boolean hasTIMEINTRANSIT() {

        return (_TIMEINTRANSIT != null);

    }


    /**
     * Discards TIMEINTRANSIT's value.
     */

    public void deleteTIMEINTRANSIT() {

        _TIMEINTRANSIT = null;

    }


    /**
     * Get the TRACKINGNUMBER property.
     */

    public String getTRACKINGNUMBER() {

        return (_TRACKINGNUMBER);

    }


    /**
     * Set the TRACKINGNUMBER property.
     */

    public void setTRACKINGNUMBER(String newValue) {

        _TRACKINGNUMBER = newValue;

    }


    /**
     * Checks for whether TRACKINGNUMBER is set or not.
     *
     * @returns true if TRACKINGNUMBER is set, false if not
     */

    public boolean hasTRACKINGNUMBER() {

        return (_TRACKINGNUMBER != null);

    }


    /**
     * Discards TRACKINGNUMBER's value.
     */

    public void deleteTRACKINGNUMBER() {

        _TRACKINGNUMBER = null;

    }


    /**
     * Get the ULTIMATEDESTINATIONCOUNTRY property.
     */

    public String getULTIMATEDESTINATIONCOUNTRY() {

        return (_ULTIMATEDESTINATIONCOUNTRY);

    }


    /**
     * Set the ULTIMATEDESTINATIONCOUNTRY property.
     */

    public void setULTIMATEDESTINATIONCOUNTRY(String newValue) {

        _ULTIMATEDESTINATIONCOUNTRY = newValue;

    }


    /**
     * Checks for whether ULTIMATEDESTINATIONCOUNTRY is set or not.
     *
     * @returns true if ULTIMATEDESTINATIONCOUNTRY is set, false if not
     */

    public boolean hasULTIMATEDESTINATIONCOUNTRY() {

        return (_ULTIMATEDESTINATIONCOUNTRY != null);

    }


    /**
     * Discards ULTIMATEDESTINATIONCOUNTRY's value.
     */

    public void deleteULTIMATEDESTINATIONCOUNTRY() {

        _ULTIMATEDESTINATIONCOUNTRY = null;

    }


    /**
     * Get the WEIGHT property.
     */

    public String getWEIGHT() {

        return (_WEIGHT);

    }


    /**
     * Set the WEIGHT property.
     */

    public void setWEIGHT(String newValue) {

        _WEIGHT = newValue;

    }


    /**
     * Checks for whether WEIGHT is set or not.
     *
     * @returns true if WEIGHT is set, false if not
     */

    public boolean hasWEIGHT() {

        return (_WEIGHT != null);

    }


    /**
     * Discards WEIGHT's value.
     */

    public void deleteWEIGHT() {

        _WEIGHT = null;

    }


    /**
     * Get the ZONE property.
     */

    public String getZONE() {

        return (_ZONE);

    }


    /**
     * Set the ZONE property.
     */

    public void setZONE(String newValue) {

        _ZONE = newValue;

    }


    /**
     * Checks for whether ZONE is set or not.
     *
     * @returns true if ZONE is set, false if not
     */

    public boolean hasZONE() {

        return (_ZONE != null);

    }


    /**
     * Discards ZONE's value.
     */

    public void deleteZONE() {

        _ZONE = null;

    }


    /**
     * Get the PROOFREQUIREADULTSIGNATURE property.
     */

    public String getPROOFREQUIREADULTSIGNATURE() {

        return (_PROOFREQUIREADULTSIGNATURE);

    }


    /**
     * Set the PROOFREQUIREADULTSIGNATURE property.
     */

    public void setPROOFREQUIREADULTSIGNATURE(String newValue) {

        _PROOFREQUIREADULTSIGNATURE = newValue;

    }


    /**
     * Checks for whether PROOFREQUIREADULTSIGNATURE is set or not.
     *
     * @returns true if PROOFREQUIREADULTSIGNATURE is set, false if not
     */

    public boolean hasPROOFREQUIREADULTSIGNATURE() {

        return (_PROOFREQUIREADULTSIGNATURE != null);

    }


    /**
     * Discards PROOFREQUIREADULTSIGNATURE's value.
     */

    public void deletePROOFREQUIREADULTSIGNATURE() {

        _PROOFREQUIREADULTSIGNATURE = null;

    }


    /**
     * Gets the XML tag name for this object.
     */

    public String getXmlTagName() {

        return ($RESULTITEM);

    }


    /**
     * Gets the XML tag name for this class.
     */

    public static String getClassXmlTagName() {

        return ($RESULTITEM);

    }


    /**
     * This flag is used to used to check whether
     * <p/>
     * the validators have been created.
     */

    transient protected static boolean _validators_created = false;



    /*

     * XML Validators

     */

    transient protected static XmlValidator

            _ARRIVEDATE_validator_ = null;

    transient protected static XmlValidator

            _CALLTAG_validator_ = null;

    transient protected static XmlValidator

            _CERTIFIEDMAIL_validator_ = null;

    transient protected static XmlValidator

            _CERTIFIEDMAILFEE_validator_ = null;

    transient protected static XmlValidator

            _CODAMOUNT_validator_ = null;

    transient protected static XmlValidator

            _CONSIGNEE_validator_ = null;

    transient protected static XmlValidator

            _CONSOLIDATIONID_validator_ = null;

    transient protected static XmlValidator

            _CYCLECOUNT_validator_ = null;

    transient protected static XmlValidator

            _DIMENSION_validator_ = null;

    transient protected static XmlValidator

            _OPTION_validator_ = null;

    transient protected static XmlValidator

            _PROOF_validator_ = null;

    transient protected static XmlValidator

            _PROOFREQUIRESSIGNATURE_validator_ = null;

    transient protected static XmlValidator

            _PROOFREQUIRESIGNATUREFEE_validator_ = null;


    /**
     * Create the validators for this class.
     */

    protected static synchronized void createValidators() {


        if (_validators_created) {

            return;

        }


        _ARRIVEDATE_validator_ = new XmlValidator("RESULTITEM.ARRIVEDATE", "ANY",

                "RESULTITEM/ARRIVE_DATE", false);


        _CALLTAG_validator_ = new XmlValidator("RESULTITEM.CALLTAG", "ANY",

                "RESULTITEM/CALLTAG", false);


        _CERTIFIEDMAIL_validator_ = new XmlValidator("RESULTITEM.CERTIFIEDMAIL", "ANY",

                "RESULTITEM/CERTIFIED_MAIL", false);


        _CERTIFIEDMAILFEE_validator_ = new XmlValidator("RESULTITEM.CERTIFIEDMAILFEE", "ANY",

                "RESULTITEM/CERTIFIED_MAIL_FEE", false);


        _CODAMOUNT_validator_ = new XmlValidator("RESULTITEM.CODAMOUNT", "ANY",

                "RESULTITEM/COD_AMOUNT", false);


        _CONSIGNEE_validator_ = new XmlValidator("RESULTITEM.CONSIGNEE", "ANY",

                "RESULTITEM/CONSIGNEE", false);


        _CONSOLIDATIONID_validator_ = new XmlValidator("RESULTITEM.CONSOLIDATIONID", "ANY",

                "RESULTITEM/CONSOLIDATION_ID", false);


        _CYCLECOUNT_validator_ = new XmlValidator("RESULTITEM.CYCLECOUNT", "ANY",

                "RESULTITEM/CYCLE_COUNT", false);


        _DIMENSION_validator_ = new XmlValidator("RESULTITEM.DIMENSION", "ANY",

                "RESULTITEM/DIMENSION", false);


        _OPTION_validator_ = new XmlValidator("RESULTITEM.OPTION", "ANY",

                "RESULTITEM/OPTION", true);


        _PROOF_validator_ = new XmlValidator("RESULTITEM.PROOF", "ANY",

                "RESULTITEM/PROOF", false);


        _PROOFREQUIRESSIGNATURE_validator_ = new XmlValidator("RESULTITEM.PROOFREQUIRESSIGNATURE", "ANY",

                "RESULTITEM/PROOF_REQUIRES_SIGNATURE", false);


        _PROOFREQUIRESIGNATUREFEE_validator_ = new XmlValidator("RESULTITEM.PROOFREQUIRESIGNATUREFEE", "ANY",

                "RESULTITEM/PROOF_REQUIRE_SIGNATURE_FEE", false);


        _validators_created = true;

    }


    /**
     * Checks this object to see if it will produce valid XML.
     */

    public boolean isValid() {


        if (!(this instanceof Validateable)) {

            return (true);

        }


        Vector errors = ((Validateable) this).getValidationErrors(true);

        if (errors == null || errors.size() < 1) {

            return (true);

        }


        return (false);

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     */

    public Vector getValidationErrors() {

        return (getValidationErrors(false));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error) {

        return (getValidationErrors(return_on_error, true));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error, boolean traverse) {


        createValidators();


        Vector errors;

        if (_unexpected_xml_errors_ != null &&

                _unexpected_xml_errors_.size() > 0) {

            errors = (Vector) _unexpected_xml_errors_.clone();

            if (return_on_error) {

                return (errors);

            }

        } else {

            errors = new Vector();

        }


        XmlValidationError e;


        if (!traverse) {

            if (errors.size() < 1) {

                return (null);

            }


            return (errors);

        }


        boolean is_valid;


        is_valid = _ARRIVEDATE_validator_.isValid(_ARRIVEDATE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _CALLTAG_validator_.isValid(_CALLTAG,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _CERTIFIEDMAIL_validator_.isValid(_CERTIFIEDMAIL,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _CERTIFIEDMAILFEE_validator_.isValid(_CERTIFIEDMAILFEE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _CODAMOUNT_validator_.isValid(_CODAMOUNT,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _CONSIGNEE_validator_.isValid(_CONSIGNEE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _CONSOLIDATIONID_validator_.isValid(_CONSOLIDATIONID,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _CYCLECOUNT_validator_.isValid(_CYCLECOUNT,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _DIMENSION_validator_.isValid(_DIMENSION,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _OPTION_validator_.isValid(_OPTION,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PROOF_validator_.isValid(_PROOF,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PROOFREQUIRESSIGNATURE_validator_.isValid(_PROOFREQUIRESSIGNATURE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PROOFREQUIRESIGNATUREFEE_validator_.isValid(_PROOFREQUIRESIGNATUREFEE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        if (errors.size() < 1) {

            return (null);

        }


        return (errors);

    }


    /**
     * Checks the XML to see whether it matches the
     * <p/>
     * XML contents of this class.
     */

    public static boolean matches(XmlElement xml) {


        if (xml == null) {

            return (false);

        }


        return (xml.equals($RESULTITEM));

    }


    /**
     * This method unmarshals an XML document instance
     * <p/>
     * into an instance of this class.
     */

    public static RESULTITEM unmarshal(InputStream in) throws Exception {


        RESULTITEM obj = new RESULTITEM();

        ObjectFactory.unmarshal(obj, in);

        return (obj);

    }


    /**
     * Populates this object with the values from the
     * <p/>
     * parsed XML.
     */

    public void fromXml(XmlElement xml) {


        if (xml == null) {

            return;

        }


        if (!xml.equals($RESULTITEM)) {

            return;

        }





        /*

         * Get the contained XmlElement, this is what we process

         */

        xml = xml.getSubElementAt(0);

        if (xml == null) {

            return;

        }


        if (xml.equals($ADDITIONAL_HANDLING)) {

            setADDITIONALHANDLING(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($ADDITIONAL_HANDLING_FEE)) {

            setADDITIONALHANDLINGFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($APPORTIONED_BASE)) {

            setAPPORTIONEDBASE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($APPORTIONED_DISCOUNT)) {

            setAPPORTIONEDDISCOUNT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($APPORTIONED_SPECIAL)) {

            setAPPORTIONEDSPECIAL(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($APPORTIONED_TOTAL)) {

            setAPPORTIONEDTOTAL(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($ARRIVE_DATE)) {

            setARRIVEDATE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($BAR_CODE)) {

            setBARCODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($BUNDLE_ID)) {

            setBUNDLEID(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CALLTAG)) {

            setCALLTAG(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CALLTAG_FEE)) {

            setCALLTAGFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CALLTAG_NUMBER)) {

            setCALLTAGNUMBER(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CERTIFIED_MAIL)) {

            setCERTIFIEDMAIL(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CERTIFIED_MAIL_FEE)) {

            setCERTIFIEDMAILFEE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($COD_AMOUNT)) {

            setCODAMOUNT(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($COD_FEE)) {

            setCODFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($COD_NUMBER)) {

            setCODNUMBER(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($COD_PAYMENT_METHOD)) {

            setCODPAYMENTMETHOD(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($COMMODITY_CONTENTS)) {

            setCOMMODITYCONTENTS(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEE)) {

            setCONSIGNEE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEE_ACCOUNT)) {

            setCONSIGNEEACCOUNT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEE_CODE)) {

            setCONSIGNEECODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEE_REFERENCE)) {

            setCONSIGNEEREFERENCE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSOLIDATION_ID)) {

            setCONSOLIDATIONID(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CYCLE_COUNT)) {

            setCYCLECOUNT(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DECLARED_VALUE_AMOUNT)) {

            setDECLAREDVALUEAMOUNT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DECLARED_VALUE_FEE)) {

            setDECLAREDVALUEFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DESCRIPTION)) {

            setDESCRIPTION(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DIMENSION)) {

            setDIMENSION(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DIMENSIONAL_WEIGHT_RATED)) {

            setDIMENSIONALWEIGHTRATED(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DIRECT_DELIVERY)) {

            setDIRECTDELIVERY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DIRECT_DELIVERY_FEE)) {

            setDIRECTDELIVERYFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DOCUMENTS_ONLY)) {

            setDOCUMENTSONLY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($EXTENDED_AREA_FEE)) {

            setEXTENDEDAREAFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HAZMAT)) {

            setHAZMAT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HAZMAT_CLASS)) {

            setHAZMATCLASS(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HAZMAT_DESCRIPTION)) {

            setHAZMATDESCRIPTION(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HAZMAT_FEE)) {

            setHAZMATFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HAZMAT_ID)) {

            setHAZMATID(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HAZMAT_LABEL)) {

            setHAZMATLABEL(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HAZMAT_PACKING_GROUP)) {

            setHAZMATPACKINGGROUP(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HAZMAT_QUANTITY)) {

            setHAZMATQUANTITY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HOLD_AT_LOCATION)) {

            setHOLDATLOCATION(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($HUNDREDWEIGHT_RATED)) {

            setHUNDREDWEIGHTRATED(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($MAXICODE)) {

            setMAXICODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($MSN)) {

            setMSN(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($NOFN_SEQUENCE_BUNDLE)) {

            setNOFNSEQUENCEBUNDLE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($NOFN_TOTAL_BUNDLE)) {

            setNOFNTOTALBUNDLE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($NONMACHINABLE_MAIL_FEE)) {

            setNONMACHINABLEMAILFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($NONSTANDARD_MAIL_FEE)) {

            setNONSTANDARDMAILFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($OVERSIZE)) {

            setOVERSIZE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($OVERSIZE_FEE)) {

            setOVERSIZEFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($OPTION)) {

            setOPTION(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKAGE_LIST_ID)) {

            setPACKAGELISTID(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKAGING)) {

            setPACKAGING(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PARCEL_AIRLIFT)) {

            setPARCELAIRLIFT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PARCEL_AIRLIFT_FEE)) {

            setPARCELAIRLIFTFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PROOF)) {

            setPROOF(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PROOF_FEE)) {

            setPROOFFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PROOF_REQUIRES_SIGNATURE)) {

            setPROOFREQUIRESSIGNATURE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PROOF_REQUIRES_SIGNATURE_FEE)) {

            setPROOFREQUIRESSIGNATUREFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PROOF_REQUIRE_SIGNATURE)) {

            setPROOFREQUIRESIGNATURE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PROOF_REQUIRE_SIGNATURE_FEE)) {

            setPROOFREQUIRESIGNATUREFEE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($REGISTERED_MAIL)) {

            setREGISTEREDMAIL(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($REGISTERED_MAIL_FEE)) {

            setREGISTEREDMAILFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($RESIDENTIAL_DELIVERY_FEE)) {

            setRESIDENTIALDELIVERYFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($ROUTING_CODE)) {

            setROUTINGCODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SATURDAY_DELIVERY)) {

            setSATURDAYDELIVERY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SATURDAY_DELIVERY_FEE)) {

            setSATURDAYDELIVERYFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SATURDAY_PICKUP_FEE)) {

            setSATURDAYPICKUPFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SED_METHOD)) {

            setSEDMETHOD(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SHIPDATE)) {

            setSHIPDATE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SHIPPER)) {

            setSHIPPER(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SHIPPER_REFERENCE)) {

            setSHIPPERREFERENCE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SPECIAL_DELIVERY)) {

            setSPECIALDELIVERY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SPECIAL_DELIVERY_FEE)) {

            setSPECIALDELIVERYFEE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SUBCATEGORY)) {

            setSUBCATEGORY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($TERMS)) {

            setTERMS(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($THIRD_PARTY_BILLING)) {

            setTHIRDPARTYBILLING(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($THIRD_PARTY_BILLING_ACCOUNT)) {

            setTHIRDPARTYBILLINGACCOUNT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($THIRD_PARTY_BILLING_ADDRESS)) {

            setTHIRDPARTYBILLINGADDRESS(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($TIME_IN_TRANSIT)) {

            setTIMEINTRANSIT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($TRACKING_NUMBER)) {

            setTRACKINGNUMBER(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($ULTIMATE_DESTINATION_COUNTRY)) {

            setULTIMATEDESTINATIONCOUNTRY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($WEIGHT)) {

            setWEIGHT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($ZONE)) {

            setZONE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PROOF_REQUIRE_ADULT_SIGNATURE)) {

            setPROOFREQUIREADULTSIGNATURE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml != null) {


            _unexpected_xml_errors_ =

                    XmlValidationError.addUnexpectedXmlError(this, _unexpected_xml_errors_, xml);

            xml = xml.next();

        }

    }


    /**
     * This method marshals this object into an
     * <p/>
     * XML instance document.
     */

    public void marshal(OutputStream out) {

        toXml(out);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream) {

        toXml(stream, true);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream, String indent, boolean embed_files) {


        if (stream instanceof XmlOutputStream) {

            toXml(stream, embed_files);

        } else {

            FormattedOutputStream out =

                    new FormattedOutputStream(stream);

            out.setIndentString(indent);

            toXml(out, embed_files);

        }

    }


    /**
     * Serializes this object to XML.
     */

    public void toXml(OutputStream stream, boolean embed_files) {


        XmlOutputStream out = null;

        if (stream instanceof XmlOutputStream) {

            out = (XmlOutputStream) stream;

        } else {

            out = new RawOutputStream(stream);

        }


        out.writeStartTag(getXmlTagName(), false);

        out.incrementIndent();


        out.write($ADDITIONAL_HANDLING,

                _ADDITIONALHANDLING);

        out.write($ADDITIONAL_HANDLING_FEE,

                _ADDITIONALHANDLINGFEE);

        out.write($APPORTIONED_BASE,

                _APPORTIONEDBASE);

        out.write($APPORTIONED_DISCOUNT,

                _APPORTIONEDDISCOUNT);

        out.write($APPORTIONED_SPECIAL,

                _APPORTIONEDSPECIAL);

        out.write($APPORTIONED_TOTAL,

                _APPORTIONEDTOTAL);


        Object ARRIVEDATE_value = getARRIVEDATE();

        if (ARRIVEDATE_value instanceof XmlObject) {

            out.write($ARRIVE_DATE,

                    (XmlObject) ARRIVEDATE_value,

                    embed_files);

        } else if (ARRIVEDATE_value != null) {

            out.writeln($ARRIVE_DATE, ARRIVEDATE_value.toString());

        }

        out.write($BAR_CODE,

                _BARCODE);

        out.write($BUNDLE_ID,

                _BUNDLEID);


        Object CALLTAG_value = getCALLTAG();

        if (CALLTAG_value instanceof XmlObject) {

            out.write($CALLTAG,

                    (XmlObject) CALLTAG_value,

                    embed_files);

        } else if (CALLTAG_value != null) {

            out.writeln($CALLTAG, CALLTAG_value.toString());

        }

        out.write($CALLTAG_FEE,

                _CALLTAGFEE);

        out.write($CALLTAG_NUMBER,

                _CALLTAGNUMBER);


        Object CERTIFIEDMAIL_value = getCERTIFIEDMAIL();

        if (CERTIFIEDMAIL_value instanceof XmlObject) {

            out.write($CERTIFIED_MAIL,

                    (XmlObject) CERTIFIEDMAIL_value,

                    embed_files);

        } else if (CERTIFIEDMAIL_value != null) {

            out.writeln($CERTIFIED_MAIL, CERTIFIEDMAIL_value.toString());

        }


        Object CERTIFIEDMAILFEE_value = getCERTIFIEDMAILFEE();

        if (CERTIFIEDMAILFEE_value instanceof XmlObject) {

            out.write($CERTIFIED_MAIL_FEE,

                    (XmlObject) CERTIFIEDMAILFEE_value,

                    embed_files);

        } else if (CERTIFIEDMAILFEE_value != null) {

            out.writeln($CERTIFIED_MAIL_FEE, CERTIFIEDMAILFEE_value.toString());

        }


        Object CODAMOUNT_value = getCODAMOUNT();

        if (CODAMOUNT_value instanceof XmlObject) {

            out.write($COD_AMOUNT,

                    (XmlObject) CODAMOUNT_value,

                    embed_files);

        } else if (CODAMOUNT_value != null) {

            out.writeln($COD_AMOUNT, CODAMOUNT_value.toString());

        }

        out.write($COD_FEE,

                _CODFEE);

        out.write($COD_NUMBER,

                _CODNUMBER);

        out.write($COD_PAYMENT_METHOD,

                _CODPAYMENTMETHOD);

        out.write($COMMODITY_CONTENTS,

                _COMMODITYCONTENTS);


        Object CONSIGNEE_value = getCONSIGNEE();

        if (CONSIGNEE_value instanceof XmlObject) {

            out.write($CONSIGNEE,

                    (XmlObject) CONSIGNEE_value,

                    embed_files);

        } else if (CONSIGNEE_value != null) {

            out.writeln($CONSIGNEE, CONSIGNEE_value.toString());

        }

        out.write($CONSIGNEE_ACCOUNT,

                _CONSIGNEEACCOUNT);

        out.write($CONSIGNEE_CODE,

                _CONSIGNEECODE);

        out.write($CONSIGNEE_REFERENCE,

                _CONSIGNEEREFERENCE);


        Object CONSOLIDATIONID_value = getCONSOLIDATIONID();

        if (CONSOLIDATIONID_value instanceof XmlObject) {

            out.write($CONSOLIDATION_ID,

                    (XmlObject) CONSOLIDATIONID_value,

                    embed_files);

        } else if (CONSOLIDATIONID_value != null) {

            out.writeln($CONSOLIDATION_ID, CONSOLIDATIONID_value.toString());

        }


        Object CYCLECOUNT_value = getCYCLECOUNT();

        if (CYCLECOUNT_value instanceof XmlObject) {

            out.write($CYCLE_COUNT,

                    (XmlObject) CYCLECOUNT_value,

                    embed_files);

        } else if (CYCLECOUNT_value != null) {

            out.writeln($CYCLE_COUNT, CYCLECOUNT_value.toString());

        }

        out.write($DECLARED_VALUE_AMOUNT,

                _DECLAREDVALUEAMOUNT);

        out.write($DECLARED_VALUE_FEE,

                _DECLAREDVALUEFEE);

        out.write($DESCRIPTION,

                _DESCRIPTION);


        Object DIMENSION_value = getDIMENSION();

        if (DIMENSION_value instanceof XmlObject) {

            out.write($DIMENSION,

                    (XmlObject) DIMENSION_value,

                    embed_files);

        } else if (DIMENSION_value != null) {

            out.writeln($DIMENSION, DIMENSION_value.toString());

        }

        out.write($DIMENSIONAL_WEIGHT_RATED,

                _DIMENSIONALWEIGHTRATED);

        out.write($DIRECT_DELIVERY,

                _DIRECTDELIVERY);

        out.write($DIRECT_DELIVERY_FEE,

                _DIRECTDELIVERYFEE);

        out.write($DOCUMENTS_ONLY,

                _DOCUMENTSONLY);

        out.write($EXTENDED_AREA_FEE,

                _EXTENDEDAREAFEE);

        out.write($HAZMAT,

                _HAZMAT);

        out.write($HAZMAT_CLASS,

                _HAZMATCLASS);

        out.write($HAZMAT_DESCRIPTION,

                _HAZMATDESCRIPTION);

        out.write($HAZMAT_FEE,

                _HAZMATFEE);

        out.write($HAZMAT_ID,

                _HAZMATID);

        out.write($HAZMAT_LABEL,

                _HAZMATLABEL);

        out.write($HAZMAT_PACKING_GROUP,

                _HAZMATPACKINGGROUP);

        out.write($HAZMAT_QUANTITY,

                _HAZMATQUANTITY);

        out.write($HOLD_AT_LOCATION,

                _HOLDATLOCATION);

        out.write($HUNDREDWEIGHT_RATED,

                _HUNDREDWEIGHTRATED);

        out.write($MAXICODE,

                _MAXICODE);

        out.write($MSN,

                _MSN);

        out.write($NOFN_SEQUENCE_BUNDLE,

                _NOFNSEQUENCEBUNDLE);

        out.write($NOFN_TOTAL_BUNDLE,

                _NOFNTOTALBUNDLE);

        out.write($NONMACHINABLE_MAIL_FEE,

                _NONMACHINABLEMAILFEE);

        out.write($NONSTANDARD_MAIL_FEE,

                _NONSTANDARDMAILFEE);

        out.write($OVERSIZE,

                _OVERSIZE);

        out.write($OVERSIZE_FEE,

                _OVERSIZEFEE);

        out.write($OPTION,

                getOPTION(), embed_files);

        out.write($PACKAGE_LIST_ID,

                _PACKAGELISTID);

        out.write($PACKAGING,

                _PACKAGING);

        out.write($PARCEL_AIRLIFT,

                _PARCELAIRLIFT);

        out.write($PARCEL_AIRLIFT_FEE,

                _PARCELAIRLIFTFEE);


        Object PROOF_value = getPROOF();

        if (PROOF_value instanceof XmlObject) {

            out.write($PROOF,

                    (XmlObject) PROOF_value,

                    embed_files);

        } else if (PROOF_value != null) {

            out.writeln($PROOF, PROOF_value.toString());

        }

        out.write($PROOF_FEE,

                _PROOFFEE);


        Object PROOFREQUIRESSIGNATURE_value = getPROOFREQUIRESSIGNATURE();

        if (PROOFREQUIRESSIGNATURE_value instanceof XmlObject) {

            out.write($PROOF_REQUIRES_SIGNATURE,

                    (XmlObject) PROOFREQUIRESSIGNATURE_value,

                    embed_files);

        } else if (PROOFREQUIRESSIGNATURE_value != null) {

            out.writeln($PROOF_REQUIRES_SIGNATURE, PROOFREQUIRESSIGNATURE_value.toString());

        }

        out.write($PROOF_REQUIRES_SIGNATURE_FEE,

                _PROOFREQUIRESSIGNATUREFEE);

        out.write($PROOF_REQUIRE_SIGNATURE,

                _PROOFREQUIRESIGNATURE);


        Object PROOFREQUIRESIGNATUREFEE_value = getPROOFREQUIRESIGNATUREFEE();

        if (PROOFREQUIRESIGNATUREFEE_value instanceof XmlObject) {

            out.write($PROOF_REQUIRE_SIGNATURE_FEE,

                    (XmlObject) PROOFREQUIRESIGNATUREFEE_value,

                    embed_files);

        } else if (PROOFREQUIRESIGNATUREFEE_value != null) {

            out.writeln($PROOF_REQUIRE_SIGNATURE_FEE, PROOFREQUIRESIGNATUREFEE_value.toString());

        }

        out.write($REGISTERED_MAIL,

                _REGISTEREDMAIL);

        out.write($REGISTERED_MAIL_FEE,

                _REGISTEREDMAILFEE);

        out.write($RESIDENTIAL_DELIVERY_FEE,

                _RESIDENTIALDELIVERYFEE);

        out.write($ROUTING_CODE,

                _ROUTINGCODE);

        out.write($SATURDAY_DELIVERY,

                _SATURDAYDELIVERY);

        out.write($SATURDAY_DELIVERY_FEE,

                _SATURDAYDELIVERYFEE);

        out.write($SATURDAY_PICKUP_FEE,

                _SATURDAYPICKUPFEE);

        out.write($SED_METHOD,

                _SEDMETHOD);

        out.write($SHIPDATE,

                _SHIPDATE);

        out.write($SHIPPER,

                _SHIPPER);

        out.write($SHIPPER_REFERENCE,

                _SHIPPERREFERENCE);

        out.write($SPECIAL_DELIVERY,

                _SPECIALDELIVERY);

        out.write($SPECIAL_DELIVERY_FEE,

                _SPECIALDELIVERYFEE);

        out.write($SUBCATEGORY,

                _SUBCATEGORY);

        out.write($TERMS,

                _TERMS);

        out.write($THIRD_PARTY_BILLING,

                _THIRDPARTYBILLING);

        out.write($THIRD_PARTY_BILLING_ACCOUNT,

                _THIRDPARTYBILLINGACCOUNT);

        out.write($THIRD_PARTY_BILLING_ADDRESS,

                _THIRDPARTYBILLINGADDRESS);

        out.write($TIME_IN_TRANSIT,

                _TIMEINTRANSIT);

        out.write($TRACKING_NUMBER,

                _TRACKINGNUMBER);

        out.write($ULTIMATE_DESTINATION_COUNTRY,

                _ULTIMATEDESTINATIONCOUNTRY);

        out.write($WEIGHT,

                _WEIGHT);

        out.write($ZONE,

                _ZONE);

        out.write($PROOF_REQUIRE_ADULT_SIGNATURE,

                _PROOFREQUIREADULTSIGNATURE);


        out.decrementIndent();

        out.writeEndTag(getXmlTagName());

    }


    /**
     * Get the  birth certificate for this object.
     */

    public String birthCertificate() {

        return ("1hge137:cy11q2xh:e1sl09");

    }

}
