/*

 * DO NOT EDIT!

 *

 * This file was generated by the Breeze XML Studio Java Export Wizard.

 *

 *        Project: connectship

 *     Class Name: RESPONSE

 *           Date: Fri Feb 22 21:58:50 PST 2002

 * Breeze Version: 2.2.1 build 114

 *

 * IMPORTANT: Please see your Breeze license for more information on

 *            where and how this generated code may be used.

 *

 */


package com.owd.core.csXml;


import com.tbf.xml.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Vector;


/**
 * RESPONSE class.
 */

public class RESPONSE

        implements com.tbf.xml.XmlObject, Validateable, java.io.Serializable {
private final static Logger log =  LogManager.getLogger();


    /**
     * Constant for "TRANSACTIONREFERENCE" node name.
     */

    public static final String $TRANSACTIONREFERENCE = "TRANSACTIONREFERENCE";


    /**
     * Constant for "RESPONSE" node name.
     */

    public static final String $RESPONSE = "RESPONSE";


    /**
     * Constant for "RESPONSESTATUSCODE" node name.
     */

    public static final String $RESPONSESTATUSCODE = "RESPONSESTATUSCODE";


    /**
     * Constant for "RESPONSESTATUSDESCRIPTION" node name.
     */

    public static final String $RESPONSESTATUSDESCRIPTION = "RESPONSESTATUSDESCRIPTION";


    /**
     * Constant for "RESPONSEERROR" node name.
     */

    public static final String $RESPONSEERROR = "RESPONSEERROR";


    protected TRANSACTIONREFERENCE _TRANSACTIONREFERENCE = null;

    protected String _RESPONSESTATUSCODE = null;

    protected String _RESPONSESTATUSDESCRIPTION = null;

    protected RESPONSEERROR _RESPONSEERROR = null;


    /**
     * Storage for UNEXPECTED_XML errors.
     */

    protected Vector _unexpected_xml_errors_ = null;


    /**
     * Default no args constructor.
     */

    public RESPONSE() {

    }


    /**
     * Creates and populates an instance from the provided parse tree.
     *
     * @param xml the parse tree
     */

    public RESPONSE(XmlElement xml) {

        fromXml(xml);

    }


    /**
     * Get the TRANSACTIONREFERENCE property.
     */

    public TRANSACTIONREFERENCE getTRANSACTIONREFERENCE() {

        return (_TRANSACTIONREFERENCE);

    }


    /**
     * Set the TRANSACTIONREFERENCE property.
     */

    public void setTRANSACTIONREFERENCE(TRANSACTIONREFERENCE obj) {

        _TRANSACTIONREFERENCE = obj;

    }


    protected void setTRANSACTIONREFERENCE(XmlElement xml) {


        _TRANSACTIONREFERENCE =

                new TRANSACTIONREFERENCE(xml);

    }


    /**
     * Checks for whether TRANSACTIONREFERENCE is set or not.
     *
     * @returns true if TRANSACTIONREFERENCE is set, false if not
     */

    public boolean hasTRANSACTIONREFERENCE() {

        return (_TRANSACTIONREFERENCE != null);

    }


    /**
     * Discards TRANSACTIONREFERENCE's value.
     */

    public void deleteTRANSACTIONREFERENCE() {

        _TRANSACTIONREFERENCE = null;

    }


    /**
     * Get the RESPONSESTATUSCODE property.
     */

    public String getRESPONSESTATUSCODE() {

        return (_RESPONSESTATUSCODE);

    }


    /**
     * Set the RESPONSESTATUSCODE property.
     */

    public void setRESPONSESTATUSCODE(String newValue) {

        _RESPONSESTATUSCODE = newValue;

    }


    /**
     * Checks for whether RESPONSESTATUSCODE is set or not.
     *
     * @returns true if RESPONSESTATUSCODE is set, false if not
     */

    public boolean hasRESPONSESTATUSCODE() {

        return (_RESPONSESTATUSCODE != null);

    }


    /**
     * Discards RESPONSESTATUSCODE's value.
     */

    public void deleteRESPONSESTATUSCODE() {

        _RESPONSESTATUSCODE = null;

    }


    /**
     * Get the RESPONSESTATUSDESCRIPTION property.
     */

    public String getRESPONSESTATUSDESCRIPTION() {

        return (_RESPONSESTATUSDESCRIPTION);

    }


    /**
     * Set the RESPONSESTATUSDESCRIPTION property.
     */

    public void setRESPONSESTATUSDESCRIPTION(String newValue) {

        _RESPONSESTATUSDESCRIPTION = newValue;

    }


    /**
     * Checks for whether RESPONSESTATUSDESCRIPTION is set or not.
     *
     * @returns true if RESPONSESTATUSDESCRIPTION is set, false if not
     */

    public boolean hasRESPONSESTATUSDESCRIPTION() {

        return (_RESPONSESTATUSDESCRIPTION != null);

    }


    /**
     * Discards RESPONSESTATUSDESCRIPTION's value.
     */

    public void deleteRESPONSESTATUSDESCRIPTION() {

        _RESPONSESTATUSDESCRIPTION = null;

    }


    /**
     * Get the RESPONSEERROR property.
     */

    public RESPONSEERROR getRESPONSEERROR() {

        return (_RESPONSEERROR);

    }


    /**
     * Set the RESPONSEERROR property.
     */

    public void setRESPONSEERROR(RESPONSEERROR obj) {

        _RESPONSEERROR = obj;

    }


    protected void setRESPONSEERROR(XmlElement xml) {


        _RESPONSEERROR =

                new RESPONSEERROR(xml);

    }


    /**
     * Checks for whether RESPONSEERROR is set or not.
     *
     * @returns true if RESPONSEERROR is set, false if not
     */

    public boolean hasRESPONSEERROR() {

        return (_RESPONSEERROR != null);

    }


    /**
     * Discards RESPONSEERROR's value.
     */

    public void deleteRESPONSEERROR() {

        _RESPONSEERROR = null;

    }


    /**
     * Gets the XML tag name for this object.
     */

    public String getXmlTagName() {

        return ($RESPONSE);

    }


    /**
     * Gets the XML tag name for this class.
     */

    public static String getClassXmlTagName() {

        return ($RESPONSE);

    }


    /**
     * This flag is used to used to check whether
     * <p/>
     * the validators have been created.
     */

    transient protected static boolean _validators_created = false;



    /*

     * XML Validators

     */

    transient protected static XmlValidator

            _TRANSACTIONREFERENCE_validator_ = null;

    transient protected static XmlStringValidator

            _RESPONSESTATUSCODE_validator_ = null;

    transient protected static XmlStringValidator

            _RESPONSESTATUSDESCRIPTION_validator_ = null;

    transient protected static XmlValidator

            _RESPONSEERROR_validator_ = null;


    /**
     * Create the validators for this class.
     */

    protected static synchronized void createValidators() {


        if (_validators_created) {

            return;

        }


        _TRANSACTIONREFERENCE_validator_ = new XmlValidator("RESPONSE.TRANSACTIONREFERENCE", "Element",

                "RESPONSE/TRANSACTIONREFERENCE", true);


        _RESPONSESTATUSCODE_validator_ = new XmlStringValidator("RESPONSE.RESPONSESTATUSCODE", "Element",

                "RESPONSE/RESPONSESTATUSCODE", -1, -1, true);


        _RESPONSESTATUSDESCRIPTION_validator_ = new XmlStringValidator("RESPONSE.RESPONSESTATUSDESCRIPTION", "Element",

                "RESPONSE/RESPONSESTATUSDESCRIPTION", -1, -1, true);


        _RESPONSEERROR_validator_ = new XmlValidator("RESPONSE.RESPONSEERROR", "Element",

                "RESPONSE/RESPONSEERROR", false);


        _validators_created = true;

    }


    /**
     * Checks this object to see if it will produce valid XML.
     */

    public boolean isValid() {


        if (!(this instanceof Validateable)) {

            return (true);

        }


        Vector errors = ((Validateable) this).getValidationErrors(true);

        if (errors == null || errors.size() < 1) {

            return (true);

        }


        return (false);

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     */

    public Vector getValidationErrors() {

        return (getValidationErrors(false));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error) {

        return (getValidationErrors(return_on_error, true));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error, boolean traverse) {


        createValidators();


        Vector errors;

        if (_unexpected_xml_errors_ != null &&

                _unexpected_xml_errors_.size() > 0) {

            errors = (Vector) _unexpected_xml_errors_.clone();

            if (return_on_error) {

                return (errors);

            }

        } else {

            errors = new Vector();

        }


        XmlValidationError e;

        e = _RESPONSESTATUSCODE_validator_.validate(_RESPONSESTATUSCODE);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        e = _RESPONSESTATUSDESCRIPTION_validator_.validate(_RESPONSESTATUSDESCRIPTION);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        if (!traverse) {

            if (errors.size() < 1) {

                return (null);

            }


            return (errors);

        }


        boolean is_valid;


        is_valid = _TRANSACTIONREFERENCE_validator_.isValid(_TRANSACTIONREFERENCE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _RESPONSEERROR_validator_.isValid(_RESPONSEERROR,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        if (errors.size() < 1) {

            return (null);

        }


        return (errors);

    }


    /**
     * Checks the XML to see whether it matches the
     * <p/>
     * XML contents of this class.
     */

    public static boolean matches(XmlElement xml) {


        if (xml == null) {

            return (false);

        }


        return (xml.equals($RESPONSE));

    }


    /**
     * This method unmarshals an XML document instance
     * <p/>
     * into an instance of this class.
     */

    public static RESPONSE unmarshal(InputStream in) throws Exception {


        RESPONSE obj = new RESPONSE();

        ObjectFactory.unmarshal(obj, in);

        return (obj);

    }


    /**
     * Populates this object with the values from the
     * <p/>
     * parsed XML.
     */

    public void fromXml(XmlElement xml) {


        if (xml == null) {

            return;

        }


        if (!xml.equals($RESPONSE)) {

            return;

        }





        /*

         * Get the contained XmlElement, this is what we process

         */

        xml = xml.getSubElementAt(0);

        if (xml == null) {

            return;

        }


        if (xml.equals($TRANSACTIONREFERENCE)) {

            setTRANSACTIONREFERENCE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($RESPONSESTATUSCODE)) {

            setRESPONSESTATUSCODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($RESPONSESTATUSDESCRIPTION)) {

            setRESPONSESTATUSDESCRIPTION(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($RESPONSEERROR)) {

            setRESPONSEERROR(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml != null) {


            _unexpected_xml_errors_ =

                    XmlValidationError.addUnexpectedXmlError(this, _unexpected_xml_errors_, xml);

            xml = xml.next();

        }

    }


    /**
     * This method marshals this object into an
     * <p/>
     * XML instance document.
     */

    public void marshal(OutputStream out) {

        toXml(out);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream) {

        toXml(stream, true);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream, String indent, boolean embed_files) {


        if (stream instanceof XmlOutputStream) {

            toXml(stream, embed_files);

        } else {

            FormattedOutputStream out =

                    new FormattedOutputStream(stream);

            out.setIndentString(indent);

            toXml(out, embed_files);

        }

    }


    /**
     * Serializes this object to XML.
     */

    public void toXml(OutputStream stream, boolean embed_files) {


        XmlOutputStream out = null;

        if (stream instanceof XmlOutputStream) {

            out = (XmlOutputStream) stream;

        } else {

            out = new RawOutputStream(stream);

        }


        out.writeStartTag(getXmlTagName(), false);

        out.incrementIndent();


        Object TRANSACTIONREFERENCE_value = getTRANSACTIONREFERENCE();

        if (TRANSACTIONREFERENCE_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) TRANSACTIONREFERENCE_value,

                    embed_files);

        }

        out.write($RESPONSESTATUSCODE,

                _RESPONSESTATUSCODE);

        out.write($RESPONSESTATUSDESCRIPTION,

                _RESPONSESTATUSDESCRIPTION);


        Object RESPONSEERROR_value = getRESPONSEERROR();

        if (RESPONSEERROR_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) RESPONSEERROR_value,

                    embed_files);

        }


        out.decrementIndent();

        out.writeEndTag(getXmlTagName());

    }


    /**
     * Get the  birth certificate for this object.
     */

    public String birthCertificate() {

        return ("1hge137:cy11q24t:r46qym");

    }

}
