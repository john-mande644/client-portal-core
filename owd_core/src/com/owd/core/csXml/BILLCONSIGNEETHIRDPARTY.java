/*

 * DO NOT EDIT!

 *

 * This file was generated by the Breeze XML Studio Java Export Wizard.

 *

 *        Project: connectship

 *     Class Name: BILLCONSIGNEETHIRDPARTY

 *           Date: Fri Feb 22 21:58:50 PST 2002

 * Breeze Version: 2.2.1 build 114

 *

 * IMPORTANT: Please see your Breeze license for more information on

 *            where and how this generated code may be used.

 *

 */


package com.owd.core.csXml;


import com.tbf.xml.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Vector;


/**
 * BILLCONSIGNEETHIRDPARTY class.
 */

public class BILLCONSIGNEETHIRDPARTY

        implements XmlObject, Validateable, java.io.Serializable {
private final static Logger log =  LogManager.getLogger();


    /**
     * Constant for "BILLCONSIGNEETHIRDPARTY" node name.
     */

    public static final String $BILLCONSIGNEETHIRDPARTY = "BILLCONSIGNEETHIRDPARTY";


    /**
     * Constant for "CONSIGNEETPCOMPANY" node name.
     */

    public static final String $CONSIGNEETPCOMPANY = "CONSIGNEETPCOMPANY";


    /**
     * Constant for "CONSIGNEETPPHONE" node name.
     */

    public static final String $CONSIGNEETPPHONE = "CONSIGNEETPPHONE";


    /**
     * Constant for "CONSIGNEETPCOUNTRYSYMBOL" node name.
     */

    public static final String $CONSIGNEETPCOUNTRYSYMBOL = "CONSIGNEETPCOUNTRYSYMBOL";


    /**
     * Constant for "CONSIGNEETPADDRESS2" node name.
     */

    public static final String $CONSIGNEETPADDRESS2 = "CONSIGNEETPADDRESS2";


    /**
     * Constant for "CONSIGNEETPPOSTALCODE" node name.
     */

    public static final String $CONSIGNEETPPOSTALCODE = "CONSIGNEETPPOSTALCODE";


    /**
     * Constant for "CONSIGNEETPADDRESS1" node name.
     */

    public static final String $CONSIGNEETPADDRESS1 = "CONSIGNEETPADDRESS1";


    /**
     * Constant for "CONSIGNEETPCITY" node name.
     */

    public static final String $CONSIGNEETPCITY = "CONSIGNEETPCITY";


    /**
     * Constant for "CONSIGNEETPACCOUNT" node name.
     */

    public static final String $CONSIGNEETPACCOUNT = "CONSIGNEETPACCOUNT";


    /**
     * Constant for "CONSIGNEETPSTATEPROVINCE" node name.
     */

    public static final String $CONSIGNEETPSTATEPROVINCE = "CONSIGNEETPSTATEPROVINCE";


    /**
     * Constant for "CONSIGNEETPCONTACT" node name.
     */

    public static final String $CONSIGNEETPCONTACT = "CONSIGNEETPCONTACT";


    protected String _CONSIGNEETPCOMPANY = null;

    protected String _CONSIGNEETPCONTACT = null;

    protected String _CONSIGNEETPADDRESS1 = null;

    protected String _CONSIGNEETPADDRESS2 = null;

    protected String _CONSIGNEETPCITY = null;

    protected String _CONSIGNEETPSTATEPROVINCE = null;

    protected String _CONSIGNEETPPOSTALCODE = null;

    protected String _CONSIGNEETPCOUNTRYSYMBOL = null;

    protected String _CONSIGNEETPPHONE = null;

    protected String _CONSIGNEETPACCOUNT = null;


    /**
     * Storage for UNEXPECTED_XML errors.
     */

    protected Vector _unexpected_xml_errors_ = null;


    /**
     * Default no args constructor.
     */

    public BILLCONSIGNEETHIRDPARTY() {

    }


    /**
     * Creates and populates an instance from the provided parse tree.
     *
     * @param xml the parse tree
     */

    public BILLCONSIGNEETHIRDPARTY(XmlElement xml) {

        fromXml(xml);

    }


    /**
     * Get the CONSIGNEETPCOMPANY property.
     */

    public String getCONSIGNEETPCOMPANY() {

        return (_CONSIGNEETPCOMPANY);

    }


    /**
     * Set the CONSIGNEETPCOMPANY property.
     */

    public void setCONSIGNEETPCOMPANY(String newValue) {

        _CONSIGNEETPCOMPANY = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPCOMPANY is set or not.
     *
     * @returns true if CONSIGNEETPCOMPANY is set, false if not
     */

    public boolean hasCONSIGNEETPCOMPANY() {

        return (_CONSIGNEETPCOMPANY != null);

    }


    /**
     * Discards CONSIGNEETPCOMPANY's value.
     */

    public void deleteCONSIGNEETPCOMPANY() {

        _CONSIGNEETPCOMPANY = null;

    }


    /**
     * Get the CONSIGNEETPCONTACT property.
     */

    public String getCONSIGNEETPCONTACT() {

        return (_CONSIGNEETPCONTACT);

    }


    /**
     * Set the CONSIGNEETPCONTACT property.
     */

    public void setCONSIGNEETPCONTACT(String newValue) {

        _CONSIGNEETPCONTACT = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPCONTACT is set or not.
     *
     * @returns true if CONSIGNEETPCONTACT is set, false if not
     */

    public boolean hasCONSIGNEETPCONTACT() {

        return (_CONSIGNEETPCONTACT != null);

    }


    /**
     * Discards CONSIGNEETPCONTACT's value.
     */

    public void deleteCONSIGNEETPCONTACT() {

        _CONSIGNEETPCONTACT = null;

    }


    /**
     * Get the CONSIGNEETPADDRESS1 property.
     */

    public String getCONSIGNEETPADDRESS1() {

        return (_CONSIGNEETPADDRESS1);

    }


    /**
     * Set the CONSIGNEETPADDRESS1 property.
     */

    public void setCONSIGNEETPADDRESS1(String newValue) {

        _CONSIGNEETPADDRESS1 = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPADDRESS1 is set or not.
     *
     * @returns true if CONSIGNEETPADDRESS1 is set, false if not
     */

    public boolean hasCONSIGNEETPADDRESS1() {

        return (_CONSIGNEETPADDRESS1 != null);

    }


    /**
     * Discards CONSIGNEETPADDRESS1's value.
     */

    public void deleteCONSIGNEETPADDRESS1() {

        _CONSIGNEETPADDRESS1 = null;

    }


    /**
     * Get the CONSIGNEETPADDRESS2 property.
     */

    public String getCONSIGNEETPADDRESS2() {

        return (_CONSIGNEETPADDRESS2);

    }


    /**
     * Set the CONSIGNEETPADDRESS2 property.
     */

    public void setCONSIGNEETPADDRESS2(String newValue) {

        _CONSIGNEETPADDRESS2 = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPADDRESS2 is set or not.
     *
     * @returns true if CONSIGNEETPADDRESS2 is set, false if not
     */

    public boolean hasCONSIGNEETPADDRESS2() {

        return (_CONSIGNEETPADDRESS2 != null);

    }


    /**
     * Discards CONSIGNEETPADDRESS2's value.
     */

    public void deleteCONSIGNEETPADDRESS2() {

        _CONSIGNEETPADDRESS2 = null;

    }


    /**
     * Get the CONSIGNEETPCITY property.
     */

    public String getCONSIGNEETPCITY() {

        return (_CONSIGNEETPCITY);

    }


    /**
     * Set the CONSIGNEETPCITY property.
     */

    public void setCONSIGNEETPCITY(String newValue) {

        _CONSIGNEETPCITY = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPCITY is set or not.
     *
     * @returns true if CONSIGNEETPCITY is set, false if not
     */

    public boolean hasCONSIGNEETPCITY() {

        return (_CONSIGNEETPCITY != null);

    }


    /**
     * Discards CONSIGNEETPCITY's value.
     */

    public void deleteCONSIGNEETPCITY() {

        _CONSIGNEETPCITY = null;

    }


    /**
     * Get the CONSIGNEETPSTATEPROVINCE property.
     */

    public String getCONSIGNEETPSTATEPROVINCE() {

        return (_CONSIGNEETPSTATEPROVINCE);

    }


    /**
     * Set the CONSIGNEETPSTATEPROVINCE property.
     */

    public void setCONSIGNEETPSTATEPROVINCE(String newValue) {

        _CONSIGNEETPSTATEPROVINCE = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPSTATEPROVINCE is set or not.
     *
     * @returns true if CONSIGNEETPSTATEPROVINCE is set, false if not
     */

    public boolean hasCONSIGNEETPSTATEPROVINCE() {

        return (_CONSIGNEETPSTATEPROVINCE != null);

    }


    /**
     * Discards CONSIGNEETPSTATEPROVINCE's value.
     */

    public void deleteCONSIGNEETPSTATEPROVINCE() {

        _CONSIGNEETPSTATEPROVINCE = null;

    }


    /**
     * Get the CONSIGNEETPPOSTALCODE property.
     */

    public String getCONSIGNEETPPOSTALCODE() {

        return (_CONSIGNEETPPOSTALCODE);

    }


    /**
     * Set the CONSIGNEETPPOSTALCODE property.
     */

    public void setCONSIGNEETPPOSTALCODE(String newValue) {

        _CONSIGNEETPPOSTALCODE = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPPOSTALCODE is set or not.
     *
     * @returns true if CONSIGNEETPPOSTALCODE is set, false if not
     */

    public boolean hasCONSIGNEETPPOSTALCODE() {

        return (_CONSIGNEETPPOSTALCODE != null);

    }


    /**
     * Discards CONSIGNEETPPOSTALCODE's value.
     */

    public void deleteCONSIGNEETPPOSTALCODE() {

        _CONSIGNEETPPOSTALCODE = null;

    }


    /**
     * Get the CONSIGNEETPCOUNTRYSYMBOL property.
     */

    public String getCONSIGNEETPCOUNTRYSYMBOL() {

        return (_CONSIGNEETPCOUNTRYSYMBOL);

    }


    /**
     * Set the CONSIGNEETPCOUNTRYSYMBOL property.
     */

    public void setCONSIGNEETPCOUNTRYSYMBOL(String newValue) {

        _CONSIGNEETPCOUNTRYSYMBOL = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPCOUNTRYSYMBOL is set or not.
     *
     * @returns true if CONSIGNEETPCOUNTRYSYMBOL is set, false if not
     */

    public boolean hasCONSIGNEETPCOUNTRYSYMBOL() {

        return (_CONSIGNEETPCOUNTRYSYMBOL != null);

    }


    /**
     * Discards CONSIGNEETPCOUNTRYSYMBOL's value.
     */

    public void deleteCONSIGNEETPCOUNTRYSYMBOL() {

        _CONSIGNEETPCOUNTRYSYMBOL = null;

    }


    /**
     * Get the CONSIGNEETPPHONE property.
     */

    public String getCONSIGNEETPPHONE() {

        return (_CONSIGNEETPPHONE);

    }


    /**
     * Set the CONSIGNEETPPHONE property.
     */

    public void setCONSIGNEETPPHONE(String newValue) {

        _CONSIGNEETPPHONE = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPPHONE is set or not.
     *
     * @returns true if CONSIGNEETPPHONE is set, false if not
     */

    public boolean hasCONSIGNEETPPHONE() {

        return (_CONSIGNEETPPHONE != null);

    }


    /**
     * Discards CONSIGNEETPPHONE's value.
     */

    public void deleteCONSIGNEETPPHONE() {

        _CONSIGNEETPPHONE = null;

    }


    /**
     * Get the CONSIGNEETPACCOUNT property.
     */

    public String getCONSIGNEETPACCOUNT() {

        return (_CONSIGNEETPACCOUNT);

    }


    /**
     * Set the CONSIGNEETPACCOUNT property.
     */

    public void setCONSIGNEETPACCOUNT(String newValue) {

        _CONSIGNEETPACCOUNT = newValue;

    }


    /**
     * Checks for whether CONSIGNEETPACCOUNT is set or not.
     *
     * @returns true if CONSIGNEETPACCOUNT is set, false if not
     */

    public boolean hasCONSIGNEETPACCOUNT() {

        return (_CONSIGNEETPACCOUNT != null);

    }


    /**
     * Discards CONSIGNEETPACCOUNT's value.
     */

    public void deleteCONSIGNEETPACCOUNT() {

        _CONSIGNEETPACCOUNT = null;

    }


    /**
     * Gets the XML tag name for this object.
     */

    public String getXmlTagName() {

        return ($BILLCONSIGNEETHIRDPARTY);

    }


    /**
     * Gets the XML tag name for this class.
     */

    public static String getClassXmlTagName() {

        return ($BILLCONSIGNEETHIRDPARTY);

    }


    /**
     * This flag is used to used to check whether
     * <p/>
     * the validators have been created.
     */

    transient protected static boolean _validators_created = false;



    /*

     * XML Validators

     */

    transient protected static XmlStringValidator

            _CONSIGNEETPCOMPANY_validator_ = null;


    /**
     * Create the validators for this class.
     */

    protected static synchronized void createValidators() {


        if (_validators_created) {

            return;

        }


        _CONSIGNEETPCOMPANY_validator_ = new XmlStringValidator("BILLCONSIGNEETHIRDPARTY.CONSIGNEETPCOMPANY", "Element",

                "BILLCONSIGNEETHIRDPARTY/CONSIGNEETPCOMPANY", -1, -1, true);


        _validators_created = true;

    }


    /**
     * Checks this object to see if it will produce valid XML.
     */

    public boolean isValid() {


        if (!(this instanceof Validateable)) {

            return (true);

        }


        Vector errors = ((Validateable) this).getValidationErrors(true);

        if (errors == null || errors.size() < 1) {

            return (true);

        }


        return (false);

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     */

    public Vector getValidationErrors() {

        return (getValidationErrors(false));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error) {

        return (getValidationErrors(return_on_error, true));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error, boolean traverse) {


        createValidators();


        Vector errors;

        if (_unexpected_xml_errors_ != null &&

                _unexpected_xml_errors_.size() > 0) {

            errors = (Vector) _unexpected_xml_errors_.clone();

            if (return_on_error) {

                return (errors);

            }

        } else {

            errors = new Vector();

        }


        XmlValidationError e;

        e = _CONSIGNEETPCOMPANY_validator_.validate(_CONSIGNEETPCOMPANY);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        if (errors.size() < 1) {

            return (null);

        }


        return (errors);

    }


    /**
     * Checks the XML to see whether it matches the
     * <p/>
     * XML contents of this class.
     */

    public static boolean matches(XmlElement xml) {


        if (xml == null) {

            return (false);

        }


        return (xml.equals($BILLCONSIGNEETHIRDPARTY));

    }


    /**
     * This method unmarshals an XML document instance
     * <p/>
     * into an instance of this class.
     */

    public static BILLCONSIGNEETHIRDPARTY unmarshal(InputStream in) throws Exception {


        BILLCONSIGNEETHIRDPARTY obj = new BILLCONSIGNEETHIRDPARTY();

        ObjectFactory.unmarshal(obj, in);

        return (obj);

    }


    /**
     * Populates this object with the values from the
     * <p/>
     * parsed XML.
     */

    public void fromXml(XmlElement xml) {


        if (xml == null) {

            return;

        }


        if (!xml.equals($BILLCONSIGNEETHIRDPARTY)) {

            return;

        }





        /*

         * Get the contained XmlElement, this is what we process

         */

        xml = xml.getSubElementAt(0);

        if (xml == null) {

            return;

        }


        if (xml.equals($CONSIGNEETPCOMPANY)) {

            setCONSIGNEETPCOMPANY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEETPCONTACT)) {

            setCONSIGNEETPCONTACT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEETPADDRESS1)) {

            setCONSIGNEETPADDRESS1(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEETPADDRESS2)) {

            setCONSIGNEETPADDRESS2(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEETPCITY)) {

            setCONSIGNEETPCITY(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEETPSTATEPROVINCE)) {

            setCONSIGNEETPSTATEPROVINCE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEETPPOSTALCODE)) {

            setCONSIGNEETPPOSTALCODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEETPCOUNTRYSYMBOL)) {

            setCONSIGNEETPCOUNTRYSYMBOL(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEETPPHONE)) {

            setCONSIGNEETPPHONE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEETPACCOUNT)) {

            setCONSIGNEETPACCOUNT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml != null) {


            _unexpected_xml_errors_ =

                    XmlValidationError.addUnexpectedXmlError(this, _unexpected_xml_errors_, xml);

            xml = xml.next();

        }

    }


    /**
     * This method marshals this object into an
     * <p/>
     * XML instance document.
     */

    public void marshal(OutputStream out) {

        toXml(out);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream) {

        toXml(stream, true);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream, String indent, boolean embed_files) {


        if (stream instanceof XmlOutputStream) {

            toXml(stream, embed_files);

        } else {

            FormattedOutputStream out =

                    new FormattedOutputStream(stream);

            out.setIndentString(indent);

            toXml(out, embed_files);

        }

    }


    /**
     * Serializes this object to XML.
     */

    public void toXml(OutputStream stream, boolean embed_files) {


        XmlOutputStream out = null;

        if (stream instanceof XmlOutputStream) {

            out = (XmlOutputStream) stream;

        } else {

            out = new RawOutputStream(stream);

        }


        out.writeStartTag(getXmlTagName(), false);

        out.incrementIndent();


        out.write($CONSIGNEETPCOMPANY,

                _CONSIGNEETPCOMPANY);

        out.write($CONSIGNEETPCONTACT,

                _CONSIGNEETPCONTACT);

        out.write($CONSIGNEETPADDRESS1,

                _CONSIGNEETPADDRESS1);

        out.write($CONSIGNEETPADDRESS2,

                _CONSIGNEETPADDRESS2);

        out.write($CONSIGNEETPCITY,

                _CONSIGNEETPCITY);

        out.write($CONSIGNEETPSTATEPROVINCE,

                _CONSIGNEETPSTATEPROVINCE);

        out.write($CONSIGNEETPPOSTALCODE,

                _CONSIGNEETPPOSTALCODE);

        out.write($CONSIGNEETPCOUNTRYSYMBOL,

                _CONSIGNEETPCOUNTRYSYMBOL);

        out.write($CONSIGNEETPPHONE,

                _CONSIGNEETPPHONE);

        out.write($CONSIGNEETPACCOUNT,

                _CONSIGNEETPACCOUNT);


        out.decrementIndent();

        out.writeEndTag(getXmlTagName());

    }


    /**
     * Get the  birth certificate for this object.
     */

    public String birthCertificate() {

        return ("1hge137:cy11q2n6:1e71li4");

    }

}
