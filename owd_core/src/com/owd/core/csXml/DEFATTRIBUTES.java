/*

 * DO NOT EDIT!

 *

 * This file was generated by the Breeze XML Studio Java Export Wizard.

 *

 *        Project: connectship

 *     Class Name: DEFATTRIBUTES

 *           Date: Fri Feb 22 21:58:50 PST 2002

 * Breeze Version: 2.2.1 build 114

 *

 * IMPORTANT: Please see your Breeze license for more information on

 *            where and how this generated code may be used.

 *

 */


package com.owd.core.csXml;


import com.tbf.xml.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Vector;


/**
 * DEFATTRIBUTES class.
 */

public class DEFATTRIBUTES

        implements com.tbf.xml.XmlObject, Validateable, java.io.Serializable {
private final static Logger log =  LogManager.getLogger();


    /**
     * Constant for "CURRENCYCODE" node name.
     */

    public static final String $CURRENCYCODE = "CURRENCYCODE";


    /**
     * Constant for "DEFATTRIBUTES" node name.
     */

    public static final String $DEFATTRIBUTES = "DEFATTRIBUTES";


    /**
     * Constant for "CONSIGNEE" node name.
     */

    public static final String $CONSIGNEE = "CONSIGNEE";


    /**
     * Constant for "SHIPPERINFO" node name.
     */

    public static final String $SHIPPERINFO = "SHIPPERINFO";


    /**
     * Constant for "SHIPDATE" node name.
     */

    public static final String $SHIPDATE = "SHIPDATE";


    /**
     * Constant for "TERMS" node name.
     */

    public static final String $TERMS = "TERMS";


    /**
     * Constant for "SHIPMENTSERVICEOPTIONS" node name.
     */

    public static final String $SHIPMENTSERVICEOPTIONS = "SHIPMENTSERVICEOPTIONS";


    protected CONSIGNEE _CONSIGNEE = null;

    protected SHIPPERINFO_1 _SHIPPERINFO = null;

    protected String _TERMS = null;

    protected String _CURRENCYCODE = null;

    protected String _SHIPDATE = null;

    protected SHIPMENTSERVICEOPTIONS _SHIPMENTSERVICEOPTIONS = null;


    /**
     * Storage for UNEXPECTED_XML errors.
     */

    protected Vector _unexpected_xml_errors_ = null;


    /**
     * Default no args constructor.
     */

    public DEFATTRIBUTES() {

    }


    /**
     * Creates and populates an instance from the provided parse tree.
     *
     * @param xml the parse tree
     */

    public DEFATTRIBUTES(XmlElement xml) {

        fromXml(xml);

    }


    /**
     * Get the CONSIGNEE property.
     */

    public CONSIGNEE getCONSIGNEE() {

        return (_CONSIGNEE);

    }


    /**
     * Set the CONSIGNEE property.
     */

    public void setCONSIGNEE(CONSIGNEE obj) {

        _CONSIGNEE = obj;

    }


    protected void setCONSIGNEE(XmlElement xml) {


        _CONSIGNEE =

                new CONSIGNEE(xml);

    }


    /**
     * Checks for whether CONSIGNEE is set or not.
     *
     * @returns true if CONSIGNEE is set, false if not
     */

    public boolean hasCONSIGNEE() {

        return (_CONSIGNEE != null);

    }


    /**
     * Discards CONSIGNEE's value.
     */

    public void deleteCONSIGNEE() {

        _CONSIGNEE = null;

    }


    /**
     * Get the SHIPPERINFO property.
     */

    public SHIPPERINFO_1 getSHIPPERINFO() {

        return (_SHIPPERINFO);

    }


    /**
     * Set the SHIPPERINFO property.
     */

    public void setSHIPPERINFO(SHIPPERINFO_1 obj) {

        _SHIPPERINFO = obj;

    }


    protected void setSHIPPERINFO(XmlElement xml) {


        _SHIPPERINFO =

                new SHIPPERINFO_1(xml);

    }


    /**
     * Checks for whether SHIPPERINFO is set or not.
     *
     * @returns true if SHIPPERINFO is set, false if not
     */

    public boolean hasSHIPPERINFO() {

        return (_SHIPPERINFO != null);

    }


    /**
     * Discards SHIPPERINFO's value.
     */

    public void deleteSHIPPERINFO() {

        _SHIPPERINFO = null;

    }


    /**
     * Get the TERMS property.
     */

    public String getTERMS() {

        return (_TERMS);

    }


    /**
     * Set the TERMS property.
     */

    public void setTERMS(String newValue) {

        _TERMS = newValue;

    }


    /**
     * Checks for whether TERMS is set or not.
     *
     * @returns true if TERMS is set, false if not
     */

    public boolean hasTERMS() {

        return (_TERMS != null);

    }


    /**
     * Discards TERMS's value.
     */

    public void deleteTERMS() {

        _TERMS = null;

    }


    /**
     * Get the CURRENCYCODE property.
     */

    public String getCURRENCYCODE() {

        return (_CURRENCYCODE);

    }


    /**
     * Set the CURRENCYCODE property.
     */

    public void setCURRENCYCODE(String newValue) {

        _CURRENCYCODE = newValue;

    }


    /**
     * Checks for whether CURRENCYCODE is set or not.
     *
     * @returns true if CURRENCYCODE is set, false if not
     */

    public boolean hasCURRENCYCODE() {

        return (_CURRENCYCODE != null);

    }


    /**
     * Discards CURRENCYCODE's value.
     */

    public void deleteCURRENCYCODE() {

        _CURRENCYCODE = null;

    }


    /**
     * Get the SHIPDATE property.
     */

    public String getSHIPDATE() {

        return (_SHIPDATE);

    }


    /**
     * Set the SHIPDATE property.
     */

    public void setSHIPDATE(String newValue) {

        _SHIPDATE = newValue;

    }


    /**
     * Checks for whether SHIPDATE is set or not.
     *
     * @returns true if SHIPDATE is set, false if not
     */

    public boolean hasSHIPDATE() {

        return (_SHIPDATE != null);

    }


    /**
     * Discards SHIPDATE's value.
     */

    public void deleteSHIPDATE() {

        _SHIPDATE = null;

    }


    /**
     * Get the SHIPMENTSERVICEOPTIONS property.
     */

    public SHIPMENTSERVICEOPTIONS getSHIPMENTSERVICEOPTIONS() {

        return (_SHIPMENTSERVICEOPTIONS);

    }


    /**
     * Set the SHIPMENTSERVICEOPTIONS property.
     */

    public void setSHIPMENTSERVICEOPTIONS(SHIPMENTSERVICEOPTIONS obj) {

        _SHIPMENTSERVICEOPTIONS = obj;

    }


    protected void setSHIPMENTSERVICEOPTIONS(XmlElement xml) {


        _SHIPMENTSERVICEOPTIONS =

                new SHIPMENTSERVICEOPTIONS(xml);

    }


    /**
     * Checks for whether SHIPMENTSERVICEOPTIONS is set or not.
     *
     * @returns true if SHIPMENTSERVICEOPTIONS is set, false if not
     */

    public boolean hasSHIPMENTSERVICEOPTIONS() {

        return (_SHIPMENTSERVICEOPTIONS != null);

    }


    /**
     * Discards SHIPMENTSERVICEOPTIONS's value.
     */

    public void deleteSHIPMENTSERVICEOPTIONS() {

        _SHIPMENTSERVICEOPTIONS = null;

    }


    /**
     * Gets the XML tag name for this object.
     */

    public String getXmlTagName() {

        return ($DEFATTRIBUTES);

    }


    /**
     * Gets the XML tag name for this class.
     */

    public static String getClassXmlTagName() {

        return ($DEFATTRIBUTES);

    }


    /**
     * This flag is used to used to check whether
     * <p/>
     * the validators have been created.
     */

    transient protected static boolean _validators_created = false;



    /*

     * XML Validators

     */

    transient protected static XmlValidator

            _CONSIGNEE_validator_ = null;

    transient protected static XmlValidator

            _SHIPPERINFO_validator_ = null;

    transient protected static XmlValidator

            _SHIPMENTSERVICEOPTIONS_validator_ = null;


    /**
     * Create the validators for this class.
     */

    protected static synchronized void createValidators() {


        if (_validators_created) {

            return;

        }


        _CONSIGNEE_validator_ = new XmlValidator("DEFATTRIBUTES.CONSIGNEE", "Element",

                "DEFATTRIBUTES/CONSIGNEE", false);


        _SHIPPERINFO_validator_ = new XmlValidator("DEFATTRIBUTES.SHIPPERINFO", "Element",

                "DEFATTRIBUTES/SHIPPERINFO", false);


        _SHIPMENTSERVICEOPTIONS_validator_ = new XmlValidator("DEFATTRIBUTES.SHIPMENTSERVICEOPTIONS", "Element",

                "DEFATTRIBUTES/SHIPMENTSERVICEOPTIONS", false);


        _validators_created = true;

    }


    /**
     * Checks this object to see if it will produce valid XML.
     */

    public boolean isValid() {


        if (!(this instanceof Validateable)) {

            return (true);

        }


        Vector errors = ((Validateable) this).getValidationErrors(true);

        if (errors == null || errors.size() < 1) {

            return (true);

        }


        return (false);

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     */

    public Vector getValidationErrors() {

        return (getValidationErrors(false));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error) {

        return (getValidationErrors(return_on_error, true));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error, boolean traverse) {


        createValidators();


        Vector errors;

        if (_unexpected_xml_errors_ != null &&

                _unexpected_xml_errors_.size() > 0) {

            errors = (Vector) _unexpected_xml_errors_.clone();

            if (return_on_error) {

                return (errors);

            }

        } else {

            errors = new Vector();

        }


        XmlValidationError e;


        if (!traverse) {

            if (errors.size() < 1) {

                return (null);

            }


            return (errors);

        }


        boolean is_valid;


        is_valid = _CONSIGNEE_validator_.isValid(_CONSIGNEE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _SHIPPERINFO_validator_.isValid(_SHIPPERINFO,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _SHIPMENTSERVICEOPTIONS_validator_.isValid(_SHIPMENTSERVICEOPTIONS,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        if (errors.size() < 1) {

            return (null);

        }


        return (errors);

    }


    /**
     * Checks the XML to see whether it matches the
     * <p/>
     * XML contents of this class.
     */

    public static boolean matches(XmlElement xml) {


        if (xml == null) {

            return (false);

        }


        return (xml.equals($DEFATTRIBUTES));

    }


    /**
     * This method unmarshals an XML document instance
     * <p/>
     * into an instance of this class.
     */

    public static DEFATTRIBUTES unmarshal(InputStream in) throws Exception {


        DEFATTRIBUTES obj = new DEFATTRIBUTES();

        ObjectFactory.unmarshal(obj, in);

        return (obj);

    }


    /**
     * Populates this object with the values from the
     * <p/>
     * parsed XML.
     */

    public void fromXml(XmlElement xml) {


        if (xml == null) {

            return;

        }


        if (!xml.equals($DEFATTRIBUTES)) {

            return;

        }





        /*

         * Get the contained XmlElement, this is what we process

         */

        xml = xml.getSubElementAt(0);

        if (xml == null) {

            return;

        }


        if (xml.equals($CONSIGNEE)) {

            setCONSIGNEE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SHIPPERINFO)) {

            setSHIPPERINFO(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($TERMS)) {

            setTERMS(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CURRENCYCODE)) {

            setCURRENCYCODE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SHIPDATE)) {

            setSHIPDATE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SHIPMENTSERVICEOPTIONS)) {

            setSHIPMENTSERVICEOPTIONS(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml != null) {


            _unexpected_xml_errors_ =

                    XmlValidationError.addUnexpectedXmlError(this, _unexpected_xml_errors_, xml);

            xml = xml.next();

        }

    }


    /**
     * This method marshals this object into an
     * <p/>
     * XML instance document.
     */

    public void marshal(OutputStream out) {

        toXml(out);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream) {

        toXml(stream, true);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream, String indent, boolean embed_files) {


        if (stream instanceof XmlOutputStream) {

            toXml(stream, embed_files);

        } else {

            FormattedOutputStream out =

                    new FormattedOutputStream(stream);

            out.setIndentString(indent);

            toXml(out, embed_files);

        }

    }


    /**
     * Serializes this object to XML.
     */

    public void toXml(OutputStream stream, boolean embed_files) {


        XmlOutputStream out = null;

        if (stream instanceof XmlOutputStream) {

            out = (XmlOutputStream) stream;

        } else {

            out = new RawOutputStream(stream);

        }


        out.writeStartTag(getXmlTagName(), false);

        out.incrementIndent();


        Object CONSIGNEE_value = getCONSIGNEE();

        if (CONSIGNEE_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) CONSIGNEE_value,

                    embed_files);

        }


        Object SHIPPERINFO_value = getSHIPPERINFO();

        if (SHIPPERINFO_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) SHIPPERINFO_value,

                    embed_files);

        }

        out.write($TERMS,

                _TERMS);

        out.write($CURRENCYCODE,

                _CURRENCYCODE);

        out.write($SHIPDATE,

                _SHIPDATE);


        Object SHIPMENTSERVICEOPTIONS_value = getSHIPMENTSERVICEOPTIONS();

        if (SHIPMENTSERVICEOPTIONS_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) SHIPMENTSERVICEOPTIONS_value,

                    embed_files);

        }


        out.decrementIndent();

        out.writeEndTag(getXmlTagName());

    }


    /**
     * Get the  birth certificate for this object.
     */

    public String birthCertificate() {

        return ("1hge137:cy11q2ek:srwhng");

    }

}
