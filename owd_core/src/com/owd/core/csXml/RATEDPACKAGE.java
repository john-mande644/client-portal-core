/*

 * DO NOT EDIT!

 *

 * This file was generated by the Breeze XML Studio Java Export Wizard.

 *

 *        Project: connectship

 *     Class Name: RATEDPACKAGE

 *           Date: Fri Feb 22 21:58:51 PST 2002

 * Breeze Version: 2.2.1 build 114

 *

 * IMPORTANT: Please see your Breeze license for more information on

 *            where and how this generated code may be used.

 *

 */


package com.owd.core.csXml;


import com.tbf.xml.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Vector;


/**
 * RATEDPACKAGE class.
 */

public class RATEDPACKAGE

        implements com.tbf.xml.XmlObject, Validateable, java.io.Serializable {
private final static Logger log =  LogManager.getLogger();


    /**
     * Constant for "PACKINGLIST" node name.
     */

    public static final String $PACKINGLIST = "PACKINGLIST";


    /**
     * Constant for "PACKAGESERVICEOPTIONSCHARGES" node name.
     */

    public static final String $PACKAGESERVICEOPTIONSCHARGES = "PACKAGESERVICEOPTIONSCHARGES";


    /**
     * Constant for "PKGWEIGHT" node name.
     */

    public static final String $PKGWEIGHT = "PKGWEIGHT";


    /**
     * Constant for "PKGERROR" node name.
     */

    public static final String $PKGERROR = "PKGERROR";


    /**
     * Constant for "REFERENCE" node name.
     */

    public static final String $REFERENCE = "REFERENCE";


    /**
     * Constant for "PACKAGEBASECHARGES" node name.
     */

    public static final String $PACKAGEBASECHARGES = "PACKAGEBASECHARGES";


    /**
     * Constant for "BILLINGWEIGHT" node name.
     */

    public static final String $BILLINGWEIGHT = "BILLINGWEIGHT";


    /**
     * Constant for "PKGSERVICE" node name.
     */

    public static final String $PKGSERVICE = "PKGSERVICE";


    /**
     * Constant for "PACKAGETOTALCHARGES" node name.
     */

    public static final String $PACKAGETOTALCHARGES = "PACKAGETOTALCHARGES";


    /**
     * Constant for "RATEDPACKAGE" node name.
     */

    public static final String $RATEDPACKAGE = "RATEDPACKAGE";


    protected PKGERROR _PKGERROR = null;

    protected PKGSERVICE_1 _PKGSERVICE = null;

    protected REFERENCE _REFERENCE = null;

    protected PACKAGETOTALCHARGES _PACKAGETOTALCHARGES = null;

    protected PACKAGEBASECHARGES _PACKAGEBASECHARGES = null;

    protected PACKAGESERVICEOPTIONSCHARGES _PACKAGESERVICEOPTIONSCHARGES = null;

    protected PKGWEIGHT _PKGWEIGHT = null;

    protected BILLINGWEIGHT _BILLINGWEIGHT = null;

    protected PACKINGLIST _PACKINGLIST = null;


    /**
     * Storage for UNEXPECTED_XML errors.
     */

    protected Vector _unexpected_xml_errors_ = null;


    /**
     * Default no args constructor.
     */

    public RATEDPACKAGE() {

    }


    /**
     * Creates and populates an instance from the provided parse tree.
     *
     * @param xml the parse tree
     */

    public RATEDPACKAGE(XmlElement xml) {

        fromXml(xml);

    }


    /**
     * Get the PKGERROR property.
     */

    public PKGERROR getPKGERROR() {

        return (_PKGERROR);

    }


    /**
     * Set the PKGERROR property.
     */

    public void setPKGERROR(PKGERROR obj) {

        _PKGERROR = obj;

    }


    protected void setPKGERROR(XmlElement xml) {


        _PKGERROR =

                new PKGERROR(xml);

    }


    /**
     * Checks for whether PKGERROR is set or not.
     *
     * @returns true if PKGERROR is set, false if not
     */

    public boolean hasPKGERROR() {

        return (_PKGERROR != null);

    }


    /**
     * Discards PKGERROR's value.
     */

    public void deletePKGERROR() {

        _PKGERROR = null;

    }


    /**
     * Get the PKGSERVICE property.
     */

    public PKGSERVICE_1 getPKGSERVICE() {

        return (_PKGSERVICE);

    }


    /**
     * Set the PKGSERVICE property.
     */

    public void setPKGSERVICE(PKGSERVICE_1 obj) {

        _PKGSERVICE = obj;

    }


    protected void setPKGSERVICE(XmlElement xml) {


        _PKGSERVICE =

                new PKGSERVICE_1(xml);

    }


    /**
     * Checks for whether PKGSERVICE is set or not.
     *
     * @returns true if PKGSERVICE is set, false if not
     */

    public boolean hasPKGSERVICE() {

        return (_PKGSERVICE != null);

    }


    /**
     * Discards PKGSERVICE's value.
     */

    public void deletePKGSERVICE() {

        _PKGSERVICE = null;

    }


    /**
     * Get the REFERENCE property.
     */

    public REFERENCE getREFERENCE() {

        return (_REFERENCE);

    }


    /**
     * Set the REFERENCE property.
     */

    public void setREFERENCE(REFERENCE obj) {

        _REFERENCE = obj;

    }


    protected void setREFERENCE(XmlElement xml) {


        _REFERENCE =

                new REFERENCE(xml);

    }


    /**
     * Checks for whether REFERENCE is set or not.
     *
     * @returns true if REFERENCE is set, false if not
     */

    public boolean hasREFERENCE() {

        return (_REFERENCE != null);

    }


    /**
     * Discards REFERENCE's value.
     */

    public void deleteREFERENCE() {

        _REFERENCE = null;

    }


    /**
     * Get the PACKAGETOTALCHARGES property.
     */

    public PACKAGETOTALCHARGES getPACKAGETOTALCHARGES() {

        return (_PACKAGETOTALCHARGES);

    }


    /**
     * Set the PACKAGETOTALCHARGES property.
     */

    public void setPACKAGETOTALCHARGES(PACKAGETOTALCHARGES obj) {

        _PACKAGETOTALCHARGES = obj;

    }


    protected void setPACKAGETOTALCHARGES(XmlElement xml) {


        _PACKAGETOTALCHARGES =

                new PACKAGETOTALCHARGES(xml);

    }


    /**
     * Checks for whether PACKAGETOTALCHARGES is set or not.
     *
     * @returns true if PACKAGETOTALCHARGES is set, false if not
     */

    public boolean hasPACKAGETOTALCHARGES() {

        return (_PACKAGETOTALCHARGES != null);

    }


    /**
     * Discards PACKAGETOTALCHARGES's value.
     */

    public void deletePACKAGETOTALCHARGES() {

        _PACKAGETOTALCHARGES = null;

    }


    /**
     * Get the PACKAGEBASECHARGES property.
     */

    public PACKAGEBASECHARGES getPACKAGEBASECHARGES() {

        return (_PACKAGEBASECHARGES);

    }


    /**
     * Set the PACKAGEBASECHARGES property.
     */

    public void setPACKAGEBASECHARGES(PACKAGEBASECHARGES obj) {

        _PACKAGEBASECHARGES = obj;

    }


    protected void setPACKAGEBASECHARGES(XmlElement xml) {


        _PACKAGEBASECHARGES =

                new PACKAGEBASECHARGES(xml);

    }


    /**
     * Checks for whether PACKAGEBASECHARGES is set or not.
     *
     * @returns true if PACKAGEBASECHARGES is set, false if not
     */

    public boolean hasPACKAGEBASECHARGES() {

        return (_PACKAGEBASECHARGES != null);

    }


    /**
     * Discards PACKAGEBASECHARGES's value.
     */

    public void deletePACKAGEBASECHARGES() {

        _PACKAGEBASECHARGES = null;

    }


    /**
     * Get the PACKAGESERVICEOPTIONSCHARGES property.
     */

    public PACKAGESERVICEOPTIONSCHARGES getPACKAGESERVICEOPTIONSCHARGES() {

        return (_PACKAGESERVICEOPTIONSCHARGES);

    }


    /**
     * Set the PACKAGESERVICEOPTIONSCHARGES property.
     */

    public void setPACKAGESERVICEOPTIONSCHARGES(PACKAGESERVICEOPTIONSCHARGES obj) {

        _PACKAGESERVICEOPTIONSCHARGES = obj;

    }


    protected void setPACKAGESERVICEOPTIONSCHARGES(XmlElement xml) {


        _PACKAGESERVICEOPTIONSCHARGES =

                new PACKAGESERVICEOPTIONSCHARGES(xml);

    }


    /**
     * Checks for whether PACKAGESERVICEOPTIONSCHARGES is set or not.
     *
     * @returns true if PACKAGESERVICEOPTIONSCHARGES is set, false if not
     */

    public boolean hasPACKAGESERVICEOPTIONSCHARGES() {

        return (_PACKAGESERVICEOPTIONSCHARGES != null);

    }


    /**
     * Discards PACKAGESERVICEOPTIONSCHARGES's value.
     */

    public void deletePACKAGESERVICEOPTIONSCHARGES() {

        _PACKAGESERVICEOPTIONSCHARGES = null;

    }


    /**
     * Get the PKGWEIGHT property.
     */

    public PKGWEIGHT getPKGWEIGHT() {

        return (_PKGWEIGHT);

    }


    /**
     * Set the PKGWEIGHT property.
     */

    public void setPKGWEIGHT(PKGWEIGHT obj) {

        _PKGWEIGHT = obj;

    }


    protected void setPKGWEIGHT(XmlElement xml) {


        _PKGWEIGHT =

                new PKGWEIGHT(xml);

    }


    /**
     * Checks for whether PKGWEIGHT is set or not.
     *
     * @returns true if PKGWEIGHT is set, false if not
     */

    public boolean hasPKGWEIGHT() {

        return (_PKGWEIGHT != null);

    }


    /**
     * Discards PKGWEIGHT's value.
     */

    public void deletePKGWEIGHT() {

        _PKGWEIGHT = null;

    }


    /**
     * Get the BILLINGWEIGHT property.
     */

    public BILLINGWEIGHT getBILLINGWEIGHT() {

        return (_BILLINGWEIGHT);

    }


    /**
     * Set the BILLINGWEIGHT property.
     */

    public void setBILLINGWEIGHT(BILLINGWEIGHT obj) {

        _BILLINGWEIGHT = obj;

    }


    protected void setBILLINGWEIGHT(XmlElement xml) {


        _BILLINGWEIGHT =

                new BILLINGWEIGHT(xml);

    }


    /**
     * Checks for whether BILLINGWEIGHT is set or not.
     *
     * @returns true if BILLINGWEIGHT is set, false if not
     */

    public boolean hasBILLINGWEIGHT() {

        return (_BILLINGWEIGHT != null);

    }


    /**
     * Discards BILLINGWEIGHT's value.
     */

    public void deleteBILLINGWEIGHT() {

        _BILLINGWEIGHT = null;

    }


    /**
     * Get the PACKINGLIST property.
     */

    public PACKINGLIST getPACKINGLIST() {

        return (_PACKINGLIST);

    }


    /**
     * Set the PACKINGLIST property.
     */

    public void setPACKINGLIST(PACKINGLIST obj) {

        _PACKINGLIST = obj;

    }


    protected void setPACKINGLIST(XmlElement xml) {


        _PACKINGLIST =

                new PACKINGLIST(xml);

    }


    /**
     * Checks for whether PACKINGLIST is set or not.
     *
     * @returns true if PACKINGLIST is set, false if not
     */

    public boolean hasPACKINGLIST() {

        return (_PACKINGLIST != null);

    }


    /**
     * Discards PACKINGLIST's value.
     */

    public void deletePACKINGLIST() {

        _PACKINGLIST = null;

    }


    /**
     * Gets the XML tag name for this object.
     */

    public String getXmlTagName() {

        return ($RATEDPACKAGE);

    }


    /**
     * Gets the XML tag name for this class.
     */

    public static String getClassXmlTagName() {

        return ($RATEDPACKAGE);

    }


    /**
     * This flag is used to used to check whether
     * <p/>
     * the validators have been created.
     */

    transient protected static boolean _validators_created = false;



    /*

     * XML Validators

     */

    transient protected static XmlValidator

            _PKGERROR_validator_ = null;

    transient protected static XmlValidator

            _PKGSERVICE_validator_ = null;

    transient protected static XmlValidator

            _REFERENCE_validator_ = null;

    transient protected static XmlValidator

            _PACKAGETOTALCHARGES_validator_ = null;

    transient protected static XmlValidator

            _PACKAGEBASECHARGES_validator_ = null;

    transient protected static XmlValidator

            _PACKAGESERVICEOPTIONSCHARGES_validator_ = null;

    transient protected static XmlValidator

            _PKGWEIGHT_validator_ = null;

    transient protected static XmlValidator

            _BILLINGWEIGHT_validator_ = null;

    transient protected static XmlValidator

            _PACKINGLIST_validator_ = null;


    /**
     * Create the validators for this class.
     */

    protected static synchronized void createValidators() {


        if (_validators_created) {

            return;

        }


        _PKGERROR_validator_ = new XmlValidator("RATEDPACKAGE.PKGERROR", "Element",

                "RATEDPACKAGE/PKGERROR", true);


        _PKGSERVICE_validator_ = new XmlValidator("RATEDPACKAGE.PKGSERVICE", "Element",

                "RATEDPACKAGE/PKGSERVICE", true);


        _REFERENCE_validator_ = new XmlValidator("RATEDPACKAGE.REFERENCE", "Element",

                "RATEDPACKAGE/REFERENCE", true);


        _PACKAGETOTALCHARGES_validator_ = new XmlValidator("RATEDPACKAGE.PACKAGETOTALCHARGES", "Element",

                "RATEDPACKAGE/PACKAGETOTALCHARGES", true);


        _PACKAGEBASECHARGES_validator_ = new XmlValidator("RATEDPACKAGE.PACKAGEBASECHARGES", "Element",

                "RATEDPACKAGE/PACKAGEBASECHARGES", true);


        _PACKAGESERVICEOPTIONSCHARGES_validator_ = new XmlValidator("RATEDPACKAGE.PACKAGESERVICEOPTIONSCHARGES", "Element",

                "RATEDPACKAGE/PACKAGESERVICEOPTIONSCHARGES", true);


        _PKGWEIGHT_validator_ = new XmlValidator("RATEDPACKAGE.PKGWEIGHT", "Element",

                "RATEDPACKAGE/PKGWEIGHT", true);


        _BILLINGWEIGHT_validator_ = new XmlValidator("RATEDPACKAGE.BILLINGWEIGHT", "Element",

                "RATEDPACKAGE/BILLINGWEIGHT", true);


        _PACKINGLIST_validator_ = new XmlValidator("RATEDPACKAGE.PACKINGLIST", "Element",

                "RATEDPACKAGE/PACKINGLIST", false);


        _validators_created = true;

    }


    /**
     * Checks this object to see if it will produce valid XML.
     */

    public boolean isValid() {


        if (!(this instanceof Validateable)) {

            return (true);

        }


        Vector errors = ((Validateable) this).getValidationErrors(true);

        if (errors == null || errors.size() < 1) {

            return (true);

        }


        return (false);

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     */

    public Vector getValidationErrors() {

        return (getValidationErrors(false));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error) {

        return (getValidationErrors(return_on_error, true));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error, boolean traverse) {


        createValidators();


        Vector errors;

        if (_unexpected_xml_errors_ != null &&

                _unexpected_xml_errors_.size() > 0) {

            errors = (Vector) _unexpected_xml_errors_.clone();

            if (return_on_error) {

                return (errors);

            }

        } else {

            errors = new Vector();

        }


        XmlValidationError e;


        if (!traverse) {

            if (errors.size() < 1) {

                return (null);

            }


            return (errors);

        }


        boolean is_valid;


        is_valid = _PKGERROR_validator_.isValid(_PKGERROR,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PKGSERVICE_validator_.isValid(_PKGSERVICE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _REFERENCE_validator_.isValid(_REFERENCE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PACKAGETOTALCHARGES_validator_.isValid(_PACKAGETOTALCHARGES,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PACKAGEBASECHARGES_validator_.isValid(_PACKAGEBASECHARGES,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PACKAGESERVICEOPTIONSCHARGES_validator_.isValid(_PACKAGESERVICEOPTIONSCHARGES,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PKGWEIGHT_validator_.isValid(_PKGWEIGHT,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _BILLINGWEIGHT_validator_.isValid(_BILLINGWEIGHT,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PACKINGLIST_validator_.isValid(_PACKINGLIST,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        if (errors.size() < 1) {

            return (null);

        }


        return (errors);

    }


    /**
     * Checks the XML to see whether it matches the
     * <p/>
     * XML contents of this class.
     */

    public static boolean matches(XmlElement xml) {


        if (xml == null) {

            return (false);

        }


        return (xml.equals($RATEDPACKAGE));

    }


    /**
     * This method unmarshals an XML document instance
     * <p/>
     * into an instance of this class.
     */

    public static RATEDPACKAGE unmarshal(InputStream in) throws Exception {


        RATEDPACKAGE obj = new RATEDPACKAGE();

        ObjectFactory.unmarshal(obj, in);

        return (obj);

    }


    /**
     * Populates this object with the values from the
     * <p/>
     * parsed XML.
     */

    public void fromXml(XmlElement xml) {


        if (xml == null) {

            return;

        }


        if (!xml.equals($RATEDPACKAGE)) {

            return;

        }





        /*

         * Get the contained XmlElement, this is what we process

         */

        xml = xml.getSubElementAt(0);

        if (xml == null) {

            return;

        }


        if (xml.equals($PKGERROR)) {

            setPKGERROR(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PKGSERVICE)) {

            setPKGSERVICE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($REFERENCE)) {

            setREFERENCE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKAGETOTALCHARGES)) {

            setPACKAGETOTALCHARGES(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKAGEBASECHARGES)) {

            setPACKAGEBASECHARGES(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKAGESERVICEOPTIONSCHARGES)) {

            setPACKAGESERVICEOPTIONSCHARGES(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PKGWEIGHT)) {

            setPKGWEIGHT(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($BILLINGWEIGHT)) {

            setBILLINGWEIGHT(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKINGLIST)) {

            setPACKINGLIST(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml != null) {


            _unexpected_xml_errors_ =

                    XmlValidationError.addUnexpectedXmlError(this, _unexpected_xml_errors_, xml);

            xml = xml.next();

        }

    }


    /**
     * This method marshals this object into an
     * <p/>
     * XML instance document.
     */

    public void marshal(OutputStream out) {

        toXml(out);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream) {

        toXml(stream, true);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream, String indent, boolean embed_files) {


        if (stream instanceof XmlOutputStream) {

            toXml(stream, embed_files);

        } else {

            FormattedOutputStream out =

                    new FormattedOutputStream(stream);

            out.setIndentString(indent);

            toXml(out, embed_files);

        }

    }


    /**
     * Serializes this object to XML.
     */

    public void toXml(OutputStream stream, boolean embed_files) {


        XmlOutputStream out = null;

        if (stream instanceof XmlOutputStream) {

            out = (XmlOutputStream) stream;

        } else {

            out = new RawOutputStream(stream);

        }


        out.writeStartTag(getXmlTagName(), false);

        out.incrementIndent();


        Object PKGERROR_value = getPKGERROR();

        if (PKGERROR_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PKGERROR_value,

                    embed_files);

        }


        Object PKGSERVICE_value = getPKGSERVICE();

        if (PKGSERVICE_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PKGSERVICE_value,

                    embed_files);

        }


        Object REFERENCE_value = getREFERENCE();

        if (REFERENCE_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) REFERENCE_value,

                    embed_files);

        }


        Object PACKAGETOTALCHARGES_value = getPACKAGETOTALCHARGES();

        if (PACKAGETOTALCHARGES_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PACKAGETOTALCHARGES_value,

                    embed_files);

        }


        Object PACKAGEBASECHARGES_value = getPACKAGEBASECHARGES();

        if (PACKAGEBASECHARGES_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PACKAGEBASECHARGES_value,

                    embed_files);

        }


        Object PACKAGESERVICEOPTIONSCHARGES_value = getPACKAGESERVICEOPTIONSCHARGES();

        if (PACKAGESERVICEOPTIONSCHARGES_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PACKAGESERVICEOPTIONSCHARGES_value,

                    embed_files);

        }


        Object PKGWEIGHT_value = getPKGWEIGHT();

        if (PKGWEIGHT_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PKGWEIGHT_value,

                    embed_files);

        }


        Object BILLINGWEIGHT_value = getBILLINGWEIGHT();

        if (BILLINGWEIGHT_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) BILLINGWEIGHT_value,

                    embed_files);

        }


        Object PACKINGLIST_value = getPACKINGLIST();

        if (PACKINGLIST_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PACKINGLIST_value,

                    embed_files);

        }


        out.decrementIndent();

        out.writeEndTag(getXmlTagName());

    }


    /**
     * Get the  birth certificate for this object.
     */

    public String birthCertificate() {

        return ("1hge137:cy11q2rm:chtmj6");

    }

}
