/*

 * DO NOT EDIT!

 *

 * This file was generated by the Breeze XML Studio Java Export Wizard.

 *

 *        Project: connectship

 *     Class Name: PKG_2

 *           Date: Fri Feb 22 21:58:51 PST 2002

 * Breeze Version: 2.2.1 build 114

 *

 * IMPORTANT: Please see your Breeze license for more information on

 *            where and how this generated code may be used.

 *

 */


package com.owd.core.csXml;


import com.tbf.xml.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Vector;


/**
 * PKG_2 class.
 */

public class PKG_2

        implements com.tbf.xml.XmlObject, Validateable, java.io.Serializable {
private final static Logger log =  LogManager.getLogger();


    /**
     * Constant for "TRACKINGNUMBER" node name.
     */

    public static final String $TRACKINGNUMBER = "TRACKINGNUMBER";


    /**
     * Constant for "PACKPRINT" node name.
     */

    public static final String $PACKPRINT = "PACKPRINT";


    /**
     * Constant for "TERMS" node name.
     */

    public static final String $TERMS = "TERMS";


    /**
     * Constant for "PKGWEIGHT" node name.
     */

    public static final String $PKGWEIGHT = "PKGWEIGHT";


    /**
     * Constant for "PKG" node name.
     */

    public static final String $PKG = "PKG";


    /**
     * Constant for "ITEMS" node name.
     */

    public static final String $ITEMS = "ITEMS";


    /**
     * Constant for "PACKTYPE" node name.
     */

    public static final String $PACKTYPE = "PACKTYPE";


    /**
     * Constant for "SHIPPERINFO" node name.
     */

    public static final String $SHIPPERINFO = "SHIPPERINFO";


    /**
     * Constant for "REFERENCE" node name.
     */

    public static final String $REFERENCE = "REFERENCE";


    /**
     * Constant for "PACKAGESERVICEOPTIONS" node name.
     */

    public static final String $PACKAGESERVICEOPTIONS = "PACKAGESERVICEOPTIONS";


    /**
     * Constant for "DIMENSION" node name.
     */

    public static final String $DIMENSION = "DIMENSION";


    /**
     * Constant for "CONSIGNEE" node name.
     */

    public static final String $CONSIGNEE = "CONSIGNEE";


    /**
     * Constant for "PACKAGING" node name.
     */

    public static final String $PACKAGING = "PACKAGING";


    /**
     * Constant for "LABELFORMAT" node name.
     */

    public static final String $LABELFORMAT = "LABELFORMAT";


    /**
     * Constant for "LABELPRINT" node name.
     */

    public static final String $LABELPRINT = "LABELPRINT";


    protected PKGWEIGHT _PKGWEIGHT = null;

    protected DIMENSION _DIMENSION = null;

    protected String _PACKAGING = null;

    protected REFERENCE_3 _REFERENCE = null;

    protected String _TRACKINGNUMBER = null;

    protected PACKAGESERVICEOPTIONS_1 _PACKAGESERVICEOPTIONS = null;

    protected CONSIGNEE_1 _CONSIGNEE = null;

    protected SHIPPERINFO _SHIPPERINFO = null;

    protected String _TERMS = null;

    protected String _LABELFORMAT = null;

    protected LABELPRINT _LABELPRINT = null;

    protected ITEMS _ITEMS = null;

    protected String _PACKTYPE = null;

    protected PACKPRINT _PACKPRINT = null;


    /**
     * Storage for UNEXPECTED_XML errors.
     */

    protected Vector _unexpected_xml_errors_ = null;


    /**
     * Default no args constructor.
     */

    public PKG_2() {

    }


    /**
     * Creates and populates an instance from the provided parse tree.
     *
     * @param xml the parse tree
     */

    public PKG_2(XmlElement xml) {

        fromXml(xml);

    }


    /**
     * Get the PKGWEIGHT property.
     */

    public PKGWEIGHT getPKGWEIGHT() {

        return (_PKGWEIGHT);

    }


    /**
     * Set the PKGWEIGHT property.
     */

    public void setPKGWEIGHT(PKGWEIGHT obj) {

        _PKGWEIGHT = obj;

    }


    protected void setPKGWEIGHT(XmlElement xml) {


        _PKGWEIGHT =

                new PKGWEIGHT(xml);

    }


    /**
     * Checks for whether PKGWEIGHT is set or not.
     *
     * @returns true if PKGWEIGHT is set, false if not
     */

    public boolean hasPKGWEIGHT() {

        return (_PKGWEIGHT != null);

    }


    /**
     * Discards PKGWEIGHT's value.
     */

    public void deletePKGWEIGHT() {

        _PKGWEIGHT = null;

    }


    /**
     * Get the DIMENSION property.
     */

    public DIMENSION getDIMENSION() {

        return (_DIMENSION);

    }


    /**
     * Set the DIMENSION property.
     */

    public void setDIMENSION(DIMENSION obj) {

        _DIMENSION = obj;

    }


    protected void setDIMENSION(XmlElement xml) {


        _DIMENSION =

                new DIMENSION(xml);

    }


    /**
     * Checks for whether DIMENSION is set or not.
     *
     * @returns true if DIMENSION is set, false if not
     */

    public boolean hasDIMENSION() {

        return (_DIMENSION != null);

    }


    /**
     * Discards DIMENSION's value.
     */

    public void deleteDIMENSION() {

        _DIMENSION = null;

    }


    /**
     * Get the PACKAGING property.
     */

    public String getPACKAGING() {

        return (_PACKAGING);

    }


    /**
     * Set the PACKAGING property.
     */

    public void setPACKAGING(String newValue) {

        _PACKAGING = newValue;

    }


    /**
     * Checks for whether PACKAGING is set or not.
     *
     * @returns true if PACKAGING is set, false if not
     */

    public boolean hasPACKAGING() {

        return (_PACKAGING != null);

    }


    /**
     * Discards PACKAGING's value.
     */

    public void deletePACKAGING() {

        _PACKAGING = null;

    }


    /**
     * Get the REFERENCE property.
     */

    public REFERENCE_3 getREFERENCE() {

        return (_REFERENCE);

    }


    /**
     * Set the REFERENCE property.
     */

    public void setREFERENCE(REFERENCE_3 obj) {

        _REFERENCE = obj;

    }


    protected void setREFERENCE(XmlElement xml) {


        _REFERENCE =

                new REFERENCE_3(xml);

    }


    /**
     * Checks for whether REFERENCE is set or not.
     *
     * @returns true if REFERENCE is set, false if not
     */

    public boolean hasREFERENCE() {

        return (_REFERENCE != null);

    }


    /**
     * Discards REFERENCE's value.
     */

    public void deleteREFERENCE() {

        _REFERENCE = null;

    }


    /**
     * Get the TRACKINGNUMBER property.
     */

    public String getTRACKINGNUMBER() {

        return (_TRACKINGNUMBER);

    }


    /**
     * Set the TRACKINGNUMBER property.
     */

    public void setTRACKINGNUMBER(String newValue) {

        _TRACKINGNUMBER = newValue;

    }


    /**
     * Checks for whether TRACKINGNUMBER is set or not.
     *
     * @returns true if TRACKINGNUMBER is set, false if not
     */

    public boolean hasTRACKINGNUMBER() {

        return (_TRACKINGNUMBER != null);

    }


    /**
     * Discards TRACKINGNUMBER's value.
     */

    public void deleteTRACKINGNUMBER() {

        _TRACKINGNUMBER = null;

    }


    /**
     * Get the PACKAGESERVICEOPTIONS property.
     */

    public PACKAGESERVICEOPTIONS_1 getPACKAGESERVICEOPTIONS() {

        return (_PACKAGESERVICEOPTIONS);

    }


    /**
     * Set the PACKAGESERVICEOPTIONS property.
     */

    public void setPACKAGESERVICEOPTIONS(PACKAGESERVICEOPTIONS_1 obj) {

        _PACKAGESERVICEOPTIONS = obj;

    }


    protected void setPACKAGESERVICEOPTIONS(XmlElement xml) {


        _PACKAGESERVICEOPTIONS =

                new PACKAGESERVICEOPTIONS_1(xml);

    }


    /**
     * Checks for whether PACKAGESERVICEOPTIONS is set or not.
     *
     * @returns true if PACKAGESERVICEOPTIONS is set, false if not
     */

    public boolean hasPACKAGESERVICEOPTIONS() {

        return (_PACKAGESERVICEOPTIONS != null);

    }


    /**
     * Discards PACKAGESERVICEOPTIONS's value.
     */

    public void deletePACKAGESERVICEOPTIONS() {

        _PACKAGESERVICEOPTIONS = null;

    }


    /**
     * Get the CONSIGNEE property.
     */

    public CONSIGNEE_1 getCONSIGNEE() {

        return (_CONSIGNEE);

    }


    /**
     * Set the CONSIGNEE property.
     */

    public void setCONSIGNEE(CONSIGNEE_1 obj) {

        _CONSIGNEE = obj;

    }


    protected void setCONSIGNEE(XmlElement xml) {


        _CONSIGNEE =

                new CONSIGNEE_1(xml);

    }


    /**
     * Checks for whether CONSIGNEE is set or not.
     *
     * @returns true if CONSIGNEE is set, false if not
     */

    public boolean hasCONSIGNEE() {

        return (_CONSIGNEE != null);

    }


    /**
     * Discards CONSIGNEE's value.
     */

    public void deleteCONSIGNEE() {

        _CONSIGNEE = null;

    }


    /**
     * Get the SHIPPERINFO property.
     */

    public SHIPPERINFO getSHIPPERINFO() {

        return (_SHIPPERINFO);

    }


    /**
     * Set the SHIPPERINFO property.
     */

    public void setSHIPPERINFO(SHIPPERINFO obj) {

        _SHIPPERINFO = obj;

    }


    protected void setSHIPPERINFO(XmlElement xml) {


        _SHIPPERINFO =

                new SHIPPERINFO(xml);

    }


    /**
     * Checks for whether SHIPPERINFO is set or not.
     *
     * @returns true if SHIPPERINFO is set, false if not
     */

    public boolean hasSHIPPERINFO() {

        return (_SHIPPERINFO != null);

    }


    /**
     * Discards SHIPPERINFO's value.
     */

    public void deleteSHIPPERINFO() {

        _SHIPPERINFO = null;

    }


    /**
     * Get the TERMS property.
     */

    public String getTERMS() {

        return (_TERMS);

    }


    /**
     * Set the TERMS property.
     */

    public void setTERMS(String newValue) {

        _TERMS = newValue;

    }


    /**
     * Checks for whether TERMS is set or not.
     *
     * @returns true if TERMS is set, false if not
     */

    public boolean hasTERMS() {

        return (_TERMS != null);

    }


    /**
     * Discards TERMS's value.
     */

    public void deleteTERMS() {

        _TERMS = null;

    }


    /**
     * Get the LABELFORMAT property.
     */

    public String getLABELFORMAT() {

        return (_LABELFORMAT);

    }


    /**
     * Set the LABELFORMAT property.
     */

    public void setLABELFORMAT(String newValue) {

        _LABELFORMAT = newValue;

    }


    /**
     * Checks for whether LABELFORMAT is set or not.
     *
     * @returns true if LABELFORMAT is set, false if not
     */

    public boolean hasLABELFORMAT() {

        return (_LABELFORMAT != null);

    }


    /**
     * Discards LABELFORMAT's value.
     */

    public void deleteLABELFORMAT() {

        _LABELFORMAT = null;

    }


    /**
     * Get the LABELPRINT property.
     */

    public LABELPRINT getLABELPRINT() {

        return (_LABELPRINT);

    }


    /**
     * Set the LABELPRINT property.
     */

    public void setLABELPRINT(LABELPRINT obj) {

        _LABELPRINT = obj;

    }


    protected void setLABELPRINT(XmlElement xml) {


        _LABELPRINT =

                new LABELPRINT(xml);

    }


    /**
     * Checks for whether LABELPRINT is set or not.
     *
     * @returns true if LABELPRINT is set, false if not
     */

    public boolean hasLABELPRINT() {

        return (_LABELPRINT != null);

    }


    /**
     * Discards LABELPRINT's value.
     */

    public void deleteLABELPRINT() {

        _LABELPRINT = null;

    }


    /**
     * Get the ITEMS property.
     */

    public ITEMS getITEMS() {

        return (_ITEMS);

    }


    /**
     * Set the ITEMS property.
     */

    public void setITEMS(ITEMS obj) {

        _ITEMS = obj;

    }


    protected void setITEMS(XmlElement xml) {


        _ITEMS =

                new ITEMS(xml);

    }


    /**
     * Checks for whether ITEMS is set or not.
     *
     * @returns true if ITEMS is set, false if not
     */

    public boolean hasITEMS() {

        return (_ITEMS != null);

    }


    /**
     * Discards ITEMS's value.
     */

    public void deleteITEMS() {

        _ITEMS = null;

    }


    /**
     * Get the PACKTYPE property.
     */

    public String getPACKTYPE() {

        return (_PACKTYPE);

    }


    /**
     * Set the PACKTYPE property.
     */

    public void setPACKTYPE(String newValue) {

        _PACKTYPE = newValue;

    }


    /**
     * Checks for whether PACKTYPE is set or not.
     *
     * @returns true if PACKTYPE is set, false if not
     */

    public boolean hasPACKTYPE() {

        return (_PACKTYPE != null);

    }


    /**
     * Discards PACKTYPE's value.
     */

    public void deletePACKTYPE() {

        _PACKTYPE = null;

    }


    /**
     * Get the PACKPRINT property.
     */

    public PACKPRINT getPACKPRINT() {

        return (_PACKPRINT);

    }


    /**
     * Set the PACKPRINT property.
     */

    public void setPACKPRINT(PACKPRINT obj) {

        _PACKPRINT = obj;

    }


    protected void setPACKPRINT(XmlElement xml) {


        _PACKPRINT =

                new PACKPRINT(xml);

    }


    /**
     * Checks for whether PACKPRINT is set or not.
     *
     * @returns true if PACKPRINT is set, false if not
     */

    public boolean hasPACKPRINT() {

        return (_PACKPRINT != null);

    }


    /**
     * Discards PACKPRINT's value.
     */

    public void deletePACKPRINT() {

        _PACKPRINT = null;

    }


    /**
     * Gets the XML tag name for this object.
     */

    public String getXmlTagName() {

        return ($PKG);

    }


    /**
     * Gets the XML tag name for this class.
     */

    public static String getClassXmlTagName() {

        return ($PKG);

    }


    /**
     * This flag is used to used to check whether
     * <p/>
     * the validators have been created.
     */

    transient protected static boolean _validators_created = false;



    /*

     * XML Validators

     */

    transient protected static XmlValidator

            _PKGWEIGHT_validator_ = null;

    transient protected static XmlValidator

            _DIMENSION_validator_ = null;

    transient protected static XmlStringValidator

            _PACKAGING_validator_ = null;

    transient protected static XmlValidator

            _REFERENCE_validator_ = null;

    transient protected static XmlValidator

            _PACKAGESERVICEOPTIONS_validator_ = null;

    transient protected static XmlValidator

            _CONSIGNEE_validator_ = null;

    transient protected static XmlValidator

            _SHIPPERINFO_validator_ = null;

    transient protected static XmlValidator

            _LABELPRINT_validator_ = null;

    transient protected static XmlValidator

            _ITEMS_validator_ = null;

    transient protected static XmlValidator

            _PACKPRINT_validator_ = null;


    /**
     * Create the validators for this class.
     */

    protected static synchronized void createValidators() {


        if (_validators_created) {

            return;

        }


        _PKGWEIGHT_validator_ = new XmlValidator("PKG_2.PKGWEIGHT", "Element",

                "PKG/PKGWEIGHT", true);


        _DIMENSION_validator_ = new XmlValidator("PKG_2.DIMENSION", "Element",

                "PKG/DIMENSION", false);


        _PACKAGING_validator_ = new XmlStringValidator("PKG_2.PACKAGING", "Element",

                "PKG/PACKAGING", -1, -1, true);


        _REFERENCE_validator_ = new XmlValidator("PKG_2.REFERENCE", "Element",

                "PKG/REFERENCE", true);


        _PACKAGESERVICEOPTIONS_validator_ = new XmlValidator("PKG_2.PACKAGESERVICEOPTIONS", "Element",

                "PKG/PACKAGESERVICEOPTIONS", false);


        _CONSIGNEE_validator_ = new XmlValidator("PKG_2.CONSIGNEE", "Element",

                "PKG/CONSIGNEE", false);


        _SHIPPERINFO_validator_ = new XmlValidator("PKG_2.SHIPPERINFO", "Element",

                "PKG/SHIPPERINFO", false);


        _LABELPRINT_validator_ = new XmlValidator("PKG_2.LABELPRINT", "Element",

                "PKG/LABELPRINT", false);


        _ITEMS_validator_ = new XmlValidator("PKG_2.ITEMS", "Element",

                "PKG/ITEMS", false);


        _PACKPRINT_validator_ = new XmlValidator("PKG_2.PACKPRINT", "Element",

                "PKG/PACKPRINT", false);


        _validators_created = true;

    }


    /**
     * Checks this object to see if it will produce valid XML.
     */

    public boolean isValid() {


        if (!(this instanceof Validateable)) {

            return (true);

        }


        Vector errors = ((Validateable) this).getValidationErrors(true);

        if (errors == null || errors.size() < 1) {

            return (true);

        }


        return (false);

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     */

    public Vector getValidationErrors() {

        return (getValidationErrors(false));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error) {

        return (getValidationErrors(return_on_error, true));

    }


    /**
     * Checks each field on the object for validity and
     * <p/>
     * returns a Vector holding the validation errors.
     *
     * @return a Vector containing the validation errors
     * @see com.tbf.xml.XmlValidationError
     */

    public Vector getValidationErrors(boolean return_on_error, boolean traverse) {


        createValidators();


        Vector errors;

        if (_unexpected_xml_errors_ != null &&

                _unexpected_xml_errors_.size() > 0) {

            errors = (Vector) _unexpected_xml_errors_.clone();

            if (return_on_error) {

                return (errors);

            }

        } else {

            errors = new Vector();

        }


        XmlValidationError e;

        e = _PACKAGING_validator_.validate(_PACKAGING);

        if (e != null) {

            errors.addElement(e);

            if (return_on_error) {

                return (errors);

            }

        }


        if (!traverse) {

            if (errors.size() < 1) {

                return (null);

            }


            return (errors);

        }


        boolean is_valid;


        is_valid = _PKGWEIGHT_validator_.isValid(_PKGWEIGHT,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _DIMENSION_validator_.isValid(_DIMENSION,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _REFERENCE_validator_.isValid(_REFERENCE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PACKAGESERVICEOPTIONS_validator_.isValid(_PACKAGESERVICEOPTIONS,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _CONSIGNEE_validator_.isValid(_CONSIGNEE,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _SHIPPERINFO_validator_.isValid(_SHIPPERINFO,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _LABELPRINT_validator_.isValid(_LABELPRINT,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _ITEMS_validator_.isValid(_ITEMS,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        is_valid = _PACKPRINT_validator_.isValid(_PACKPRINT,

                errors, return_on_error, traverse);

        if (!is_valid && return_on_error) {

            return (errors);

        }


        if (errors.size() < 1) {

            return (null);

        }


        return (errors);

    }


    /**
     * Checks the XML to see whether it matches the
     * <p/>
     * XML contents of this class.
     */

    public static boolean matches(XmlElement xml) {


        if (xml == null) {

            return (false);

        }


        return (xml.equals($PKG));

    }


    /**
     * This method unmarshals an XML document instance
     * <p/>
     * into an instance of this class.
     */

    public static PKG_2 unmarshal(InputStream in) throws Exception {


        PKG_2 obj = new PKG_2();

        ObjectFactory.unmarshal(obj, in);

        return (obj);

    }


    /**
     * Populates this object with the values from the
     * <p/>
     * parsed XML.
     */

    public void fromXml(XmlElement xml) {


        if (xml == null) {

            return;

        }


        if (!xml.equals($PKG)) {

            return;

        }





        /*

         * Get the contained XmlElement, this is what we process

         */

        xml = xml.getSubElementAt(0);

        if (xml == null) {

            return;

        }


        if (xml.equals($PKGWEIGHT)) {

            setPKGWEIGHT(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($DIMENSION)) {

            setDIMENSION(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKAGING)) {

            setPACKAGING(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($REFERENCE)) {

            setREFERENCE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($TRACKINGNUMBER)) {

            setTRACKINGNUMBER(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKAGESERVICEOPTIONS)) {

            setPACKAGESERVICEOPTIONS(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($CONSIGNEE)) {

            setCONSIGNEE(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($SHIPPERINFO)) {

            setSHIPPERINFO(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($TERMS)) {

            setTERMS(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($LABELFORMAT)) {

            setLABELFORMAT(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($LABELPRINT)) {

            setLABELPRINT(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($ITEMS)) {

            setITEMS(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKTYPE)) {

            setPACKTYPE(xml.getData());

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml.equals($PACKPRINT)) {

            setPACKPRINT(xml);

            xml = xml.next();

            if (xml == null) {

                return;

            }

        }


        if (xml != null) {


            _unexpected_xml_errors_ =

                    XmlValidationError.addUnexpectedXmlError(this, _unexpected_xml_errors_, xml);

            xml = xml.next();

        }

    }


    /**
     * This method marshals this object into an
     * <p/>
     * XML instance document.
     */

    public void marshal(OutputStream out) {

        toXml(out);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream) {

        toXml(stream, true);

    }


    /**
     * Serializes this object to Formatted XML.
     */

    public void toXml(OutputStream stream, String indent, boolean embed_files) {


        if (stream instanceof XmlOutputStream) {

            toXml(stream, embed_files);

        } else {

            FormattedOutputStream out =

                    new FormattedOutputStream(stream);

            out.setIndentString(indent);

            toXml(out, embed_files);

        }

    }


    /**
     * Serializes this object to XML.
     */

    public void toXml(OutputStream stream, boolean embed_files) {


        XmlOutputStream out = null;

        if (stream instanceof XmlOutputStream) {

            out = (XmlOutputStream) stream;

        } else {

            out = new RawOutputStream(stream);

        }


        out.writeStartTag(getXmlTagName(), false);

        out.incrementIndent();


        Object PKGWEIGHT_value = getPKGWEIGHT();

        if (PKGWEIGHT_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PKGWEIGHT_value,

                    embed_files);

        }


        Object DIMENSION_value = getDIMENSION();

        if (DIMENSION_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) DIMENSION_value,

                    embed_files);

        }

        out.write($PACKAGING,

                _PACKAGING);


        Object REFERENCE_value = getREFERENCE();

        if (REFERENCE_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) REFERENCE_value,

                    embed_files);

        }

        out.write($TRACKINGNUMBER,

                _TRACKINGNUMBER);


        Object PACKAGESERVICEOPTIONS_value = getPACKAGESERVICEOPTIONS();

        if (PACKAGESERVICEOPTIONS_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PACKAGESERVICEOPTIONS_value,

                    embed_files);

        }


        Object CONSIGNEE_value = getCONSIGNEE();

        if (CONSIGNEE_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) CONSIGNEE_value,

                    embed_files);

        }


        Object SHIPPERINFO_value = getSHIPPERINFO();

        if (SHIPPERINFO_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) SHIPPERINFO_value,

                    embed_files);

        }

        out.write($TERMS,

                _TERMS);

        out.write($LABELFORMAT,

                _LABELFORMAT);


        Object LABELPRINT_value = getLABELPRINT();

        if (LABELPRINT_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) LABELPRINT_value,

                    embed_files);

        }


        Object ITEMS_value = getITEMS();

        if (ITEMS_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) ITEMS_value,

                    embed_files);

        }

        out.write($PACKTYPE,

                _PACKTYPE);


        Object PACKPRINT_value = getPACKPRINT();

        if (PACKPRINT_value instanceof XmlObject) {

            out.write(null,

                    (XmlObject) PACKPRINT_value,

                    embed_files);

        }


        out.decrementIndent();

        out.writeEndTag(getXmlTagName());

    }


    /**
     * Get the  birth certificate for this object.
     */

    public String birthCertificate() {

        return ("1hge137:cy11q2zz:10uu60a");

    }

}
